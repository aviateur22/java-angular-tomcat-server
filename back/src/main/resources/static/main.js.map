{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/flash-message/flash-message.component.ts","./src/app/components/flash-message/flash-message.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/http.interceptor.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/directives/show-on-focus.directive.ts","./src/app/modules/auth/models/captcha.model.ts","./src/app/modules/auth/models/login-dto.model.ts","./src/app/modules/auth/models/register-dto.model.ts","./src/app/modules/auth/pages/login-page/login-page.component.ts","./src/app/modules/auth/pages/login-page/login-page.component.html","./src/app/modules/auth/pages/register-page/register-page.component.ts","./src/app/modules/auth/pages/register-page/register-page.component.html","./src/app/modules/auth/routes/auth.routing.ts","./src/app/modules/auth/services/auth.service.ts","./src/app/modules/auth/store/auth-store/action.ts","./src/app/modules/auth/store/auth-store/effect.ts","./src/app/modules/auth/store/auth-store/reducer.ts","./src/app/modules/auth/store/auth-store/selector.ts","./src/app/modules/auth/validators/password.validator.ts","./src/app/pages/error-page/error-page.component.ts","./src/app/pages/error-page/error-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/not-found-page/not-found-page.component.ts","./src/app/pages/not-found-page/not-found-page.component.html","./src/app/pages/user-page/user-page.component.ts","./src/app/pages/user-page/user-page.component.html","./src/app/services/home.service.ts","./src/app/services/user.service.ts","./src/environments/environment.dev.ts","./src/main.ts","./src/store/app.state.ts","./src/store/flash-message-store/action.ts","./src/store/flash-message-store/effect.ts","./src/store/flash-message-store/reducer.ts","./src/store/flash-message-store/selector.ts","./src/store/user-ident-store/action.ts","./src/store/user-ident-store/effect.ts","./src/store/user-ident-store/reducer.ts","./src/store/user-ident-store/selector.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { environment } from 'src/environments/environment';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\n\nconst routes: Routes = [\n  {\n    path: environment.webapp_path,\n    children: [\n      { path: \"\", component: HomePageComponent, title: \"Accueil\"},\n      { path: \"error\", component: ErrorPageComponent, title: \"Erreur\"},\n      { path: \"users-page\", component: UserPageComponent, title: \"Page users\"},\n      { path: \"not-found-page\", component: NotFoundPageComponent, title: \"404\"}\n    ]\n\n  },\n  { path: \"\", redirectTo: \"/lalamiam\", pathMatch: \"full\"},\n  { path: \"**\", redirectTo:\"not-found-page\", title: '404'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lalamiam';\n}\n","<app-flash-message></app-flash-message>\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { isDevMode, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from 'src/store/app.state';\nimport { UserEffect } from 'src/store/user-ident-store/effect';\nimport { FlashMessageEffect } from 'src/store/flash-message-store/effect';\nimport { HandlerHttpInterceptor } from './http.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { FlashMessageComponent } from './components/flash-message/flash-message.component';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\nimport { AuthModule } from './modules/auth/auth.module';\n\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomePageComponent,\n    NotFoundPageComponent,\n    UserPageComponent,\n    FlashMessageComponent,\n    ErrorPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AuthModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([UserEffect, FlashMessageEffect]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode(), serialize: {\n      replacer: (_key, value) => (typeof value === \"bigint\" ? value.toString() : value)\n    }\n  }),\n  InputTextModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass:HandlerHttpInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { messageSelector, isMessageErrorSelector } from 'src/store/flash-message-store/selector';\n\n@Component({\n  selector: 'app-flash-message',\n  templateUrl: './flash-message.component.html',\n  styleUrls: ['./flash-message.component.css']\n})\nexport class FlashMessageComponent {\n\n  message$: Observable<string>;\n  isErrorMessage$: Observable<boolean>\n\n  constructor(private _store: Store<AppState>) {\n    this.message$ = this._store.pipe(select(messageSelector));\n    this.isErrorMessage$ = this._store.pipe(select(isMessageErrorSelector));\n\n  }\n}\n","<div *ngIf=\"(message$ | async) as message\">\n  <p>{{message}}</p>\n</div>\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { getEmailSelector } from 'src/store/user-ident-store/selector';\nimport * as Action from 'src/app/modules/auth/store/auth-store/action'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  userEmail$: Observable<string>;\n\n  constructor(private _store: Store<AppState>) {\n    this.userEmail$ = this._store.pipe(select(getEmailSelector));\n\n  }\n\n  logout() {\n    this._store.dispatch(Action.logout())\n  }\n\n}\n","<nav class=\"navbar\">\n  <div class=\"navbar-logo\">\n    <img class=\"small\" src=\"assets/hamburger.jpg\" alt=\"My App Logo\" />\n  </div>\n  <ul class=\"navbar-links\">\n      <li><a routerLink=\"/lalamiam\">Home</a></li>\n      <li><a routerLink=\"/lalamiam/users-page\">users</a></li>\n      <li><a routerLink=\"/lalamiam/connexion\">connexion</a></li>\n  </ul>\n\n  <div *ngIf=\"(userEmail$ | async) as user\">\n    <button (click)=\"logout()\">\n      deconnexion\n    </button>\n  </div>\n</nav>\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable()\nexport class HandlerHttpInterceptor implements HttpInterceptor {\n\n  constructor(private _injector: Injector) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(request.urlWithParams.includes('/api/')){\n      console.log('form_csrf_token pour api request: ' + localStorage.getItem('form-csrf-token'));\n      const token: string| null = localStorage.getItem('token');\n      const formToken: string|null = localStorage.getItem('form-csrf-token');\n      request = request.clone({\n        withCredentials: true,\n        setHeaders: {\n          authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Form-Csrf-Token': formToken === null ? '' : formToken\n        }\n      });\n    }\n    return next.handle(request).pipe(\n      tap(event=>{\n        if(event instanceof HttpResponse) {\n          console.log(`liste des headers:`);\n          console.log(event.headers)\n          console.log(`form-csrf-token: ${event.headers.get('form-csrf-token')}`)\n          const csrfToken = event.headers.get('form-csrf-token');\n          if (csrfToken) {\n            localStorage.setItem('form-csrf-token', csrfToken);\n          }\n        }\n      }),\n      tap({\n        error: (error: HttpErrorResponse)=>{\n          const errorStatus: number = error.status;\n          const router = this._injector.get(Router);\n          const webapp_path: string = environment.webapp_path !== '' ?\n          environment.webapp_path+'/' : '';\n          switch(errorStatus) {\n            case 0: {\n              console.log('erreur: 0: ', error.status);\n              router.navigate([`${webapp_path}error`]);\n              break;\n            }\n            case 401: {\n              console.log('erreur: 401: ', error.message);\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 403: {\n\n              console.log('error 403: ', 'error 403');\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 404: {\n              console.log('error 404: ', error.status);\n              router.navigate([\"not-found-page\"]);\n             break;\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { authRouting } from './routes/auth.routing';\nimport { reducers as authReducer } from './store/auth-store/reducer';\nimport { AuthEffect } from './store/auth-store/effect';\nimport { AuthService } from './services/auth.service';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport { ShowOnFocusDirective } from './directives/show-on-focus.directive';\n\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    RegisterPageComponent,\n    ShowOnFocusDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRouting),\n    StoreModule.forFeature('authState', authReducer),\n    EffectsModule.forFeature([\n      AuthEffect\n    ]),\n    InputTextModule,\n    PasswordModule,\n    MessagesModule,\n    ButtonModule,\n    MessageModule,\n    DividerModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { Directive, ElementRef, HostListener, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Password } from 'primeng/password';\n\n@Directive({\n  selector: '[appShowOnFocus]'\n})\nexport class ShowOnFocusDirective {\n\n  constructor(private _el: ElementRef, private _viewContainer: ViewContainerRef) { }\n\n  @Input('appShowOnFocus') templateRef!: TemplateRef<any>;\n\n  @HostListener('focusin', ['$event']) onFocus(event: FocusEvent) {\n    console.log(this.templateRef)\n    console.log(this._viewContainer)\n    this._viewContainer.createEmbeddedView(this.templateRef);\n  }\n  @HostListener('focusout', ['$event']) onFocusOut(event: FocusEvent) {\n    this._viewContainer.clear();\n  }\n\n  private isPrimeNgPasswordInput(target: EventTarget | null): boolean {\n    return target instanceof HTMLInputElement && this._el.nativeElement.querySelector('input') === target;\n  }\n}\n","export class Captcha {\r\n  constructor(\r\n    public readonly image: string,\r\n    public readonly mimeType: string,\r\n    public readonly question: string,\r\n    public readonly response: string,\r\n  ) {}\r\n}\r\n","export class LoginDto {\r\n  constructor(public email: string, public password: string) {}\r\n}\r\n","export class RegisterDto {\r\n  constructor(public email: string, public password: string, public name: string) {}\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { LoginDto } from './../../models/login-dto.model';\nimport { AppState } from 'src/store/app.state';\nimport { errorMessageSelector, isErrorVisibleSelector, isLoadingSelector } from '../../store/auth-store/selector';\nimport * as AuthAction from '../../store/auth-store/action'\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  loginDataFormGroup: FormGroup = new FormGroup({});\n  isLoading$: Observable<boolean>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>) {\n    this.isLoading$ = this._store.pipe(select(isLoadingSelector));\n\n  }\n\n  ngOnInit() {\n    this.initializeLoginData()\n  }\n\n  initializeLoginData() {\n    this.loginDataFormGroup = this._fb.group({\n      // Email\n      email: ['', Validators.required],\n\n      // Password\n      password: ['', Validators.required]\n    })\n  }\n\n  login() {\n\n    if (!this.loginDataFormGroup.valid) {\n      return this.loginDataFormGroup.markAllAsTouched();\n    }\n    const logindata = new LoginDto(\n      this.loginDataFormGroup.get('email')?.value,\n      this.loginDataFormGroup.get('password')?.value\n    );\n    console.log(logindata);\n    this._store.dispatch(AuthAction.login(logindata));\n    console.log(\"res.email, res.jwt\");\n    // this._authService.login(logindata).subscribe(res=>{\n    //   console.log(res.email, res.jwt);\n    // });\n  }\n\n}\n","<div class=\"flex flex-column align-items-center w-full\">\n  <p class=\"text-3xl pb-8\">Page de connexion</p>\n  <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"loginDataFormGroup\" (submit)=\"login()\" >\n\n    <div class=\"flex flex-column w-full pt-4\">\n      <label for=\"email\">Votre email</label>\n      <input type=\"email\" pInputText id=\"email\" formControlName=\"email\" placeholder=\"votre email...\">\n      <p-messages severity=\"error\" text=\"email obligatoire\"></p-messages>\n    </div>\n\n    <div class=\"flex flex-column w-full pt-4\">\n      <label for=\"password\">votre mot de passe</label>\n      <p-password\n        id=\"password\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n      </p-password>\n    </div>\n\n    <p-button class=\"pt-4\" type=\"submit\" label=\"connexion\"></p-button>\n    <div class=\"flex flex-column w-full pt-4\">\n      <p> Pas encore inscrit ? </p> <a [routerLink]=\"'/lalamiam/register'\">inscription</a>\n\n    </div>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterDto } from './../../models/register-dto.model';\nimport { AppState } from 'src/store/app.state';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Captcha } from '../../models/captcha.model';\nimport {  captchaSelector } from '../../store/auth-store/selector';\nimport { passwordValidator } from '../../validators/password.validator';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent {\n\n  registerDataFormGroup: FormGroup = new FormGroup({});\n\n  isTemplateVisible: boolean = false;\n\n  // Données captcha\n  captcha$: Observable<Captcha|null>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>){\n    this.captcha$ = _store.pipe(select(captchaSelector));\n  }\n\n  ngOnInit() {\n    this.initializeRegisterData();\n    this.initializeForm();\n  }\n\n  initializeRegisterData() {\n    this.registerDataFormGroup = this._fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      name : ['', Validators.required],\n      captchaResponse: ['', Validators.required]\n    }, {\n      validators: passwordValidator()\n    })\n  }\n\n  register() {\n    if (!this.registerDataFormGroup.valid) {\n      return this.registerDataFormGroup.markAllAsTouched();\n    }\n    const registerData = new RegisterDto(\n      this.registerDataFormGroup.get('email')?.value,\n      this.registerDataFormGroup.get('password')?.value,\n      this.registerDataFormGroup.get('name')?.value\n    );\n\n    this._store.dispatch(AuthAction.register({\n      email: registerData.email,\n      password: registerData.password,\n      name: registerData.name\n    }));\n\n  }\n\n  initializeForm() {\n    this._store.dispatch(AuthAction.csrf());\n    this._store.dispatch(AuthAction.captcha());\n  }\n}\n","<div class=\"flex flex-column align-items-center\">\n\n  <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"registerDataFormGroup\" (submit)=\"register()\">\n    <p class=\"text-3xl  pb-8\">Creation compte</p>\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"email\">votre email</label>\n      <input type=\"email\" pInputText id=\"email\" formControlName=\"email\" aria-describedby=\"email-help\" placeholder=\"votre email...\">\n      <div class=\"p-error pt-2\">\n        <small\n            *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['required']\"\n            id=\"email-help\"\n            >\n            Email obligatoire\n        </small>\n        <small\n            *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['email']\"\n            id=\"email-help\">\n            Email pas valide\n        </small>\n      </div>\n    </div>\n\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"name\">Votre nom</label>\n      <input\n        type=\"text\"\n        pInputText\n        aria-describedby=\"name\"\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"nom\">\n        <div class=\"p-error pt-2\">\n          <small\n              *ngIf=\"registerDataFormGroup.get('name')?.touched && registerDataFormGroup.get('name')?.errors?.['required']\"\n              id=\"name\"\n              >\n              nom obligatoire\n          </small>\n        </div>\n    </div>\n\n    <div class=\"flex flex-column w-full pt-4\">\n      <div class=\"relative flex flex-column w-full\">\n        <label class=\"pb-1\" for=\"password\">Votre mot de passe</label>\n        <p-password\n        [appShowOnFocus]=\"passwordTemplate\"\n        id=\"password\"\n        aria-describedby=\"password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n        <ng-template #passwordTemplate>\n          <div class=\"absolute top-100 left-0 shadow-1 p-2 z-1 bg-white\">\n            <p class=\"mt-2 text-sm font-bold\">Contraintes</p>\n            <p-divider class=\"p-2\"></p-divider>\n\n            <ul class=\"pl-2 ml-2 mt-0\" style=\"line-height: 1.5\">\n\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en miniscule</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en majiscule </li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 chiffre</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Minimum 8 caractères</li>\n            </ul>\n          </div>\n        </ng-template>\n      </p-password>\n\n      </div>\n      <div class=\"p-error pt-2\">\n        <small\n            *ngIf=\"registerDataFormGroup.get('password')?.touched && registerDataFormGroup.get('password')?.errors?.['required']\"\n            id=\"password-help\"\n            >\n            Mot de passe obligatoire\n        </small>\n      </div>\n    </div>\n\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"password\">Confirmer votre mot de passe</label>\n      <p-password\n        id=\"confirmPassword\"\n        aria-describedby=\"confirm-password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"confirmPassword\"\n        placeholder=\"mot de passe\">\n      </p-password>\n      <div class=\"flex flex-column p-error pt-2\">\n        <small\n            *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.get('confirmPassword')?.errors?.['required']\"\n            id=\"confirm-password-help\"\n            >\n            Confirmation mot de passe obligatoire\n        </small>\n        <small\n            *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.errors?.['passwordMismatch']\"\n            id=\"confirm-password-help\"\n            >\n            Erreur confirmation mot de passe\n        </small>\n      </div>\n    </div>\n\n    <!--captcha-->\n    <div class=\"flex flex-column w-full m-4 pt-4\" *ngIf=\"(captcha$ | async) as captcha\">\n      <p class=\"mb-2\">{{captcha.question}}</p>\n      <div class=\"flex flex-column align-items-center mb-2\">\n        <img [src]=\"'data:' + captcha.mimeType + ';base64,' + captcha.image\">\n      </div>\n      <input pInputText id=\"captchaResponse\" type=\"text\" formControlName=\"captchaResponse\">\n      <div class=\"p-error pt-2\">\n        <small\n            *ngIf=\"registerDataFormGroup.get('captchaResponse')?.touched && registerDataFormGroup.get('captchaResponse')?.errors?.['required']\"\n            id=\"email-help\"\n            >\n            Réponse obligatoire\n        </small>\n      </div>\n    </div>\n\n\n    <p-button class=\"pt-4\" type=\"submit\" label=\"creation\"></p-button>\n  </form>\n\n</div>\n","import { Route } from \"@angular/router\";\r\nimport { LoginPageComponent } from \"../pages/login-page/login-page.component\";\r\nimport { RegisterPageComponent } from \"../pages/register-page/register-page.component\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport const authRouting: Route[] = [\r\n  {\r\n    path: environment.webapp_path,\r\n    children: [\r\n      { path: \"connexion\", component: LoginPageComponent, title: \"Connexion\"},\r\n      { path: \"register\", component: RegisterPageComponent, title: \"Creation compte\"},\r\n    ]\r\n\r\n  }\r\n]\r\n","import { Injectable } from \"@angular/core\";\r\nimport { LoginDto } from \"../models/login-dto.model\";\r\nimport { catchError, map, Observable, of, tap } from \"rxjs\";\r\nimport { LoginResponseDto } from \"../models/login.response.model.dto\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { RegisterDto } from \"../models/register-dto.model\";\r\nimport { RegisterResponseDto } from \"../models/register.response.model.dto\";\r\nimport { Captcha } from \"../models/captcha.model\";\r\nimport { CaptchaDto } from \"../models/captcha.dto.model\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService {\r\n\r\n  private _apiEndPoint: string =  environment.api_base + \"/auth\";\r\n\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public login(loginDto: LoginDto): Observable<LoginResponseDto> {\r\n    return this._http.post<LoginResponseDto>(this._apiEndPoint + \"/login\", loginDto).pipe(\r\n      tap(loginResponse=>{\r\n        localStorage.setItem('user', JSON.stringify({\r\n          userId: loginResponse.id,\r\n          email: loginResponse.email,\r\n          jwt: loginResponse.jwt,\r\n          roles: loginResponse.roles\r\n        }))\r\n      })\r\n    )\r\n  }\r\n\r\n  public register(registerDto: RegisterDto): Observable<RegisterResponseDto> {\r\n    return this._http.post<RegisterResponseDto>(this._apiEndPoint + \"/register\",  registerDto)\r\n  }\r\n\r\n  public csrf(): Observable<string> {\r\n    const path = this._apiEndPoint + \"/csrf\";\r\n      return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  public captcha(): Observable<Captcha> {\r\n    const path = this._apiEndPoint+ \"/captcha\";\r\n    return this._http.get<CaptchaDto>(path).pipe(\r\n      map(dto=>this.toCaptchaModel(dto))\r\n    )\r\n  }\r\n\r\n  public logout(): Observable<string> {\r\n    //const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const user = localStorage.getItem('user');\r\n    let path:string= \"\";\r\n\r\n    if(user!=null)  {\r\n      const userString = JSON.parse(user);\r\n      const userId = userString.userId;\r\n      path = this._apiEndPoint + \"/logout/\" + userId;\r\n    }\r\n\r\n    return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  private toCaptchaModel(dto: CaptchaDto): Captcha {\r\n    return new Captcha(dto.imageBase64, dto.imageMimeType, dto.question, dto.response);\r\n  }\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { Captcha } from \"../../models/captcha.model\";\r\n\r\nexport const login = createAction('[Auth] Login client', props<{email: string, password: string}>());\r\nexport const csrf = createAction('[Auth] csrf');\r\nexport const captcha = createAction('[Auth] get captcha')\r\nexport const captchaSuccess = createAction('[Auth] captcha success', props<{captcha: Captcha}>());\r\n\r\nexport const logout = createAction('[Auth] Logout');\r\nexport const logoutSuccess = createAction('[Auth] Logout success', props<{message: string}>());\r\nexport const logoutFailed = createAction('[Auth] Logout failed', props<{error: string, isErrorVisible: boolean}>());\r\n\r\nexport const register = createAction('[Auth] Register client', props<{email: string, password: string, name: string}>());\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport * as AuthAction from \"./action\";\r\nimport * as UserIdentAction from \"src/store/user-ident-store/action\";\r\nimport * as FlashMessageAction from 'src/store/flash-message-store/action';\r\n\r\nimport { catchError, delay, from, map, mergeMap, Observable, of, pipe, switchMap, tap } from \"rxjs\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthEffect {\r\n\r\n  constructor(private _action$: Actions, private _authService: AuthService){}\r\n\r\n  login$ = createEffect(()=>\r\n  this._action$.pipe(\r\n    ofType(AuthAction.login),\r\n    switchMap((data)=>\r\n      this._authService.login(data).pipe(\r\n        switchMap((loginResponse)=> [\r\n          // Creation du UserIdent\r\n          UserIdentAction.createUserIden({\r\n            userId: loginResponse.id,\r\n            email: loginResponse.email,\r\n            jwt: loginResponse.jwt,\r\n            roles: loginResponse.roles\r\n\r\n          }),\r\n\r\n          // Generation Message login\r\n          FlashMessageAction.createMessage({message: loginResponse.message, isError: false})\r\n        ]),\r\n        catchError((error)=>from([\r\n          UserIdentAction.clearUserIden(),\r\n          // Generation Message d'erreur\r\n          FlashMessageAction.createMessage({message: error.error, isError: true})\r\n        ])\r\n        )\r\n      )\r\n    )\r\n  )\r\n  )\r\n\r\n  register$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.register),\r\n      mergeMap((data)=>\r\n        this._authService.register(data).pipe(\r\n          switchMap((registerResponse)=>[\r\n            // Generation Message Register\r\n            FlashMessageAction.createMessage({message: registerResponse.message, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  logout$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.logout),\r\n      mergeMap(()=>\r\n        this._authService.logout().pipe(\r\n          switchMap((resMessage)=> {\r\n            localStorage.removeItem('user');\r\n            return [\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message logout\r\n              FlashMessageAction.createMessage({message: resMessage, isError: false})\r\n            ]\r\n          }),\r\n          catchError((error)=>{\r\n            localStorage.removeItem('user');\r\n            return from([\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            ])\r\n          }\r\n        )\r\n      )\r\n    )\r\n  ))\r\n\r\n  csrf$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.csrf),\r\n      mergeMap(()=>\r\n        this._authService.csrf().pipe(\r\n          switchMap((csrf)=>[\r\n            // Generation Message Register\r\n            FlashMessageAction.createMessage({message: csrf, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  captcha$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.captcha),\r\n      mergeMap(()=>\r\n        this._authService.captcha().pipe(\r\n          map((captcha)=>AuthAction.captchaSuccess({captcha})),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  )\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as AuthAction from \"./action\";\r\nimport { AuthModel } from \"./auth.model\";\r\n\r\nexport const initialState: AuthModel = {\r\n  error: '',\r\n  isErrorVisible: false,\r\n  isLoading: false,\r\n  captcha: null\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialState,\r\n  on(AuthAction.login, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.register, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.captchaSuccess,(state, {captcha})=>({\r\n    ...state,\r\n    ...state.captcha, captcha\r\n  })\r\n)\r\n);\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"src/store/app.state\";\r\n\r\nexport const selector = (state:AppState) => state.authState;\r\n\r\nexport const isErrorVisibleSelector = createSelector(selector, (state) => state.isErrorVisible);\r\nexport const isLoadingSelector = createSelector(selector, (state)=>state.isLoading)\r\nexport const errorMessageSelector = createSelector(selector, (state) => state.error);\r\nexport const captchaSelector = createSelector(selector, (state) => state.captcha);\r\nexport const captchaQuestionSelector = createSelector(selector, (state) => state.captcha?.question)\r\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function passwordValidator(): ValidatorFn {\r\n  return (formGroup: AbstractControl):{[key: string]: boolean} | null => {\r\n    const password = formGroup.get('password')?.value;\r\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\r\n    console.log('Validator triggered:', { password, confirmPassword });\r\n    if (password !== confirmPassword) {\r\n      console.log('No macth');\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent {\r\n\r\n}\r\n","<p>Erreur page</p>\r\n","import { Component } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n\n  message: string = '';\n\n  constructor(private _homeService: HomeService) { }\n\n  ngOnInit() {\n    this._homeService.getHomeMessage().subscribe(\n      res=> this.message = res,\n      error => console.error('Erreur!', error)\n    );\n  }\n\n}\n","<p>home-page works!</p>\n\n<h2>Message du backend</h2>\n<p>{{message}}</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent {\n\n}\n","<p>not-found-page works!</p>\n","import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent {\n\n  message: string = '';\n\n  constructor(private _userService: UserService) {}\n\n  ngOnInit() {\n    this._userService.getUsers().subscribe(res=>this.message=res);\n  }\n\n}\n","<h2>PAge sur les utilisateurs</h2>\n\n<p>{{message}}</p>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/version\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getHomeMessage(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/users\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getUsers(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n}\n","import { EnvironmentRef } from \"./environment.ref\";\r\n\r\n/**\r\n * Dev - LocalServer\r\n */\r\nexport const environment: EnvironmentRef = {\r\n  production: false,\r\n  name: 'dev',\r\n  api_base: 'http://localhost:8080/api',\r\n  webapp_path: 'lalamiam'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport { reducers as AuthReducers } from './../app/modules/auth/store/auth-store/reducer';\r\nimport { reducers as UserIdentReducers } from './user-ident-store/reducer';\r\nimport { reducers as MessageReducers } from './flash-message-store/reducer';\r\nimport { AuthModel } from \"src/app/modules/auth/store/auth-store/auth.model\";\r\nimport { UserIdentModel } from \"./user-ident-store/user.ident.model\";\r\nimport { MessageModel } from \"./flash-message-store/message.model\";\r\n\r\nexport interface AppState {\r\n  userIdentState: UserIdentModel;\r\n  authState: AuthModel;\r\n  messageState: MessageModel\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  userIdentState: UserIdentReducers,\r\n  authState: AuthReducers,\r\n  messageState: MessageReducers\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createMessage = createAction('[message] create message', props<{ message: string, isError: boolean }>());\r\n\r\nexport const clearMessage = createAction('[message] clear message');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\n\r\nimport * as FlashMessageAction from './action';\r\nimport { delay, map } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class FlashMessageEffect {\r\n\r\n  constructor(private _action$: Actions){}\r\n\r\n  clear$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(FlashMessageAction.createMessage),\r\n      delay(5000),\r\n      map(()=>FlashMessageAction.clearMessage())\r\n    )\r\n  )\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as MessageAction from \"./action\";\r\nimport { MessageModel } from \"./message.model\";\r\n\r\nexport const initialMessageState: MessageModel = {\r\n  message: '',\r\n  isError: false\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialMessageState,\r\n  on(MessageAction.createMessage, (state, {message})=>({...state, message})),\r\n  on(MessageAction.clearMessage,(state)=>({...state, message: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.messageState;\r\n\r\nexport const messageSelector = createSelector(selector, (state) => state.message);\r\nexport const isMessageErrorSelector = createSelector(selector, (state) => state.isError);\r\n\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createUserIden = createAction('[user] create user ident', props<{\r\n    userId: BigInt\r\n    email: string,\r\n    jwt:string,\r\n    roles:string[]\r\n  }>()\r\n);\r\n\r\nexport const clearUserIden = createAction('[user] clear user ident');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from \"@ngrx/effects\";\r\nimport * as UserIdentAction from \"./action\";\r\n\r\nimport { map, tap } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n\r\n  constructor(private _action$: Actions){\r\n    console.log('AppInitEffects instantiated'); // Log for instantiation\r\n  }\r\n\r\n  init$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(ROOT_EFFECTS_INIT),\r\n      tap(value=>{\r\n        console.log(value);\r\n      }),\r\n      map(()=>{\r\n\r\n        const userString = localStorage.getItem('user');\r\n        if(userString) {\r\n          console.log(\"ici, userinfo: \" + userString);\r\n          const user = JSON.parse(userString);\r\n\r\n          return UserIdentAction.createUserIden({\r\n            userId: user.userid,\r\n            email: user.email,\r\n            jwt: user.jwt,\r\n            roles: user.roles\r\n          })\r\n        }\r\n        return { type: '[user] clear user ident'}\r\n      })\r\n    )\r\n  );\r\n\r\n  clearUser$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(UserIdentAction.clearUserIden),\r\n      map(()=>{\r\n        return UserIdentAction.createUserIden({\r\n          userId: BigInt(0),\r\n          jwt: '',\r\n          email: '',\r\n          roles: []\r\n        })\r\n      })\r\n    )\r\n  )\r\n\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as UserIdentAction from \"./action\";\r\nimport { UserIdentModel } from \"./user.ident.model\";\r\n\r\nexport const initialUserState: UserIdentModel = {\r\n  userId: BigInt(0),\r\n  token: '',\r\n  jwt: '',\r\n  email: '',\r\n  roles: []\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialUserState,\r\n  on(UserIdentAction.createUserIden, (state, {email, jwt, userId, roles})=>({...state, email, jwt, userId, roles, token: ''})),\r\n  on(UserIdentAction.clearUserIden,(state)=>({...state, email: '', roles: [], userId: BigInt(0), jwt: '', token: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.userIdentState;\r\n\r\nexport const getEmailSelector = createSelector(selector, (state) => state.email);\r\nexport const getJwtSelector = createSelector(selector, (state)=>state.jwt);\r\n"],"names":["RouterModule","HomePageComponent","NotFoundPageComponent","UserPageComponent","environment","ErrorPageComponent","routes","path","webapp_path","children","component","title","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","isDevMode","BrowserModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","FormsModule","ReactiveFormsModule","StoreDevtoolsModule","StoreModule","EffectsModule","reducers","UserEffect","FlashMessageEffect","HandlerHttpInterceptor","NavbarComponent","FlashMessageComponent","AuthModule","InputTextModule","AppModule","bootstrap","provide","useClass","multi","instrument","maxAge","logOnly","serialize","replacer","_key","value","toString","declarations","StoreRootModule","i2","EffectsRootModule","i3","select","messageSelector","isMessageErrorSelector","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","message_r1","_store","message$","pipe","isErrorMessage$","ɵɵdirectiveInject","Store","consts","FlashMessageComponent_Template","ɵɵtemplate","FlashMessageComponent_div_0_Template","ɵɵproperty","ɵɵpipeBind1","getEmailSelector","Action","ɵɵlistener","NavbarComponent_div_13_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","logout","userEmail$","dispatch","NavbarComponent_Template","NavbarComponent_div_13_Template","HttpResponse","tap","Router","_injector","intercept","request","next","urlWithParams","includes","console","log","localStorage","getItem","token","formToken","clone","withCredentials","setHeaders","authorization","handle","event","headers","get","csrfToken","setItem","error","errorStatus","status","router","navigate","message","ɵɵinject","Injector","factory","ɵfac","CommonModule","LoginPageComponent","RegisterPageComponent","authRouting","authReducer","AuthEffect","AuthService","PasswordModule","MessagesModule","MessageModule","ButtonModule","DividerModule","ShowOnFocusDirective","forChild","forFeature","StoreFeatureModule","EffectsFeatureModule","_el","_viewContainer","onFocus","templateRef","createEmbeddedView","onFocusOut","clear","isPrimeNgPasswordInput","target","HTMLInputElement","nativeElement","querySelector","ElementRef","ViewContainerRef","hostBindings","ShowOnFocusDirective_HostBindings","$event","ShowOnFocusDirective_focusout_HostBindingHandler","Captcha","image","mimeType","question","response","LoginDto","email","password","RegisterDto","name","FormGroup","Validators","isLoadingSelector","AuthAction","_fb","loginDataFormGroup","isLoading$","ngOnInit","initializeLoginData","group","required","login","valid","markAllAsTouched","logindata","FormBuilder","LoginPageComponent_Template","LoginPageComponent_Template_form_submit_3_listener","captchaSelector","passwordValidator","RegisterPageComponent_div_33_small_7_Template","captcha_r9","ɵɵsanitizeUrl","tmp_2_0","ctx_r8","registerDataFormGroup","touched","errors","isTemplateVisible","captcha$","initializeRegisterData","initializeForm","confirmPassword","captchaResponse","validators","register","registerData","csrf","captcha","RegisterPageComponent_Template","RegisterPageComponent_Template_form_submit_1_listener","RegisterPageComponent_small_9_Template","RegisterPageComponent_small_10_Template","RegisterPageComponent_small_16_Template","RegisterPageComponent_ng_template_22_Template","ɵɵtemplateRefExtractor","RegisterPageComponent_small_25_Template","RegisterPageComponent_small_31_Template","RegisterPageComponent_small_32_Template","RegisterPageComponent_div_33_Template","tmp_1_0","tmp_3_0","tmp_7_0","tmp_10_0","tmp_11_0","map","_http","_apiEndPoint","api_base","loginDto","post","loginResponse","JSON","stringify","userId","id","jwt","roles","registerDto","responseType","dto","toCaptchaModel","user","userString","parse","imageBase64","imageMimeType","HttpClient","providedIn","createAction","props","captchaSuccess","logoutSuccess","logoutFailed","createEffect","ofType","UserIdentAction","FlashMessageAction","catchError","from","mergeMap","of","switchMap","_action$","_authService","login$","data","createUserIden","createMessage","isError","clearUserIden","register$","registerResponse","logout$","resMessage","removeItem","csrf$","Actions","createReducer","on","initialState","isErrorVisible","isLoading","state","createSelector","selector","authState","isErrorVisibleSelector","errorMessageSelector","captchaQuestionSelector","formGroup","passwordMismatch","ErrorPageComponent_Template","_homeService","getHomeMessage","subscribe","res","HomeService","HomePageComponent_Template","NotFoundPageComponent_Template","_userService","getUsers","UserService","UserPageComponent_Template","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","AuthReducers","UserIdentReducers","MessageReducers","userIdentState","messageState","clearMessage","delay","clear$","MessageAction","initialMessageState","ROOT_EFFECTS_INIT","init$","userid","type","clearUser$","BigInt","initialUserState","getJwtSelector"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}