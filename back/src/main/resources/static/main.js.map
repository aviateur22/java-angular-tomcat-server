{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/flash-message/flash-message.component.ts","./src/app/components/flash-message/flash-message.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/http.interceptor.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/models/captcha.model.ts","./src/app/modules/auth/models/login-dto.model.ts","./src/app/modules/auth/models/register-dto.model.ts","./src/app/modules/auth/pages/login-page/login-page.component.ts","./src/app/modules/auth/pages/login-page/login-page.component.html","./src/app/modules/auth/pages/register-page/register-page.component.ts","./src/app/modules/auth/pages/register-page/register-page.component.html","./src/app/modules/auth/routes/auth.routing.ts","./src/app/modules/auth/services/auth.service.ts","./src/app/modules/auth/store/auth-store/action.ts","./src/app/modules/auth/store/auth-store/effect.ts","./src/app/modules/auth/store/auth-store/reducer.ts","./src/app/modules/auth/store/auth-store/selector.ts","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/not-found-page/not-found-page.component.ts","./src/app/pages/not-found-page/not-found-page.component.html","./src/app/pages/user-page/user-page.component.ts","./src/app/pages/user-page/user-page.component.html","./src/app/services/home.service.ts","./src/app/services/user.service.ts","./src/environments/environment.dev.ts","./src/main.ts","./src/store/app.state.ts","./src/store/flash-message-store/action.ts","./src/store/flash-message-store/effect.ts","./src/store/flash-message-store/reducer.ts","./src/store/flash-message-store/selector.ts","./src/store/user-ident-store/action.ts","./src/store/user-ident-store/effect.ts","./src/store/user-ident-store/reducer.ts","./src/store/user-ident-store/selector.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { environment } from 'src/environments/environment';\n\nconst routes: Routes = [\n  {\n    path: environment.webapp_path,\n    children: [\n      { path: \"\", component: HomePageComponent, title: \"Accueil\"},\n      { path: \"users-page\", component: UserPageComponent, title: \"Page users\"},\n      { path: \"not-found-page\", component: NotFoundPageComponent, title: \"404\"}\n    ]\n\n  },\n  { path: \"\", redirectTo: \"/lalamiam\", pathMatch: \"full\"},\n  { path: \"**\", redirectTo:\"not-found-page\", title: '404'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lalamiam';\n}\n","<app-flash-message></app-flash-message>\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { isDevMode, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from 'src/store/app.state';\nimport { UserEffect } from 'src/store/user-ident-store/effect';\nimport { FlashMessageEffect } from 'src/store/flash-message-store/effect';\nimport { HandlerHttpInterceptor } from './http.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { FlashMessageComponent } from './components/flash-message/flash-message.component';\nimport { AuthModule } from './modules/auth/auth.module';\n\nimport { InputTextModule } from 'primeng/inputtext';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomePageComponent,\n    NotFoundPageComponent,\n    UserPageComponent,\n    FlashMessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AuthModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([UserEffect, FlashMessageEffect]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode(), serialize: {\n      replacer: (_key, value) => (typeof value === \"bigint\" ? value.toString() : value)\n    }\n  }),\n  InputTextModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass:HandlerHttpInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { messageSelector, isMessageErrorSelector } from 'src/store/flash-message-store/selector';\n\n@Component({\n  selector: 'app-flash-message',\n  templateUrl: './flash-message.component.html',\n  styleUrls: ['./flash-message.component.css']\n})\nexport class FlashMessageComponent {\n\n  message$: Observable<string>;\n  isErrorMessage$: Observable<boolean>\n\n  constructor(private _store: Store<AppState>) {\n    this.message$ = this._store.pipe(select(messageSelector));\n    this.isErrorMessage$ = this._store.pipe(select(isMessageErrorSelector));\n\n  }\n}\n","<div *ngIf=\"(message$ | async) as message\">\n  <p>{{message}}</p>\n</div>\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { getEmailSelector } from 'src/store/user-ident-store/selector';\nimport * as Action from 'src/app/modules/auth/store/auth-store/action'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  userEmail$: Observable<string>;\n\n  constructor(private _store: Store<AppState>) {\n    this.userEmail$ = this._store.pipe(select(getEmailSelector));\n\n  }\n\n  logout() {\n    this._store.dispatch(Action.logout())\n  }\n\n}\n","<nav class=\"navbar\">\n  <div class=\"navbar-logo\">\n    <img class=\"small\" src=\"assets/hamburger.jpg\" alt=\"My App Logo\" />\n  </div>\n  <ul class=\"navbar-links\">\n      <li><a routerLink=\"/lalamiam\">Home</a></li>\n      <li><a routerLink=\"/lalamiam/users-page\">users</a></li>\n      <li><a routerLink=\"/lalamiam/connexion\">connexion</a></li>\n  </ul>\n\n  <div *ngIf=\"(userEmail$ | async) as user\">\n    <button (click)=\"logout()\">\n      deconnexion\n    </button>\n  </div>\n</nav>\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable()\nexport class HandlerHttpInterceptor implements HttpInterceptor {\n\n  constructor(private _injector: Injector) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(request.urlWithParams.includes('/api/')){\n      console.log('form_csrf_token pour api request: ' + localStorage.getItem('form-csrf-token'));\n      const token: string| null = localStorage.getItem('token');\n      const formToken: string|null = localStorage.getItem('form-csrf-token');\n      request = request.clone({\n        withCredentials: true,\n        setHeaders: {\n          authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Form-Csrf-Token': formToken === null ? '' : formToken\n        }\n      });\n    }\n    return next.handle(request).pipe(\n      tap(event=>{\n        if(event instanceof HttpResponse) {\n          console.log(`liste des headers:`);\n          console.log(event.headers)\n          console.log(`form-csrf-token: ${event.headers.get('form-csrf-token')}`)\n          const csrfToken = event.headers.get('form-csrf-token');\n          if (csrfToken) {\n            localStorage.setItem('form-csrf-token', csrfToken);\n          }\n        }\n      }),\n      tap({\n        error: (error: HttpErrorResponse)=>{\n          const errorStatus: number = error.status;\n          const router = this._injector.get(Router);\n          const webapp_path: string = environment.webapp_path !== '' ?\n          environment.webapp_path+'/' : '';\n          switch(errorStatus) {\n            case 0: {\n              console.log('erreur: 0: ', error.status);\n              router.navigate([\"error\"]);\n              break;\n            }\n            case 401: {\n              console.log('erreur: 401: ', error.message);\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 403: {\n\n              console.log('error 403: ', 'error 403');\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 404: {\n              console.log('error 404: ', error.status);\n              router.navigate([\"not-found-page\"]);\n             break;\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { authRouting } from './routes/auth.routing';\nimport { reducers as authReducer } from './store/auth-store/reducer';\nimport { AuthEffect } from './store/auth-store/effect';\nimport { AuthService } from './services/auth.service';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { MessagesModule } from 'primeng/messages';\nimport { ButtonModule } from 'primeng/button';\n\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    RegisterPageComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRouting),\n    StoreModule.forFeature('authState', authReducer),\n    EffectsModule.forFeature([\n      AuthEffect\n    ]),\n    InputTextModule,\n    PasswordModule,\n    MessagesModule,\n    ButtonModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","export class Captcha {\r\n  constructor(\r\n    public readonly image: string,\r\n    public readonly mimeType: string,\r\n    public readonly question: string,\r\n    public readonly response: string,\r\n  ) {}\r\n}\r\n","export class LoginDto {\r\n  constructor(public email: string, public password: string) {}\r\n}\r\n","export class RegisterDto {\r\n  constructor(public email: string, public password: string, public name: string) {}\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { LoginDto } from './../../models/login-dto.model';\nimport { AppState } from 'src/store/app.state';\nimport { errorMessageSelector, isErrorVisibleSelector, isLoadingSelector } from '../../store/auth-store/selector';\nimport * as AuthAction from '../../store/auth-store/action'\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  loginDataFormGroup: FormGroup = new FormGroup({});\n  isLoading$: Observable<boolean>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>) {\n    this.isLoading$ = this._store.pipe(select(isLoadingSelector));\n\n  }\n\n  ngOnInit() {\n    this.initializeLoginData()\n  }\n\n  initializeLoginData() {\n    this.loginDataFormGroup = this._fb.group({\n      // Email\n      email: ['', Validators.required],\n\n      // Password\n      password: ['', Validators.required]\n    })\n  }\n\n  login() {\n\n    if (!this.loginDataFormGroup.valid) {\n      return this.loginDataFormGroup.markAllAsTouched();\n    }\n    const logindata = new LoginDto(\n      this.loginDataFormGroup.get('email')?.value,\n      this.loginDataFormGroup.get('password')?.value\n    );\n    console.log(logindata);\n    this._store.dispatch(AuthAction.login(logindata));\n    console.log(\"res.email, res.jwt\");\n    // this._authService.login(logindata).subscribe(res=>{\n    //   console.log(res.email, res.jwt);\n    // });\n  }\n\n}\n","<p>Login Page</p>\n\n<form [formGroup]=\"loginDataFormGroup\" (submit)=\"login()\" >\n  <div>\n    <label for=\"email\">votre email</label>\n    <input id=\"email\" formControlName=\"email\" type=\"email\" placeholder=\"votre email...\">\n  </div>\n\n  <div>\n    <label for=\"password\">votre mot de passe</label>\n    <input id=\"password\" formControlName=\"password\" type=\"password\" placeholder=\"mot de passe...\">\n  </div>\n\n  <input type=\"submit\" value=\"connexion\">\n  <div class=\"button__container\">\n    <p> Pas encore inscrit ? </p> <a [routerLink]=\"'/lalamiam/register'\">inscription</a>\n\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterDto } from './../../models/register-dto.model';\nimport { AppState } from 'src/store/app.state';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Captcha } from '../../models/captcha.model';\nimport { captchaQuestionSelector, captchaSelector } from '../../store/auth-store/selector';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent {\n\n  registerDataFormGroup: FormGroup = new FormGroup({});\n\n  // Données captcha\n  captcha$: Observable<Captcha|null>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>){\n    this.captcha$ = _store.pipe(select(captchaSelector));\n  }\n\n  ngOnInit() {\n    this.initializeRegisterData();\n    this.initializeForm();\n  }\n\n  initializeRegisterData() {\n    this.registerDataFormGroup = this._fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      name : ['', Validators.required],\n      captchaResponse: ['', Validators.required]\n    })\n  }\n\n  register() {\n    if (!this.registerDataFormGroup.valid) {\n      return this.registerDataFormGroup.markAllAsTouched();\n    }\n    const registerData = new RegisterDto(\n      this.registerDataFormGroup.get('email')?.value,\n      this.registerDataFormGroup.get('password')?.value,\n      this.registerDataFormGroup.get('name')?.value\n    );\n\n    this._store.dispatch(AuthAction.register({\n      email: registerData.email,\n      password: registerData.password,\n      name: registerData.name\n    }));\n\n  }\n\n  initializeForm() {\n    this._store.dispatch(AuthAction.csrf());\n    this._store.dispatch(AuthAction.captcha());\n  }\n}\n","<p>Creation compte</p>\n<div class=\"card flex align-items-center justify-content-center flex-wrap gap-3\">\n  <form [formGroup]=\"registerDataFormGroup\" (submit)=\"register()\" >\n    <div>\n      <label for=\"email\">votre email</label>\n      <input type=\"email\" pInputText id=\"email\" formControlName=\"email\" placeholder=\"votre email...\">\n      <p-messages severity=\"error\" text=\"email obligatoire\"></p-messages>\n    </div>\n\n    <div>\n      <label for=\"password\">votre mot de passe</label>\n      <p-password\n        id=\"password\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n      </p-password>\n    </div>\n\n    <div>\n      <label for=\"name\">votre nom</label>\n      <input\n        type=\"text\"\n        pInputText\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"nom\">\n    </div>\n\n    <!--captcha-->\n\n    <div *ngIf=\"(captcha$ | async) as captcha\">\n      <p>{{captcha.question}}</p>\n      <input id=\"captchaResponse\" type=\"text\" formControlName=\"captchaResponse\">\n      <img [src]=\"'data:' + captcha.mimeType + ';base64,' + captcha.image\">\n    </div>\n\n\n    <p-button type=\"submit\" label=\"creation\"></p-button>\n  </form>\n\n</div>\n","import { Route } from \"@angular/router\";\r\nimport { LoginPageComponent } from \"../pages/login-page/login-page.component\";\r\nimport { RegisterPageComponent } from \"../pages/register-page/register-page.component\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport const authRouting: Route[] = [\r\n  {\r\n    path: environment.webapp_path,\r\n    children: [\r\n      { path: \"connexion\", component: LoginPageComponent, title: \"Connexion\"},\r\n      { path: \"register\", component: RegisterPageComponent, title: \"Creation compte\"},\r\n    ]\r\n\r\n  }\r\n]\r\n","import { Injectable } from \"@angular/core\";\r\nimport { LoginDto } from \"../models/login-dto.model\";\r\nimport { catchError, map, Observable, of, tap } from \"rxjs\";\r\nimport { LoginResponseDto } from \"../models/login.response.model.dto\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { RegisterDto } from \"../models/register-dto.model\";\r\nimport { RegisterResponseDto } from \"../models/register.response.model.dto\";\r\nimport { Captcha } from \"../models/captcha.model\";\r\nimport { CaptchaDto } from \"../models/captcha.dto.model\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService {\r\n\r\n  private _apiEndPoint: string =  environment.api_base + \"/auth\";\r\n\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public login(loginDto: LoginDto): Observable<LoginResponseDto> {\r\n    return this._http.post<LoginResponseDto>(this._apiEndPoint + \"/login\", loginDto).pipe(\r\n      tap(loginResponse=>{\r\n        localStorage.setItem('user', JSON.stringify({\r\n          userId: loginResponse.id,\r\n          email: loginResponse.email,\r\n          jwt: loginResponse.jwt,\r\n          roles: loginResponse.roles\r\n        }))\r\n      })\r\n    )\r\n  }\r\n\r\n  public register(registerDto: RegisterDto): Observable<RegisterResponseDto> {\r\n    return this._http.post<RegisterResponseDto>(this._apiEndPoint + \"/register\",  registerDto)\r\n  }\r\n\r\n  public csrf(): Observable<string> {\r\n    const path = this._apiEndPoint + \"/csrf\";\r\n      return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  public captcha(): Observable<Captcha> {\r\n    const path = this._apiEndPoint+ \"/captcha\";\r\n    return this._http.get<CaptchaDto>(path).pipe(\r\n      map(dto=>this.toCaptchaModel(dto))\r\n    )\r\n  }\r\n\r\n  public logout(): Observable<string> {\r\n    //const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const user = localStorage.getItem('user');\r\n    let path:string= \"\";\r\n\r\n    if(user!=null)  {\r\n      const userString = JSON.parse(user);\r\n      const userId = userString.userId;\r\n      path = this._apiEndPoint + \"/logout/\" + userId;\r\n    }\r\n\r\n    return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  private toCaptchaModel(dto: CaptchaDto): Captcha {\r\n    return new Captcha(dto.imageBase64, dto.imageMimeType, dto.question, dto.response);\r\n  }\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { Captcha } from \"../../models/captcha.model\";\r\n\r\nexport const login = createAction('[Auth] Login client', props<{email: string, password: string}>());\r\nexport const csrf = createAction('[Auth] csrf');\r\nexport const captcha = createAction('[Auth] get captcha')\r\nexport const captchaSuccess = createAction('[Auth] captcha success', props<{captcha: Captcha}>());\r\n\r\nexport const logout = createAction('[Auth] Logout');\r\nexport const logoutSuccess = createAction('[Auth] Logout success', props<{message: string}>());\r\nexport const logoutFailed = createAction('[Auth] Logout failed', props<{error: string, isErrorVisible: boolean}>());\r\n\r\nexport const register = createAction('[Auth] Register client', props<{email: string, password: string, name: string}>());\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport * as AuthAction from \"./action\";\r\nimport * as UserIdentAction from \"src/store/user-ident-store/action\";\r\nimport * as FlashMessageAction from 'src/store/flash-message-store/action';\r\n\r\nimport { catchError, delay, from, map, mergeMap, Observable, of, pipe, switchMap, tap } from \"rxjs\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthEffect {\r\n\r\n  constructor(private _action$: Actions, private _authService: AuthService){}\r\n\r\n  login$ = createEffect(()=>\r\n  this._action$.pipe(\r\n    ofType(AuthAction.login),\r\n    switchMap((data)=>\r\n      this._authService.login(data).pipe(\r\n        switchMap((loginResponse)=> [\r\n          // Creation du UserIdent\r\n          UserIdentAction.createUserIden({\r\n            userId: loginResponse.id,\r\n            email: loginResponse.email,\r\n            jwt: loginResponse.jwt,\r\n            roles: loginResponse.roles\r\n\r\n          }),\r\n\r\n          // Generation Message login\r\n          FlashMessageAction.createMessage({message: loginResponse.message, isError: false})\r\n        ]),\r\n        catchError((error)=>from([\r\n          UserIdentAction.clearUserIden(),\r\n          // Generation Message d'erreur\r\n          FlashMessageAction.createMessage({message: error.error, isError: true})\r\n        ])\r\n        )\r\n      )\r\n    )\r\n  )\r\n  )\r\n\r\n  register$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.register),\r\n      mergeMap((data)=>\r\n        this._authService.register(data).pipe(\r\n          switchMap((registerResponse)=>[\r\n            // Generation Message Register\r\n            FlashMessageAction.createMessage({message: registerResponse.message, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  logout$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.logout),\r\n      mergeMap(()=>\r\n        this._authService.logout().pipe(\r\n          switchMap((resMessage)=> {\r\n            localStorage.removeItem('user');\r\n            return [\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message logout\r\n              FlashMessageAction.createMessage({message: resMessage, isError: false})\r\n            ]\r\n          }),\r\n          catchError((error)=>{\r\n            localStorage.removeItem('user');\r\n            return from([\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            ])\r\n          }\r\n        )\r\n      )\r\n    )\r\n  ))\r\n\r\n  csrf$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.csrf),\r\n      mergeMap(()=>\r\n        this._authService.csrf().pipe(\r\n          switchMap((csrf)=>[\r\n            // Generation Message Register\r\n            FlashMessageAction.createMessage({message: csrf, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  captcha$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.captcha),\r\n      mergeMap(()=>\r\n        this._authService.captcha().pipe(\r\n          map((captcha)=>AuthAction.captchaSuccess({captcha})),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  )\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as AuthAction from \"./action\";\r\nimport { AuthModel } from \"./auth.model\";\r\n\r\nexport const initialState: AuthModel = {\r\n  error: '',\r\n  isErrorVisible: false,\r\n  isLoading: false,\r\n  captcha: null\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialState,\r\n  on(AuthAction.login, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.register, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.captchaSuccess,(state, {captcha})=>({\r\n    ...state,\r\n    ...state.captcha, captcha\r\n  })\r\n)\r\n);\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"src/store/app.state\";\r\n\r\nexport const selector = (state:AppState) => state.authState;\r\n\r\nexport const isErrorVisibleSelector = createSelector(selector, (state) => state.isErrorVisible);\r\nexport const isLoadingSelector = createSelector(selector, (state)=>state.isLoading)\r\nexport const errorMessageSelector = createSelector(selector, (state) => state.error);\r\nexport const captchaSelector = createSelector(selector, (state) => state.captcha);\r\nexport const captchaQuestionSelector = createSelector(selector, (state) => state.captcha?.question)\r\n","import { Component } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n\n  message: string = '';\n\n  constructor(private _homeService: HomeService) { }\n\n  ngOnInit() {\n    this._homeService.getHomeMessage().subscribe(\n      res=> this.message = res,\n      error => console.error('Erreur!', error)\n    );\n  }\n\n}\n","<p>home-page works!</p>\n\n<h2>Message du backend</h2>\n<p>{{message}}</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent {\n\n}\n","<p>not-found-page works!</p>\n","import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent {\n\n  message: string = '';\n\n  constructor(private _userService: UserService) {}\n\n  ngOnInit() {\n    this._userService.getUsers().subscribe(res=>this.message=res);\n  }\n\n}\n","<h2>PAge sur les utilisateurs</h2>\n\n<p>{{message}}</p>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/version\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getHomeMessage(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/users\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getUsers(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n}\n","import { EnvironmentRef } from \"./environment.ref\";\r\n\r\n/**\r\n * Dev - LocalServer\r\n */\r\nexport const environment: EnvironmentRef = {\r\n  production: false,\r\n  name: 'dev',\r\n  api_base: 'http://localhost:8080/api',\r\n  webapp_path: 'lalamiam'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport { reducers as AuthReducers } from './../app/modules/auth/store/auth-store/reducer';\r\nimport { reducers as UserIdentReducers } from './user-ident-store/reducer';\r\nimport { reducers as MessageReducers } from './flash-message-store/reducer';\r\nimport { AuthModel } from \"src/app/modules/auth/store/auth-store/auth.model\";\r\nimport { UserIdentModel } from \"./user-ident-store/user.ident.model\";\r\nimport { MessageModel } from \"./flash-message-store/message.model\";\r\n\r\nexport interface AppState {\r\n  userIdentState: UserIdentModel;\r\n  authState: AuthModel;\r\n  messageState: MessageModel\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  userIdentState: UserIdentReducers,\r\n  authState: AuthReducers,\r\n  messageState: MessageReducers\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createMessage = createAction('[message] create message', props<{ message: string, isError: boolean }>());\r\n\r\nexport const clearMessage = createAction('[message] clear message');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\n\r\nimport * as FlashMessageAction from './action';\r\nimport { delay, map } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class FlashMessageEffect {\r\n\r\n  constructor(private _action$: Actions){}\r\n\r\n  clear$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(FlashMessageAction.createMessage),\r\n      delay(5000),\r\n      map(()=>FlashMessageAction.clearMessage())\r\n    )\r\n  )\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as MessageAction from \"./action\";\r\nimport { MessageModel } from \"./message.model\";\r\n\r\nexport const initialMessageState: MessageModel = {\r\n  message: '',\r\n  isError: false\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialMessageState,\r\n  on(MessageAction.createMessage, (state, {message})=>({...state, message})),\r\n  on(MessageAction.clearMessage,(state)=>({...state, message: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.messageState;\r\n\r\nexport const messageSelector = createSelector(selector, (state) => state.message);\r\nexport const isMessageErrorSelector = createSelector(selector, (state) => state.isError);\r\n\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createUserIden = createAction('[user] create user ident', props<{\r\n    userId: BigInt\r\n    email: string,\r\n    jwt:string,\r\n    roles:string[]\r\n  }>()\r\n);\r\n\r\nexport const clearUserIden = createAction('[user] clear user ident');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from \"@ngrx/effects\";\r\nimport * as UserIdentAction from \"./action\";\r\n\r\nimport { map, tap } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n\r\n  constructor(private _action$: Actions){\r\n    console.log('AppInitEffects instantiated'); // Log for instantiation\r\n  }\r\n\r\n  init$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(ROOT_EFFECTS_INIT),\r\n      tap(value=>{\r\n        console.log(value);\r\n      }),\r\n      map(()=>{\r\n\r\n        const userString = localStorage.getItem('user');\r\n        if(userString) {\r\n          console.log(\"ici, userinfo: \" + userString);\r\n          const user = JSON.parse(userString);\r\n\r\n          return UserIdentAction.createUserIden({\r\n            userId: user.userid,\r\n            email: user.email,\r\n            jwt: user.jwt,\r\n            roles: user.roles\r\n          })\r\n        }\r\n        return { type: '[user] clear user ident'}\r\n      })\r\n    )\r\n  );\r\n\r\n  clearUser$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(UserIdentAction.clearUserIden),\r\n      map(()=>{\r\n        return UserIdentAction.createUserIden({\r\n          userId: BigInt(0),\r\n          jwt: '',\r\n          email: '',\r\n          roles: []\r\n        })\r\n      })\r\n    )\r\n  )\r\n\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as UserIdentAction from \"./action\";\r\nimport { UserIdentModel } from \"./user.ident.model\";\r\n\r\nexport const initialUserState: UserIdentModel = {\r\n  userId: BigInt(0),\r\n  token: '',\r\n  jwt: '',\r\n  email: '',\r\n  roles: []\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialUserState,\r\n  on(UserIdentAction.createUserIden, (state, {email, jwt, userId, roles})=>({...state, email, jwt, userId, roles, token: ''})),\r\n  on(UserIdentAction.clearUserIden,(state)=>({...state, email: '', roles: [], userId: BigInt(0), jwt: '', token: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.userIdentState;\r\n\r\nexport const getEmailSelector = createSelector(selector, (state) => state.email);\r\nexport const getJwtSelector = createSelector(selector, (state)=>state.jwt);\r\n"],"names":["RouterModule","HomePageComponent","NotFoundPageComponent","UserPageComponent","environment","routes","path","webapp_path","children","component","title","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","isDevMode","BrowserModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","FormsModule","ReactiveFormsModule","StoreDevtoolsModule","StoreModule","EffectsModule","reducers","UserEffect","FlashMessageEffect","HandlerHttpInterceptor","NavbarComponent","FlashMessageComponent","AuthModule","InputTextModule","AppModule","bootstrap","provide","useClass","multi","instrument","maxAge","logOnly","serialize","replacer","_key","value","toString","declarations","StoreRootModule","i2","EffectsRootModule","i3","select","messageSelector","isMessageErrorSelector","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","message_r1","_store","message$","pipe","isErrorMessage$","ɵɵdirectiveInject","Store","consts","FlashMessageComponent_Template","ɵɵtemplate","FlashMessageComponent_div_0_Template","ɵɵproperty","ɵɵpipeBind1","getEmailSelector","Action","ɵɵlistener","NavbarComponent_div_13_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","logout","userEmail$","dispatch","NavbarComponent_Template","NavbarComponent_div_13_Template","HttpResponse","tap","Router","_injector","intercept","request","next","urlWithParams","includes","console","log","localStorage","getItem","token","formToken","clone","withCredentials","setHeaders","authorization","handle","event","headers","get","csrfToken","setItem","error","errorStatus","status","router","navigate","message","ɵɵinject","Injector","factory","ɵfac","CommonModule","LoginPageComponent","RegisterPageComponent","authRouting","authReducer","AuthEffect","AuthService","PasswordModule","MessagesModule","ButtonModule","forChild","forFeature","StoreFeatureModule","EffectsFeatureModule","Captcha","image","mimeType","question","response","LoginDto","email","password","RegisterDto","name","FormGroup","Validators","isLoadingSelector","AuthAction","_fb","loginDataFormGroup","isLoading$","ngOnInit","initializeLoginData","group","required","login","valid","markAllAsTouched","logindata","FormBuilder","LoginPageComponent_Template","LoginPageComponent_Template_form_submit_2_listener","captchaSelector","captcha_r1","ɵɵsanitizeUrl","registerDataFormGroup","captcha$","initializeRegisterData","initializeForm","captchaResponse","register","registerData","csrf","captcha","RegisterPageComponent_Template","RegisterPageComponent_Template_form_submit_3_listener","RegisterPageComponent_div_17_Template","map","_http","_apiEndPoint","api_base","loginDto","post","loginResponse","JSON","stringify","userId","id","jwt","roles","registerDto","responseType","dto","toCaptchaModel","user","userString","parse","imageBase64","imageMimeType","HttpClient","providedIn","createAction","props","captchaSuccess","logoutSuccess","logoutFailed","createEffect","ofType","UserIdentAction","FlashMessageAction","catchError","from","mergeMap","of","switchMap","_action$","_authService","login$","data","createUserIden","createMessage","isError","clearUserIden","register$","registerResponse","logout$","resMessage","removeItem","csrf$","Actions","createReducer","on","initialState","isErrorVisible","isLoading","state","createSelector","selector","authState","isErrorVisibleSelector","errorMessageSelector","captchaQuestionSelector","_homeService","getHomeMessage","subscribe","res","HomeService","HomePageComponent_Template","NotFoundPageComponent_Template","_userService","getUsers","UserService","UserPageComponent_Template","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","AuthReducers","UserIdentReducers","MessageReducers","userIdentState","messageState","clearMessage","delay","clear$","MessageAction","initialMessageState","ROOT_EFFECTS_INIT","init$","userid","type","clearUser$","BigInt","initialUserState","getJwtSelector"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}