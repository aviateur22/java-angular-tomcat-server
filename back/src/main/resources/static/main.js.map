{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAEuD;AACmB;AACc;AACd;AACf;AACkB;AAClC;AACa;;;AAExD,MAAMQ,MAAM,GAAW,CACrB;EACEC,IAAI,EAAEL,qEAAW,CAACM,WAAW;EAC7BC,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAEF,gEAAe,CAACK,IAAI,CAACC,GAAG;IAAEC,SAAS,EAAEb,mFAAiB;IAAEc,KAAK,EAAET,yDAAS,CAACU,aAAa,CAACZ,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACrH;IAAER,IAAI,EAAEF,gEAAe,CAACW,KAAK,CAACL,GAAG;IAAEC,SAAS,EAAET,sFAAkB;IAAEU,KAAK,EAAET,yDAAS,CAACa,cAAc,CAACf,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACxH;IAAER,IAAI,EAAEF,gEAAe,CAACa,QAAQ,CAACP,GAAG;IAAEC,SAAS,EAAEX,mFAAiB;IAAEY,KAAK,EAAET,yDAAS,CAACe,iBAAiB,CAACjB,qEAAW,CAACa,QAAQ;EAAC,CAAC,EAC7H;IAAER,IAAI,EAAEF,gEAAe,CAACe,QAAQ,CAACT,GAAG;IAAEC,SAAS,EAAEZ,iGAAqB;IAAEa,KAAK,EAAET,yDAAS,CAACiB,iBAAiB,CAACnB,qEAAW,CAACa,QAAQ;EAAC,CAAC;CAEpI,EACD;EAAER,IAAI,EAAE,EAAE;EAAEe,UAAU,EAAE,GAAGpB,qEAAW,CAACM,WAAW,IAAIH,gEAAe,CAACK,IAAI,CAACC,GAAG,EAAE;EAAEY,SAAS,EAAE;AAAM,CAAC,EACpG;EAAEhB,IAAI,EAAE,IAAI;EAAEe,UAAU,EAAC,GAAGpB,qEAAW,CAACM,WAAW,IAAIH,gEAAe,CAACe,QAAQ,CAACT,GAAG,EAAE;EAAEY,SAAS,EAAE;AAAM,CAAC,CAC1G;AAOK,MAAOC,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF;EAAgB;EAAA,QAAAG,EAAA;cAHjB7B,yDAAY,CAAC8B,OAAO,CAACtB,MAAM,CAAC,EAC5BR,yDAAY;EAAA;;;sHAEX0B,gBAAgB;IAAAK,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBjC,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACrBlB,MAAOkC,YAAY;EALzBC,YAAA;IAME,KAAApB,KAAK,GAAG,UAAU;;EACnB,QAAAY,CAAA;qBAFYO,YAAY;EAAA;EAAA,QAAAN,EAAA;UAAZM,YAAY;IAAAE,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBE,uDAAA,wBAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAa;AACM;AACqB;AACJ;AACT;AAEP;AACjB;AACI;AACC;AACgB;AACW;AACd;AAEJ;AACT;AACwB;AACG;AACc;AACd;AACiB;AACd;AACrB;AAEJ;AACJ;AACA;AACF;AACc;AACV;AACR;AACM;AACE;;;;;AA0C5C,MAAO4B,SAAS;EAAA,QAAA5C,CAAA;qBAAT4C,SAAS;EAAA;EAAA,QAAA3C,EAAA;UAAT2C,SAAS;IAAAC,SAAA,GAFRtC,wDAAY;EAAA;EAAA,QAAAL,EAAA;eAJb,CACTsC,6DAAmB,EACnB;MAACM,OAAO,EAAEzB,oEAAiB;MAAE0B,QAAQ,EAAChB,qEAAsB;MAAEiB,KAAK,EAAE;IAAI,CAAE,CAC5E;IAAA5C,OAAA,GA1BCe,qEAAa,EACbC,0FAAuB,EACvBE,mEAAgB,EAChBC,wDAAW,EACXC,gEAAmB,EACnBU,kEAAU,EACVnC,iEAAgB,EAChB2B,qDAAW,CAACvB,OAAO,CAACyB,yDAAQ,CAAC,EAC7BD,yDAAa,CAACxB,OAAO,CAAC,CAAC0B,yEAAU,EAAEC,oFAAkB,CAAC,CAAC,EACvDL,sEAAmB,CAACwB,UAAU,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE,CAACjC,yDAAS,EAAE;MAAEkC,SAAS,EAAE;QAC7EC,QAAQ,EAAEA,CAACC,IAAI,EAAEC,KAAK,KAAM,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,QAAQ,EAAE,GAAGD;;KAE9E,CAAC,EACFpB,+DAAe,EACfC,2DAAa,EACbC,2DAAa,EACbC,yDAAY,EACZC,uEAAmB,EACnBE,qDAAU,EACVC,2DAAa,EACbC,6DAAc;EAAA;;;uHASHC,SAAS;IAAAa,YAAA,GAtClBlD,wDAAY,EACZyB,gFAAe,EACf1D,mFAAiB,EACjBC,iGAAqB,EACrBC,mFAAiB,EACjByD,qGAAqB,EACrBvD,uFAAkB;IAAA0B,OAAA,GAGlBe,qEAAa,EACbC,0FAAuB,EACvBE,mEAAgB,EAChBC,wDAAW,EACXC,gEAAmB,EACnBU,kEAAU,EACVnC,iEAAgB,EAAAM,yDAAA,EAAAsD,6DAAA,EAAAE,sEAAA,EAOlB1B,+DAAe,EACfC,2DAAa,EACbC,2DAAa,EACbC,yDAAY,EACZC,uEAAmB,EACnBE,qDAAU,EACVC,2DAAa,EACbC,6DAAc;EAAA;AAAA;;;;;;;;;;;;;;;;ACjE2C;AACE;AAE/C,MAAgBoB,gBAAgB;EAiB5CvD,YAAYwD,YAAiB;IAV7B;;;IAGU,KAAAC,aAAa,GAAwB,IAAIC,GAAG,EAAE;IAExD;;;IAGU,KAAAC,YAAY,GAAwB,IAAID,GAAG,EAAE;IAGrD,IAAI,CAACF,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACI,kBAAkB,EAAE;EAC3B;EAEA;;;EAGQA,kBAAkBA,CAAA;IACxB,IAAI,CAACD,YAAY,GAAGL,sEAAW,CAACO,gBAAgB,CAAC,IAAI,CAACL,YAAY,CAACM,WAAW,EAAE7F,qEAAW,CAACa,QAAQ,CAAC;IACrG,IAAI,CAAC2E,aAAa,GAAGH,sEAAW,CAACO,gBAAgB,CAAC,IAAI,CAACL,YAAY,CAACzE,KAAK,EAAEd,qEAAW,CAACa,QAAQ,CAAC;EAClG;;;;;;;;;;;;;;;;;;;;AC9B0C;AAGqD;;;;;;;ICJjG0B,4DAAA,aAAoG;IAClGA,uDAAA,mBAAyH;;IAC3HA,0DAAA,EAAM;;;;;IAD0BA,uDAAA,GAA4D;IAA5DA,wDAAA,aAAAA,yDAAA,OAAA+D,MAAA,CAAAC,eAAA,wBAA4D,SAAAC,UAAA;;;ADUtF,MAAOhD,qBAAqB;EAKhCzB,YAAoB0E,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;IACxB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACC,mFAAe,CAAC,CAAC;IACzD,IAAI,CAACQ,eAAe,GAAG,IAAI,CAACE,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACE,0FAAsB,CAAC,CAAC;EAEzE;EAAC,QAAAzE,CAAA;qBATUiC,qBAAqB,EAAAjB,+DAAA,CAAAX,8CAAA;EAAA;EAAA,QAAAJ,EAAA;UAArBgC,qBAAqB;IAAAxB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAA4E,+BAAA1E,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXlCE,wDAAA,IAAA0E,oCAAA,iBAEM;;;;QAFyD1E,wDAAA,SAAAA,yDAAA,OAAAD,GAAA,CAAAoE,QAAA,EAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC5C;AAG2B;AACD;AACX;AAEG;;;;;;;;;;ICQpDnE,qEAAA,GAAmE;IACjEA,4DAAA,aAAkB;IACcA,wDAAA,qBAAA+E,qEAAA;MAAA/E,2DAAA,CAAAiF,GAAA;MAAA,MAAAC,MAAA,GAAAlF,2DAAA;MAAA,OAAWA,yDAAA,CAAAkF,MAAA,CAAAG,oBAAA,EAAsB;IAAA,EAAC;IAACrF,0DAAA,EAAW;IAEhFA,mEAAA,EAAe;;;;;IAGbA,4DAAA,aAA4C;IAExCA,uDAAA,YAA0B;IAC1BA,oDAAA,kBACF;IAAAA,0DAAA,EAAI;;;;IAHYA,uDAAA,GAAsB;IAAtBA,wDAAA,eAAAwF,MAAA,CAAAC,SAAA,CAAsB;;;;;;IAgC1CzF,qEAAA,GAAmE;IACjEA,4DAAA,SAAI;IAC4BA,wDAAA,qBAAA0F,qFAAA;MAAA1F,2DAAA,CAAA2F,IAAA;MAAA,MAAAC,OAAA,GAAA5F,2DAAA;MAAA,OAAWA,yDAAA,CAAA4F,OAAA,CAAAP,oBAAA,EAAsB;IAAA,EAAC;IAACrF,0DAAA,EAAW;IAEhFA,mEAAA,EAAe;;;;;;IAIbA,4DAAA,aAA+D;IAA3DA,wDAAA,qBAAA6F,8EAAA;MAAA7F,2DAAA,CAAA8F,IAAA;MAAA,MAAAC,OAAA,GAAA/F,2DAAA;MAAA,OAAWA,yDAAA,CAAA+F,OAAA,CAAAC,kBAAA,EAAoB;IAAA,EAAC;IAClChG,4DAAA,YAC+B;IAA/BA,wDAAA,mBAAAiG,2EAAA;MAAAjG,2DAAA,CAAA8F,IAAA;MAAA,MAAAI,OAAA,GAAAlG,2DAAA;MAAA,OAASA,yDAAA,CAAAkG,OAAA,CAAAF,kBAAA,EAAoB;IAAA,EAAC;IAC5BhG,uDAAA,YAA0B;IAC1BA,oDAAA,kBACF;IAAAA,0DAAA,EAAI;;;;IAJDA,uDAAA,GAAsB;IAAtBA,wDAAA,eAAAmG,OAAA,CAAAV,SAAA,CAAsB;;;;;;;;;;;IA5BvCzF,qEAAA,GAAoC;IAClCA,4DAAA,cAA8B;IAIZA,wDAAA,qBAAAoG,qEAAA;MAAApG,2DAAA,CAAAqG,IAAA;MAAA,MAAAC,OAAA,GAAAtG,2DAAA;MAAA,OAAWA,yDAAA,CAAAsG,OAAA,CAAAN,kBAAA,EAAoB;IAAA,EAAC;IAAuEhG,0DAAA,EAAW;IAE9HA,4DAAA,aAA6D;IAGtDA,wDAAA,mBAAAuG,4DAAA;MAAAvG,2DAAA,CAAAqG,IAAA;MAAA,MAAAG,OAAA,GAAAxG,2DAAA;MAAA,OAASA,yDAAA,CAAAwG,OAAA,CAAAR,kBAAA,EAAoB;IAAA,EAAC;IAAoChG,oDAAA,WAAI;IAAAA,0DAAA,EAAI;IAI/EA,4DAAA,cAA4E;IAAxEA,wDAAA,qBAAAyG,gEAAA;MAAAzG,2DAAA,CAAAqG,IAAA;MAAA,MAAAK,OAAA,GAAA1G,2DAAA;MAAA,OAAWA,yDAAA,CAAA0G,OAAA,CAAAV,kBAAA,EAAoB;IAAA,EAAC;IAClChG,4DAAA,aAAqE;IAAlEA,wDAAA,mBAAA2G,6DAAA;MAAA3G,2DAAA,CAAAqG,IAAA;MAAA,MAAAO,OAAA,GAAA5G,2DAAA;MAAA,OAASA,yDAAA,CAAA4G,OAAA,CAAAZ,kBAAA,EAAoB;IAAA,EAAC;IAAoChG,oDAAA,aAAK;IAAAA,0DAAA,EAAI;IAIhFA,wDAAA,KAAA6G,wDAAA,0BAIe;;IAGf7G,wDAAA,KAAA8G,uDAAA,iCAAA9G,oEAAA,CAQc;IAChBA,0DAAA,EAAK;IAIbA,mEAAA,EAAe;;;;;IAlC0DA,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IAIjDA,uDAAA,GAA2C;IAA3CA,wDAAA,4BAAAA,6DAAA,IAAAiH,GAAA,EAA2C;IACxBjH,uDAAA,GAAqB;IAArBA,wDAAA,eAAAkH,MAAA,CAAAC,QAAA,CAAqB;IAKrBnH,uDAAA,GAAqB;IAArBA,wDAAA,eAAAkH,MAAA,CAAAE,QAAA,CAAqB;IAIvDpH,uDAAA,GAA2B;IAA3BA,wDAAA,SAAAA,yDAAA,QAAAkH,MAAA,CAAAG,UAAA,EAA2B,aAAAC,GAAA;;;;;;;;;;;IAuBpDtH,qEAAA,GAAsC;IACpCA,4DAAA,cAAwH;IAErGA,oDAAA,4CAAqC;IAAAA,0DAAA,EAAI;IACxDA,4DAAA,cAA8F;IACwCA,wDAAA,qBAAAuH,qEAAA;MAAAvH,2DAAA,CAAAwH,IAAA;MAAA,MAAAC,OAAA,GAAAzH,2DAAA;MAAA,OAAWA,yDAAA,CAAAyH,OAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IAAoB1H,0DAAA,EAAW;IACvLA,4DAAA,mBAAyG;IAAnCA,wDAAA,qBAAA2H,qEAAA;MAAA3H,2DAAA,CAAAwH,IAAA;MAAA,MAAAI,OAAA,GAAA5H,2DAAA;MAAA,OAAWA,yDAAA,CAAA4H,OAAA,CAAAvC,oBAAA,EAAsB;IAAA,EAAC;IAACrF,0DAAA,EAAW;IAK5HA,mEAAA,EAAe;;;IANoBA,uDAAA,GAA6B;IAA7BA,wDAAA,CAAAA,6DAAA,IAAA8H,GAAA,EAA6B;IAAyB9H,wDAAA,kBAAiB;IAC1DA,uDAAA,GAA6B;IAA7BA,wDAAA,CAAAA,6DAAA,IAAA8H,GAAA,EAA6B;;;ADtEvE,MAAO9G,eAAe;EA+B1BxB,YAAoB0E,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;IA3B1B,KAAA6D,eAAe,GAAY,KAAK;IAChC,KAAAC,aAAa,GAAW,KAAK;IAC7B,KAAAC,KAAK,GAAe,CAClB;MACEC,KAAK,EAAE,MAAM;MACbC,UAAU,EAAE,GAAG;MACfC,IAAI,EAAE;KACP,EACD;MACEF,KAAK,EAAE,MAAM;MACbC,UAAU,EAAE,GAAG;MACfC,IAAI,EAAE;KACP,CACF;IACD,KAAAC,UAAU,GAAyBC,SAAS;IAE3C;;;IAGD,KAAAC,UAAU,GAAW9K,qEAAW,CAACM,WAAW;IAS1C,IAAI,CAACsJ,UAAU,GAAG,IAAI,CAACnD,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACoB,iFAAgB,CAAC,CAAC;EAE9D;EAEA6D,QAAQA,CAAA;IACN,IAAI,CAACrB,QAAQ,GAAG,IAAI,IAAI,CAACoB,UAAU,IAAI3K,uEAAe,CAACK,IAAI,CAACC,GAAG,EAAE;IACjE,IAAI,CAACkJ,QAAQ,GAAG,IAAI,IAAI,CAACmB,UAAU,IAAI3K,uEAAe,CAACa,QAAQ,CAACP,GAAG,EAAE;IACrE,IAAI,CAACuH,SAAS,GAAG,IAAI,IAAI,CAAC8C,UAAU,IAAI3K,uEAAe,CAAC6K,KAAK,CAACvK,GAAG,EAAE;EACrE;EAEA;;;EAGAmH,oBAAoBA,CAAA;IAClB,IAAI,CAAC0C,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;EAC9C;EAEA;;;EAGA/B,kBAAkBA,CAAA;IAChB,IAAI,CAACgC,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;EAC1C;EAEAN,MAAMA,CAAA;IACJ,IAAI,CAACxD,MAAM,CAACwE,QAAQ,CAAC9D,gFAAa,EAAE,CAAC;IACrC,IAAI,CAACS,oBAAoB,EAAE;EAC7B;EAEA;;;;EAKAsD,QAAQA,CAACC,KAAY;IACnB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEA;;;EAGAA,UAAUA,CAAA;IACR,IAAIC,MAAM,CAACC,UAAU,GAAG,GAAG,IAAI,IAAI,CAACf,aAAa,EAAE;MACjD,IAAI,CAACA,aAAa,GAAG,KAAK;;EAE9B;EAAC,QAAAhJ,CAAA;qBA7EUgC,eAAe,EAAAhB,+DAAA,CAAAX,8CAAA;EAAA;EAAA,QAAAJ,EAAA;UAAf+B,eAAe;IAAAvB,SAAA;IAAAuJ,YAAA,WAAAC,6BAAAnJ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAfC,GAAA,CAAA4I,QAAA,CAAAO,MAAA,CAAgB;QAAA,UAAAlJ,6DAAA;;;;;;;;QCf7BA,4DAAA,aAAiB;QAILA,wDAAA,mBAAAoJ,6CAAA;UAAA,OAASrJ,GAAA,CAAAiG,kBAAA,EAAoB;QAAA,EAAC;QAA4BhG,oDAAA,aAAM;QAAAA,0DAAA,EAAK;QAM3EA,4DAAA,aAAgC;QAGYA,oDAAA,WAAI;QAAAA,0DAAA,EAAI;QAEhDA,4DAAA,aAA2C;QAAsCA,oDAAA,aAAK;QAAAA,0DAAA,EAAI;QAC1FA,wDAAA,KAAAqJ,wCAAA,0BAIe;;QAEfrJ,wDAAA,KAAAsJ,uCAAA,iCAAAtJ,oEAAA,CAOc;QAChBA,0DAAA,EAAK;QAIbA,uDAAA,iBAAuB;QAGvBA,wDAAA,KAAAuJ,wCAAA,6BAuCe;QAGfvJ,wDAAA,KAAAwJ,wCAAA,2BAWe;;;;QA9EyBxJ,uDAAA,GAA2C;QAA3CA,wDAAA,4BAAAA,6DAAA,IAAAiH,GAAA,EAA2C;QACvDjH,uDAAA,GAAqB;QAArBA,wDAAA,eAAAD,GAAA,CAAAoH,QAAA,CAAqB;QAEoBnH,uDAAA,GAAqB;QAArBA,wDAAA,eAAAD,GAAA,CAAAqH,QAAA,CAAqB;QACjEpH,uDAAA,GAA2B;QAA3BA,wDAAA,SAAAA,yDAAA,QAAAD,GAAA,CAAAsH,UAAA,EAA2B,aAAAoC,GAAA;QAqBrCzJ,uDAAA,GAAmB;QAAnBA,wDAAA,SAAAD,GAAA,CAAAiI,aAAA,CAAmB;QA0CnBhI,uDAAA,GAAqB;QAArBA,wDAAA,SAAAD,GAAA,CAAAgI,eAAA,CAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEN;AACS;AACE;AACkB;AACH;;AAIlD,MAAOhH,sBAAsB;EAEjCvB,YAAoBqK,SAAmB;IAAnB,KAAAA,SAAS,GAATA,SAAS;EAAa;EAE1CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,IAAGD,OAAO,CAACE,aAAa,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAC;MACzC,IAAIC,KAAK,GAAuB7B,SAAS;MAEzC,MAAM8B,IAAI,GAAeC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACrDC,OAAO,CAACC,GAAG,CAAC,yBAAyBJ,IAAI,EAAE,CAAC;MAE5C,IAAGA,IAAI,KAAK,IAAI,EAAE;QAChB,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;QACjCG,OAAO,CAACC,GAAG,CAAC,mBAAmBC,QAAQ,CAACG,GAAG,EAAE,CAAC;QAC9CT,KAAK,GAAGM,QAAQ,CAACG,GAAG;;MAGtB,MAAMC,SAAS,GAAgBR,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;MACtEP,OAAO,GAAGA,OAAO,CAACe,KAAK,CAAC;QACtBC,eAAe,EAAE,IAAI;QACrBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUd,KAAK,EAAE;UAChC,cAAc,EAAE,kBAAkB;UAClC,iBAAiB,EAAEU,SAAS,KAAK,IAAI,GAAG,GAAG,GAAGA;;OAEjD,CAAC;;IAEJ,OAAOb,IAAI,CAACkB,MAAM,CAACnB,OAAO,CAAC,CAAC3F,IAAI,CAC9BuF,yCAAG,CAACf,KAAK,IAAE;MACT,IAAGA,KAAK,YAAYc,8DAAY,EAAE;QAChC,MAAMyB,SAAS,GAAGvC,KAAK,CAACwC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QACtD,IAAIF,SAAS,EAAE;UACbd,YAAY,CAACiB,OAAO,CAAC,iBAAiB,EAAEH,SAAS,CAAC;;;IAGxD,CAAC,CAAC,EACFxB,yCAAG,CAAC;MACFpL,KAAK,EAAGA,KAAwB,IAAG;QACjC,MAAMgN,WAAW,GAAWhN,KAAK,CAACiN,MAAM;QACxC,MAAMC,MAAM,GAAG,IAAI,CAAC5B,SAAS,CAACwB,GAAG,CAACzB,mDAAM,CAAC;QACzC,MAAMrB,UAAU,GAAW9K,qEAAW,CAACM,WAAW,KAAK,EAAE,GACzDN,qEAAW,CAACM,WAAW,GAAG,EAAE;QAC5B,QAAOwN,WAAW;UAChB,KAAK,CAAC;YAAE;cACNhB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjM,KAAK,CAACiN,MAAM,CAAC;cACxCC,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGnD,UAAU,IAAI3K,gEAAe,CAACW,KAAK,CAACL,GAAG,EAAE,CAAC,CAAC;cAC/D;;UAEF,KAAK,GAAG;YAAE;cACRqM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEjM,KAAK,CAACoN,OAAO,CAAC;cAC3CF,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGnD,UAAU,IAAI3K,gEAAe,CAAC6K,KAAK,CAACvK,GAAG,EAAE,CAAC,CAAC;cAC/D;;UAEF,KAAK,GAAG;YAAE;cAERqM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC;cACvCiB,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGnD,UAAU,IAAI3K,gEAAe,CAAC6K,KAAK,CAACvK,GAAG,EAAE,CAAC,CAAC;cAC/D;;UAEF,KAAK,GAAG;YAAE;cACRqM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjM,KAAK,CAACiN,MAAM,CAAC;cACxCC,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAGnD,UAAU,IAAI3K,gEAAe,CAACe,QAAQ,CAACT,GAAG,EAAE,CAAC,CAAC;cACnE;;;MAGL;KACD,CAAC,CACH;EACH;EAAC,QAAAc,CAAA;qBArEU+B,sBAAsB,EAAAf,sDAAA,CAAAA,mDAAA;EAAA;EAAA,QAAAf,EAAA;WAAtB8B,sBAAsB;IAAA+K,OAAA,EAAtB/K,sBAAsB,CAAAgL;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf+B;AACnB;AACA;AAEL;AACI;AAE+B;AACS;AAClC;AACiB;AACd;AACD;AAEF;AACF;AACA;AACF;AACF;AACE;AAC4B;AAC1B;AACiE;AACc;AACN;;;;;AA+BrH,MAAO7K,UAAU;EAAA,QAAAlC,CAAA;qBAAVkC,UAAU;EAAA;EAAA,QAAAjC,EAAA;UAAViC;EAAU;EAAA,QAAAhC,EAAA;eAFV,CAACoN,+DAAW,CAAC;IAAAlN,OAAA,GAhBtB4M,0DAAY,EACZzL,wDAAW,EACXC,gEAAmB,EACnBnD,0DAAY,CAACwP,QAAQ,CAACV,6DAAW,CAAC,EAClCzL,qDAAW,CAACoM,UAAU,CAAC,WAAW,EAAEV,+DAAW,CAAC,EAChDzL,yDAAa,CAACmM,UAAU,CAAC,CACvBT,gEAAU,CACX,CAAC,EACFlL,+DAAe,EACfoL,6DAAc,EACdC,6DAAc,EACdlL,yDAAY,EACZF,2DAAa,EACbM,2DAAa,EACbC,6DAAc;EAAA;;;uHAILT,UAAU;IAAAuB,YAAA,GA1BnBwJ,sFAAkB,EAClBC,+FAAqB,EACrBO,qFAAoB,EACpBC,4HAA8B,EAC9BC,0IAAkC,EAClCC,oIAAgC;IAAAxN,OAAA,GAGhC4M,0DAAY,EACZzL,wDAAW,EACXC,gEAAmB,EAAAnB,0DAAA,EAAAsD,4DAAA,EAAAE,gEAAA,EAMnB1B,+DAAe,EACfoL,6DAAc,EACdC,6DAAc,EACdlL,yDAAY,EACZF,2DAAa,EACbM,2DAAa,EACbC,6DAAc;EAAA;AAAA;;;;;;;;;;;;;;;;AC9CZ,MAAO8K,oBAAoB;EAE/BjN,YAAoByN,GAAe,EAAUC,cAAgC;IAAzD,KAAAD,GAAG,GAAHA,GAAG;IAAsB,KAAAC,cAAc,GAAdA,cAAc;EAAsB;EAI5CC,OAAOA,CAACvE,KAAiB;IAC5D,IAAI,CAACsE,cAAc,CAACE,kBAAkB,CAAC,IAAI,CAACC,WAAW,CAAC;EAC1D;EACsCC,UAAUA,CAAC1E,KAAiB;IAChE,IAAI,CAACsE,cAAc,CAACK,KAAK,EAAE;EAC7B;EAEQC,sBAAsBA,CAACC,MAA0B;IACvD,OAAOA,MAAM,YAAYC,gBAAgB,IAAI,IAAI,CAACT,GAAG,CAACU,aAAa,CAACC,aAAa,CAAC,OAAO,CAAC,KAAKH,MAAM;EACvG;EAAC,QAAAzO,CAAA;qBAfUyN,oBAAoB,EAAAzM,+DAAA,CAAAA,qDAAA,GAAAA,+DAAA,CAAAA,2DAAA;EAAA;EAAA,QAAAf,EAAA;UAApBwN,oBAAoB;IAAAhN,SAAA;IAAAuJ,YAAA,WAAA+E,kCAAAjO,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAApBC,GAAA,CAAAoN,OAAA,CAAAjE,MAAA,CAAe;QAAA,wBAAA8E,iDAAA9E,MAAA;UAAA,OAAfnJ,GAAA,CAAAuN,UAAA,CAAApE,MAAA,CAAkB;QAAA;;;;;;;;;;;;;;;;;;;;;;ACNxB,IAAK+E,sBAIX;AAJD,WAAYA,sBAAsB;EAChCA,sBAAA,CAAAA,sBAAA,4BAAO;EACPA,sBAAA,CAAAA,sBAAA,4BAAO;EACPA,sBAAA,CAAAA,sBAAA,gDAAiB;AACnB,CAAC,EAJWA,sBAAsB,KAAtBA,sBAAsB;AAM5B,MAAOC,uBAAuB;EAClC1O,YACkB2O,sBAA8C,EAC9CxC,OAAe;IADf,KAAAwC,sBAAsB,GAAtBA,sBAAsB;IACtB,KAAAxC,OAAO,GAAPA,OAAO;EAAU;;;;;;;;;;;;;;;ACT/B,MAAOyC,OAAO;EAClB5O,YACkB6O,KAAa,EACbC,QAAgB,EAChBC,QAAgB,EAChBC,QAAgB;IAHhB,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,QAAQ,GAARA,QAAQ;EACvB;;;;;;;;;;;;;;;;;;;;;;;;;;ACJyD;AACH;AAEf;AACe;AAE2C;AACpB;AAEb;AACf;;;;;;;ICN9CxO,4DAAA,UAAmF;IAC9EA,oDAAA,GAAuD;IAAAA,0DAAA,EAAI;;;;IAA3DA,uDAAA,GAAuD;IAAvDA,+DAAA,CAAA6O,MAAA,CAAA1L,YAAA,CAAAkI,GAAA,oCAAuD;;;;;IAG5DrL,4DAAA,UAAmF;IAC9EA,oDAAA,GAAqD;IAAAA,0DAAA,EAAI;;;;IAAzDA,uDAAA,GAAqD;IAArDA,+DAAA,CAAA8O,MAAA,CAAA3L,YAAA,CAAAkI,GAAA,kCAAqD;;;;;IAP5DrL,4DAAA,aAA+F;IAE7FA,wDAAA,IAAA+O,mDAAA,iBAEM;IAEN/O,wDAAA,IAAAgP,mDAAA,iBAEM;IACRhP,0DAAA,EAAM;;;;;IAPEA,uDAAA,GAA2E;IAA3EA,wDAAA,SAAAiP,kBAAA,CAAAd,sBAAA,KAAApK,MAAA,CAAAmL,4BAAA,CAA2E;IAI3ElP,uDAAA,GAA2E;IAA3EA,wDAAA,SAAAiP,kBAAA,CAAAd,sBAAA,KAAApK,MAAA,CAAAoL,4BAAA,CAA2E;;;;;IAMjFnP,4DAAA,UAAK;IACAA,oDAAA,GAAuD;IAAAA,0DAAA,EAAI;;;;IAA3DA,uDAAA,GAAuD;IAAvDA,+DAAA,CAAAwF,MAAA,CAAArC,YAAA,CAAAkI,GAAA,oCAAuD;;;ADE9D,MAAOqB,8BAA+B,SAAQ3J,8DAAgB;EAYlEvD,YAAoB4P,eAA+B,EAAUC,OAAe,EAAUnL,MAAuB;IAC3G,KAAK,CAACyK,mFAAU,CAACW,qBAAqB,CAAC;IADrB,KAAAF,eAAe,GAAfA,eAAe;IAA0B,KAAAC,OAAO,GAAPA,OAAO;IAAkB,KAAAnL,MAAM,GAANA,MAAM;IAR5F;IACA,KAAAgL,4BAA4B,GAA2BjB,kFAAsB,CAACsB,OAAO;IACrF,KAAAJ,4BAA4B,GAA2BlB,kFAAsB,CAACuB,OAAO;IAErF;IACA,KAAAC,eAAe,GAAkB,EAAE;IACnC,KAAAC,SAAS,GAAkB,EAAE;IAI3B,IAAI,CAACC,yBAAyB,GAAG,IAAI,CAACzL,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACmL,uFAA+B,CAAC,CAAC;EAC5F;EAEAlG,QAAQA,CAAA;IACN;IACA,IAAI,CAACtE,MAAM,CAACwE,QAAQ,CAAC+F,0DAAe,EAAE,CAAC;IAEvC,IAAI,CAACiB,SAAS,GAAG,IAAI,CAACN,eAAe,CAACS,QAAQ,CAACC,QAAQ,CAACzE,GAAG,CAAC,YAAY,CAAC;IACzE,IAAI,CAACoE,eAAe,GAAG,IAAI,CAACL,eAAe,CAACS,QAAQ,CAACC,QAAQ,CAACzE,GAAG,CAAC,oBAAoB,CAAC;IAEvF,IAAG,IAAI,CAACqE,SAAS,KAAK,IAAI,IAAI,IAAI,CAACA,SAAS,CAACK,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAACN,eAAe,KAAK,IAAI,IAAI,IAAI,CAACA,eAAe,CAACM,IAAI,EAAE,KAAK,EAAE,EAAE;MACjI,IAAI,CAACV,OAAO,CAAC3D,QAAQ,CAAC,CAAC,GAAGjO,qEAAW,CAACM,WAAW,IAAIH,uEAAe,CAACW,KAAK,CAACL,GAAG,EAAE,CAAC,CAAC;;IAGpF,IAAI,CAAC8R,eAAe,EAAE;EACxB;EAEA;;;EAGAA,eAAeA,CAAA;IACb,MAAMC,kBAAkB,GAAuB;MAC7C3R,QAAQ,EAAEb,qEAAW,CAACyS,QAAQ;MAC9B/F,KAAK,EAAE,IAAI,CAACsF,eAAgB;MAC5BU,KAAK,EAAE,IAAI,CAACT;KACb;IAED,IAAI,CAACxL,MAAM,CAACwE,QAAQ,CAAC+F,qEAA0B,CAACwB,kBAAkB,CAAC,CAAC;EACtE;EAAC,QAAAjR,CAAA;qBA1CU0N,8BAA8B,EAAA1M,+DAAA,CAAAX,2DAAA,GAAAW,+DAAA,CAAAX,mDAAA,GAAAW,+DAAA,CAAA2C,8CAAA;EAAA;EAAA,QAAA1D,EAAA;UAA9ByN,8BAA8B;IAAAjN,SAAA;IAAA4Q,QAAA,GAAArQ,wEAAA;IAAAN,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAA2Q,wCAAAzQ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnB3CE,4DAAA,aAA+B;QAGUA,oDAAA,GAA6B;QAAAA,0DAAA,EAAK;QACrEA,wDAAA,IAAAwQ,6CAAA,iBASM;;QAENxQ,wDAAA,IAAAyQ,qDAAA,gCAAAzQ,oEAAA,CAIc;QAChBA,0DAAA,EAAM;;;;QAjB+BA,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAC7CrL,uDAAA,GAAwC;QAAxCA,wDAAA,SAAAA,yDAAA,OAAAD,GAAA,CAAA4P,yBAAA,EAAwC,aAAAlG,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHG;AACd;AACiB;AACC;AAGb;AAEA;AACG;;;;;;;;;;;;;;ICUpDzJ,4DAAA,cAA+D;IAC3BA,oDAAA,kBAAW;IAAAA,0DAAA,EAAI;IACjDA,uDAAA,oBAAmC;IACnCA,4DAAA,aAAoD;IAC5BA,uDAAA,YAAoF;IAAAA,oDAAA,6CAAiC;IAAAA,0DAAA,EAAK;IAC9IA,4DAAA,aAAoB;IAAAA,uDAAA,YAAoF;IAAAA,oDAAA,+CAAkC;IAAAA,0DAAA,EAAK;IAC/IA,4DAAA,cAAoB;IAAAA,uDAAA,aAAoF;IAAAA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAK;IAC/HA,4DAAA,cAAoB;IAAAA,uDAAA,aAAoF;IAAAA,oDAAA,iCAAoB;IAAAA,0DAAA,EAAK;;;;;IAQ3IA,4DAAA,UAAkH;IAChHA,uDAAA,oBAAyG;IAC3GA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAA6C;IAA7CA,wDAAA,SAAAwF,MAAA,CAAAvC,aAAA,CAAAoI,GAAA,oBAA6C;;;;;IAiBzFrL,4DAAA,SAA8H;IAC5HA,uDAAA,oBAAgH;IAClHA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAAoD;IAApDA,wDAAA,SAAAkH,MAAA,CAAAjE,aAAA,CAAAoI,GAAA,2BAAoD;;;;;IAEpGrL,4DAAA,SAA8G;IAC5GA,uDAAA,oBAAiH;IACnHA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAAqD;IAArDA,wDAAA,SAAA6O,MAAA,CAAA5L,aAAA,CAAAoI,GAAA,4BAAqD;;;;;IAYrGrL,4DAAA,SAAsI;IACpIA,uDAAA,oBAAsG;IACxGA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAA0C;IAA1CA,wDAAA,SAAA8O,MAAA,CAAA7L,aAAA,CAAAoI,GAAA,iBAA0C;;;ADpD9F,MAAOsB,kCAAmC,SAAQ5J,8DAAgB;EAStEvD,YACUqR,GAAgB,EAChB3M,MAAuB,EACvBmL,OAAe,EACfD,eAA+B;IACvC,KAAK,CAACT,sFAAU,CAACmC,cAAc,CAAC;IAJxB,KAAAD,GAAG,GAAHA,GAAG;IACH,KAAA3M,MAAM,GAANA,MAAM;IACN,KAAAmL,OAAO,GAAPA,OAAO;IACP,KAAAD,eAAe,GAAfA,eAAe;IAXzB,KAAA2B,gBAAgB,GAAc,IAAIL,qDAAS,CAAC,EAAE,CAAC;IAE9C;IACA,KAAAM,QAAQ,GAAkB,EAAE;IAC5B,KAAAtB,SAAS,GAAkB,EAAE;EAS9B;EAEAlH,QAAQA,CAAA;IACN,IAAI,CAACyI,aAAa,EAAE;IAEpB,IAAI,CAACvB,SAAS,GAAG,IAAI,CAACN,eAAe,CAACS,QAAQ,CAACC,QAAQ,CAACzE,GAAG,CAAC,YAAY,CAAC;IACzE,IAAI,CAAC2F,QAAQ,GAAG,IAAI,CAAC5B,eAAe,CAACS,QAAQ,CAACC,QAAQ,CAACzE,GAAG,CAAC,oBAAoB,CAAC;IAEhF,IAAG,IAAI,CAACqE,SAAS,KAAK,IAAI,IAAI,IAAI,CAACA,SAAS,CAACK,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAACiB,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,CAACjB,IAAI,EAAE,KAAK,EAAE,EAAE;MACnH,IAAI,CAACV,OAAO,CAAC3D,QAAQ,CAAC,CAAC,GAAGjO,qEAAW,CAACM,WAAW,IAAIH,uEAAe,CAACW,KAAK,CAACL,GAAG,EAAE,CAAC,CAAC;;EAEtF;EAEA;;;EAGA+S,aAAaA,CAAA;IACX,IAAI,CAACF,gBAAgB,GAAG,IAAI,CAACF,GAAG,CAACK,KAAK,CAAC;MACrCC,mBAAmB,EAAE,CAAC,EAAE,EAAER,sDAAU,CAACS,QAAQ,CAAC;MAC9CC,QAAQ,EAAE,CAAC,EAAE,EAAEV,sDAAU,CAACS,QAAQ,CAAC;MACnCE,eAAe,EAAE,CAAC,EAAE,EAAEX,sDAAU,CAACS,QAAQ;KAC1C,EAAE;MACDT,UAAU,EAAEC,6EAAiBA;KAC9B,CAAC;EACJ;EAEAW,cAAcA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACR,gBAAgB,CAACS,KAAK,EAAE;MAChC,OAAO,IAAI,CAACT,gBAAgB,CAACU,gBAAgB,EAAE;;IAGjD,MAAMC,iBAAiB,GAAsB;MAC3CvB,KAAK,EAAE,IAAI,CAACT,SAAU;MACtB2B,QAAQ,EAAG,IAAI,CAACN,gBAAgB,CAAC1F,GAAG,CAAC,UAAU,CAAC,EAAE9I,KAAK;MACvDyO,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBG,mBAAmB,EAAE,IAAI,CAACJ,gBAAgB,CAAC1F,GAAG,CAAC,UAAU,CAAC,EAAE9I,KAAK;MACjEjE,QAAQ,EAAEb,qEAAW,CAACa;KACvB;IAED,IAAI,CAAC4F,MAAM,CAACwE,QAAQ,CAAC+F,oEAAyB,CAACiD,iBAAiB,CAAC,CAAC;EACpE;EAAC,QAAA1S,CAAA;qBAvDU2N,kCAAkC,EAAA3M,+DAAA,CAAAX,uDAAA,GAAAW,+DAAA,CAAA2C,8CAAA,GAAA3C,+DAAA,CAAA6C,oDAAA,GAAA7C,+DAAA,CAAA6C,4DAAA;EAAA;EAAA,QAAA5D,EAAA;UAAlC0N,kCAAkC;IAAAlN,SAAA;IAAA4Q,QAAA,GAAArQ,wEAAA;IAAAN,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAAgS,4CAAA9R,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QClB/CE,4DAAA,aAAiD;QAEkEA,wDAAA,oBAAA6R,mEAAA;UAAA,OAAU9R,GAAA,CAAAwR,cAAA,EAAgB;QAAA,EAAC;QAC1IvR,4DAAA,WAA6C;QAAAA,oDAAA,GAA6B;QAAAA,0DAAA,EAAI;QAC9EA,uDAAA,mBAA0C;QAG1CA,4DAAA,aAA0C;QAEHA,oDAAA,GAAgC;QAAAA,0DAAA,EAAQ;QAC3EA,4DAAA,oBAO8B;QAE9BA,wDAAA,KAAA8R,0DAAA,iCAAA9R,oEAAA,CAWc;QAChBA,0DAAA,EAAa;QAIbA,wDAAA,KAAA+R,kDAAA,iBAEM;QACR/R,0DAAA,EAAM;QAGNA,4DAAA,cAA0C;QACLA,oDAAA,IAAuC;QAAAA,0DAAA,EAAQ;QAClFA,uDAAA,sBAOa;QACbA,4DAAA,WAAK;QAEDA,wDAAA,KAAAgS,iDAAA,gBAEK;QACLhS,wDAAA,KAAAiS,iDAAA,gBAEK;QACPjS,0DAAA,EAAK;QAKTA,4DAAA,cAA0C;QACRA,oDAAA,IAA2C;QAAAA,0DAAA,EAAQ;QACnFA,uDAAA,iBAA8J;QAC9JA,4DAAA,WAAK;QAEDA,wDAAA,KAAAkS,iDAAA,gBAEK;QACPlS,0DAAA,EAAK;QAITA,uDAAA,oBAA2D;QAC7DA,0DAAA,EAAO;;;;;;;;QA3E2EA,uDAAA,GAA8B;QAA9BA,wDAAA,cAAAD,GAAA,CAAAgR,gBAAA,CAA8B;QACjE/Q,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAMnCrL,uDAAA,GAAgC;QAAhCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,aAAgC;QAEnErL,uDAAA,GAAmC;QAAnCA,wDAAA,mBAAAmS,GAAA,CAAmC;QAwB9BnS,uDAAA,GAAyG;QAAzGA,wDAAA,WAAAoS,OAAA,GAAArS,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,+BAAA+G,OAAA,CAAAC,OAAA,OAAAD,OAAA,GAAArS,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,+BAAA+G,OAAA,CAAAE,MAAA,kBAAAF,OAAA,CAAAE,MAAA,cAAyG;QAO7EtS,uDAAA,GAAuC;QAAvCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,oBAAuC;QAIxErL,uDAAA,GAAkB;QAAlBA,wDAAA,mBAAkB;QAOXA,uDAAA,GAAuH;QAAvHA,wDAAA,WAAAuS,QAAA,GAAAxS,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,sCAAAkH,QAAA,CAAAF,OAAA,OAAAE,QAAA,GAAAxS,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,sCAAAkH,QAAA,CAAAD,MAAA,kBAAAC,QAAA,CAAAD,MAAA,cAAuH;QAGvHtS,uDAAA,GAAuG;QAAvGA,wDAAA,WAAAwS,QAAA,GAAAzS,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,sCAAAmH,QAAA,CAAAH,OAAA,MAAAtS,GAAA,CAAAgR,gBAAA,CAAAuB,MAAA,kBAAAvS,GAAA,CAAAgR,gBAAA,CAAAuB,MAAA,sBAAuG;QAShFtS,uDAAA,GAA2C;QAA3CA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,wBAA2C;QAIlErL,uDAAA,GAA+H;QAA/HA,wDAAA,WAAAyS,QAAA,GAAA1S,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,0CAAAoH,QAAA,CAAAJ,OAAA,OAAAI,QAAA,GAAA1S,GAAA,CAAAgR,gBAAA,CAAA1F,GAAA,0CAAAoH,QAAA,CAAAH,MAAA,kBAAAG,QAAA,CAAAH,MAAA,cAA+H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpE1E;AACxB;AACe;AAKS;AACT;AACG;AACX;AACgB;;;;;;;;;;;;;ICA1DtS,4DAAA,UAA+G;IAC9GA,uDAAA,oBAAsG;IACxGA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAA0C;IAA1CA,wDAAA,SAAA+D,MAAA,CAAAd,aAAA,CAAAoI,GAAA,iBAA0C;;;;;IAe1FrL,4DAAA,UAAqH;IACnHA,uDAAA,oBAAyG;IAC3GA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAA6C;IAA7CA,wDAAA,SAAA4S,MAAA,CAAA3P,aAAA,CAAAoI,GAAA,oBAA6C;;;ADV/F,MAAOY,kBAAmB,SAAQ0G,8DAAa;EAoBnDnT,YAAoBqR,GAAgB,EAAU3M,MAAuB;IACnE,KAAK,CAACyK,iFAAU,CAACkE,SAAS,CAAC;IADT,KAAAhC,GAAG,GAAHA,GAAG;IAAuB,KAAA3M,MAAM,GAANA,MAAM;IAlBpD,KAAA4O,kBAAkB,GAAc,IAAIpC,qDAAS,CAAC,EAAE,CAAC;IAGjD;;;IAGA,KAAAnI,UAAU,GAAW9K,qEAAW,CAACM,WAAW;IAc1C,IAAI,CAACgV,UAAU,GAAG,IAAI,CAAC7O,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACmP,yEAAiB,CAAC,CAAC;EAE/D;EAEAlK,QAAQA,CAAA;IACN,IAAI,CAACwK,YAAY,GAAI,IAAI,IAAI,CAACzK,UAAU,IAAI3K,uEAAe,CAACqV,QAAQ,CAAC/U,GAAG,EAAE;IAC1E,IAAI,CAACgV,iBAAiB,GAAG,IAAI,IAAI,CAAC3K,UAAU,IAAI3K,uEAAe,CAACuV,uBAAuB,CAACjV,GAAG,EAAE;IAE7F,IAAI,CAACgG,MAAM,CAACwE,QAAQ,CAAC+F,0DAAe,EAAE,CAAC;IACvC,IAAI,CAAC2E,mBAAmB,EAAE;EAC5B;EAEA;;;EAGAA,mBAAmBA,CAAA;IACjB,IAAI,CAACN,kBAAkB,GAAG,IAAI,CAACjC,GAAG,CAACK,KAAK,CAAC;MACvC;MACAf,KAAK,EAAE,CAAC,EAAE,EAAEQ,sDAAU,CAACS,QAAQ,CAAC;MAEhC;MACAC,QAAQ,EAAE,CAAC,EAAE,EAAEV,sDAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEA;;;;EAIA3I,KAAKA,CAAA;IAEH,IAAI,CAAC,IAAI,CAACqK,kBAAkB,CAACtB,KAAK,EAAE;MAClC,OAAO,IAAI,CAACsB,kBAAkB,CAACrB,gBAAgB,EAAE;;IAGnD,MAAM4B,SAAS,GAAa;MAC1BlD,KAAK,EAAE,IAAI,CAAC2C,kBAAkB,CAACzH,GAAG,CAAC,OAAO,CAAC,EAAE9I,KAAK;MAClD8O,QAAQ,EAAG,IAAI,CAACyB,kBAAkB,CAACzH,GAAG,CAAC,UAAU,CAAC,EAAE9I,KAAK;MACzDjE,QAAQ,EAAEb,qEAAW,CAACa;KACvB;IAED,IAAI,CAAC4F,MAAM,CAACwE,QAAQ,CAAC+F,2DAAgB,CAAC4E,SAAS,CAAC,CAAC;EAEnD;EAAC,QAAArU,CAAA;qBAjEUiN,kBAAkB,EAAAjM,+DAAA,CAAAX,uDAAA,GAAAW,+DAAA,CAAA2C,8CAAA;EAAA;EAAA,QAAA1D,EAAA;UAAlBgN,kBAAkB;IAAAxM,SAAA;IAAA4Q,QAAA,GAAArQ,wEAAA;IAAAN,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAA0T,4BAAAxT,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnB/BE,4DAAA,aAA+B;QAEwFA,wDAAA,oBAAAuT,mDAAA;UAAA,OAAUxT,GAAA,CAAA0I,KAAA,EAAO;QAAA,EAAC;QACnIzI,4DAAA,WAA6C;QAAAA,oDAAA,GAA6B;QAAAA,0DAAA,EAAI;QAC9EA,uDAAA,mBAA0C;QAG1CA,4DAAA,aAA0C;QACRA,oDAAA,GAA6B;QAAAA,0DAAA,EAAQ;QACrEA,uDAAA,eAAsI;QAGrIA,wDAAA,KAAAwT,kCAAA,iBAEK;QACRxT,0DAAA,EAAM;QAGNA,4DAAA,cAA0C;QACLA,oDAAA,IAAgC;QAAAA,0DAAA,EAAQ;QAC3EA,uDAAA,sBAMa;QAEbA,wDAAA,KAAAyT,kCAAA,iBAEM;QAGNzT,4DAAA,eAA0C;QACUA,oDAAA,IAAoC;QAAAA,0DAAA,EAAI;QAK9FA,uDAAA,oBAAkE;QAClEA,4DAAA,cAA0C;QACpCA,oDAAA,IAAiC;QAAAA,0DAAA,EAAI;QAACA,4DAAA,aAA6B;QAAAA,oDAAA,IAAoC;QAAAA,0DAAA,EAAI;;;;;QAvCjCA,uDAAA,GAAgC;QAAhCA,wDAAA,cAAAD,GAAA,CAAA+S,kBAAA,CAAgC;QACnE9S,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAKxCrL,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAItDrL,uDAAA,GAAuG;QAAvGA,wDAAA,WAAA0T,OAAA,GAAA3T,GAAA,CAAA+S,kBAAA,CAAAzH,GAAA,4BAAAqI,OAAA,CAAArB,OAAA,OAAAqB,OAAA,GAAA3T,GAAA,CAAA+S,kBAAA,CAAAzH,GAAA,4BAAAqI,OAAA,CAAApB,MAAA,kBAAAoB,OAAA,CAAApB,MAAA,cAAuG;QAO3EtS,uDAAA,GAAgC;QAAhCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,aAAgC;QAGjErL,uDAAA,GAAkB;QAAlBA,wDAAA,mBAAkB;QAMdA,uDAAA,GAA6G;QAA7GA,wDAAA,WAAA2T,OAAA,GAAA5T,GAAA,CAAA+S,kBAAA,CAAAzH,GAAA,+BAAAsI,OAAA,CAAAtB,OAAA,OAAAsB,OAAA,GAAA5T,GAAA,CAAA+S,kBAAA,CAAAzH,GAAA,+BAAAsI,OAAA,CAAArB,MAAA,kBAAAqB,OAAA,CAAArB,MAAA,cAA6G;QAM9FtS,uDAAA,GAA8B;QAA9BA,wDAAA,eAAAD,GAAA,CAAAmT,iBAAA,CAA8B;QAAClT,uDAAA,GAAoC;QAApCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,iBAAoC;QAOpFrL,uDAAA,GAAiC;QAAjCA,gEAAA,MAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,kBAAiC;QAAQrL,uDAAA,GAAyB;QAAzBA,wDAAA,eAAAD,GAAA,CAAAiT,YAAA,CAAyB;QAAChT,uDAAA,GAAoC;QAApCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,iBAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxC/C;AACjB;AAC4B;AAEpB;AAGA;;;;;;;;;;;ICQlDrL,4DAAA,UAAuG;IACtGA,uDAAA,oBAAsG;IACxGA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAA0C;IAA1CA,wDAAA,SAAA+D,MAAA,CAAAd,aAAA,CAAAoI,GAAA,iBAA0C;;;ADF5F,MAAOuB,gCAAiC,SAAQ+F,8DAAa;EAIjEnT,YAAoBqR,GAAgB,EAAU3M,MAAuB;IACnE;IACA,KAAK,CAAC2P,4FAAW,CAACV,uBAAuB,CAAC;IAFxB,KAAAtC,GAAG,GAAHA,GAAG;IAAuB,KAAA3M,MAAM,GAANA,MAAM;IAFpD,KAAA4P,cAAc,GAAc,IAAIpD,qDAAS,CAAC,EAAE,CAAC;EAK7C;EAEAlI,QAAQA,CAAA;IACN,IAAI,CAACuL,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmBA,CAAA;IACjB,IAAI,CAACD,cAAc,GAAG,IAAI,CAACjD,GAAG,CAACK,KAAK,CAAC;MACnCf,KAAK,EAAE,CAAC,EAAE,EAAEQ,sDAAU,CAACS,QAAQ;KAChC,CAAC;EACJ;EAEA4C,yBAAyBA,CAAA;IACvB,IAAI,CAAC,IAAI,CAACF,cAAc,CAACtC,KAAK,EAAE;MAC9B,OAAO,IAAI,CAACsC,cAAc,CAACrC,gBAAgB,EAAE;;IAG/C,MAAMwC,sBAAsB,GAA0B;MACpD9D,KAAK,EAAE,IAAI,CAAC2D,cAAc,CAACzI,GAAG,CAAC,OAAO,CAAC,EAAE9I,KAAK;MAC9CjE,QAAQ,EAAEb,qEAAW,CAACa;KACvB;IAED,IAAI,CAAC4F,MAAM,CAACwE,QAAQ,CAAC+F,yEAA8B,CAACwF,sBAAsB,CAAC,CAAC;EAE9E;EAAC,QAAAjV,CAAA;qBA/BU4N,gCAAgC,EAAA5M,+DAAA,CAAAX,uDAAA,GAAAW,+DAAA,CAAA2C,8CAAA;EAAA;EAAA,QAAA1D,EAAA;UAAhC2N,gCAAgC;IAAAnN,SAAA;IAAA4Q,QAAA,GAAArQ,wEAAA;IAAAN,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAAuU,0CAAArU,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd7CE,4DAAA,aAA+B;QAEoFA,wDAAA,oBAAAoU,iEAAA;UAAA,OAAUrU,GAAA,CAAAiU,yBAAA,EAA2B;QAAA,EAAC;QACnJhU,4DAAA,WAA6C;QAAAA,oDAAA,GAA+B;QAAAA,0DAAA,EAAI;QAChFA,uDAAA,mBAA0C;QAG1CA,4DAAA,WAAmB;QAAAA,oDAAA,GAA+B;QAAAA,0DAAA,EAAI;QAGtDA,4DAAA,aAA0C;QACRA,oDAAA,IAA6B;QAAAA,0DAAA,EAAQ;QACrEA,uDAAA,gBAAsI;QAGrIA,wDAAA,KAAAqU,gDAAA,iBAEK;QACRrU,0DAAA,EAAM;QAENA,uDAAA,oBAA2D;QAC7DA,0DAAA,EAAO;;;;QAnB2EA,uDAAA,GAA4B;QAA5BA,wDAAA,cAAAD,GAAA,CAAA+T,cAAA,CAA4B;QAC/D9T,uDAAA,GAA+B;QAA/BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA+B;QAIzDrL,uDAAA,GAA+B;QAA/BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,YAA+B;QAIhBrL,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAItDrL,uDAAA,GAA+F;QAA/FA,wDAAA,WAAAsU,OAAA,GAAAvU,GAAA,CAAA+T,cAAA,CAAAzI,GAAA,4BAAAiJ,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAvU,GAAA,CAAA+T,cAAA,CAAAzI,GAAA,4BAAAiJ,OAAA,CAAAhC,MAAA,kBAAAgC,OAAA,CAAAhC,MAAA,cAA+F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdlE;AACe;AACS;AAOD;AACK;AAEF;AAIhB;;;;;;;;;;;;;;;ICN5CtS,4DAAA,SAAoH;IAClHA,uDAAA,oBAAsG;IACxGA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAA0C;IAA1CA,wDAAA,SAAA+D,MAAA,CAAAd,aAAA,CAAAoI,GAAA,iBAA0C;;;;;IAE1FrL,4DAAA,SAAiH;IAC/GA,uDAAA,oBAAuG;IACzGA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAA2C;IAA3CA,wDAAA,SAAA4S,MAAA,CAAA3P,aAAA,CAAAoI,GAAA,kBAA2C;;;;;IAmB7FrL,4DAAA,UAAmH;IACjHA,uDAAA,oBAAqG;IACvGA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAAyC;IAAzCA,wDAAA,SAAAwF,MAAA,CAAAvC,aAAA,CAAAoI,GAAA,gBAAyC;;;;;IAkBvFrL,4DAAA,cAA+D;IAC3BA,oDAAA,kBAAW;IAAAA,0DAAA,EAAI;IACjDA,uDAAA,oBAAmC;IACnCA,4DAAA,aAAoD;IAC5BA,uDAAA,YAAoF;IAAAA,oDAAA,6CAAiC;IAAAA,0DAAA,EAAK;IAC9IA,4DAAA,aAAoB;IAAAA,uDAAA,YAAoF;IAAAA,oDAAA,+CAAkC;IAAAA,0DAAA,EAAK;IAC/IA,4DAAA,cAAoB;IAAAA,uDAAA,aAAoF;IAAAA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAK;IAC/HA,4DAAA,cAAoB;IAAAA,uDAAA,aAAoF;IAAAA,oDAAA,iCAAoB;IAAAA,0DAAA,EAAK;;;;;IAQ3IA,4DAAA,UAA4H;IAC1HA,uDAAA,oBAAyG;IAC3GA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAA6C;IAA7CA,wDAAA,SAAA8O,MAAA,CAAA7L,aAAA,CAAAoI,GAAA,oBAA6C;;;;;IAiBzFrL,4DAAA,SAAwI;IACtIA,uDAAA,oBAAgH;IAClHA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAAoD;IAApDA,wDAAA,SAAAkF,MAAA,CAAAjC,aAAA,CAAAoI,GAAA,2BAAoD;;;;;IAEpGrL,4DAAA,SAAwH;IACtHA,uDAAA,oBAAiH;IACnHA,0DAAA,EAAK;;;;IAD2CA,uDAAA,GAAqD;IAArDA,wDAAA,SAAAwU,MAAA,CAAAvR,aAAA,CAAAoI,GAAA,4BAAqD;;;;;IAcxGrL,4DAAA,UAAuJ;IACtJA,uDAAA,oBAAgH;IAClHA,0DAAA,EAAM;;;;IAD0CA,uDAAA,GAAoD;IAApDA,wDAAA,SAAA4F,OAAA,CAAA3C,aAAA,CAAAoI,GAAA,2BAAoD;;;;;IARtGrL,4DAAA,cAA+G;IAC7FA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IACxCA,4DAAA,cAAsD;IACpDA,uDAAA,cAAqE;IACvEA,0DAAA,EAAM;IACNA,uDAAA,gBAA0I;IAEzIA,wDAAA,IAAAyU,2CAAA,iBAEK;IACRzU,0DAAA,EAAM;;;;;;IATYA,uDAAA,GAAoB;IAApBA,+DAAA,CAAA0U,WAAA,CAAAnG,QAAA,CAAoB;IAE7BvO,uDAAA,GAA+D;IAA/DA,wDAAA,kBAAA0U,WAAA,CAAApG,QAAA,gBAAAoG,WAAA,CAAArG,KAAA,EAAArO,2DAAA,CAA+D;IAI7DA,uDAAA,GAA6I;IAA7IA,wDAAA,WAAA4U,OAAA,GAAAC,MAAA,CAAAC,qBAAA,CAAAzJ,GAAA,4CAAAuJ,OAAA,CAAAvC,OAAA,OAAAuC,OAAA,GAAAC,MAAA,CAAAC,qBAAA,CAAAzJ,GAAA,4CAAAuJ,OAAA,CAAAtC,MAAA,kBAAAsC,OAAA,CAAAtC,MAAA,cAA6I;;;;;IAKtJtS,4DAAA,cAAmC;IACjCA,uDAAA,qBAAiE;IAGnEA,0DAAA,EAAM;;;ADzFN,MAAOkM,qBAAsB,SAAQnJ,8DAAgB;EASzDvD,YAAoBqR,GAAgB,EAAU3M,MAAuB,EAAU6Q,YAAyB;IACtG,KAAK,CAACpG,oFAAU,CAACqG,YAAY,CAAC;IADZ,KAAAnE,GAAG,GAAHA,GAAG;IAAuB,KAAA3M,MAAM,GAANA,MAAM;IAA2B,KAAA6Q,YAAY,GAAZA,YAAY;IAP3F,KAAAD,qBAAqB,GAAc,IAAIpE,qDAAS,CAAC,EAAE,CAAC;IASlD,IAAI,CAACuE,QAAQ,GAAG/Q,MAAM,CAACE,IAAI,CAACb,mDAAM,CAACgR,uEAAe,CAAC,CAAC;EACtD;EAEA/L,QAAQA,CAAA;IACN,IAAI,CAAC0M,sBAAsB,EAAE;IAC7B,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAClR,MAAM,CAACwE,QAAQ,CAAC+F,uEAA4B,EAAE,CAAC;IACpDpE,YAAY,CAACiL,UAAU,CAAC,SAAS,CAAC;EACpC;EAEA;;;EAGAJ,sBAAsBA,CAAA;IACpB,IAAI,CAACJ,qBAAqB,GAAG,IAAI,CAACjE,GAAG,CAACK,KAAK,CAAC;MAC1Cf,KAAK,EAAE,CAAC,EAAE,EAAE,CAACQ,sDAAU,CAACS,QAAQ,EAAET,sDAAU,CAACR,KAAK,CAAC,CAAC;MACpDkB,QAAQ,EAAE,CAAC,EAAE,EAAEV,sDAAU,CAACS,QAAQ,CAAC;MACnCE,eAAe,EAAE,CAAC,EAAE,EAAEX,sDAAU,CAACS,QAAQ,CAAC;MAC1CmE,IAAI,EAAG,CAAC,EAAE,EAAE5E,sDAAU,CAACS,QAAQ,CAAC;MAChCoE,qBAAqB,EAAE,CAAC,EAAE,EAAE7E,sDAAU,CAACS,QAAQ;KAChD,EAAE;MACDqE,UAAU,EAAE7E,iFAAiB;KAC9B,CAAC;EACJ;EAEA;;;EAGAuE,cAAcA,CAAA;IACZ,IAAI,CAACjR,MAAM,CAACwE,QAAQ,CAAC+F,6DAAkB,EAAE,CAAC;IAC1C,IAAI,CAACvK,MAAM,CAACwE,QAAQ,CAAC+F,0DAAe,EAAE,CAAC;EACzC;EAEAwE,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAAC6B,qBAAqB,CAACtD,KAAK,EAAE;MACrC,OAAO,IAAI,CAACsD,qBAAqB,CAACrD,gBAAgB,EAAE;;IAGtD,MAAMtB,KAAK,GAAW,IAAI,CAAC2E,qBAAqB,CAACzJ,GAAG,CAAC,OAAO,CAAC,EAAE9I,KAAK;IACpE,MAAM8O,QAAQ,GAAY,IAAI,CAACyD,qBAAqB,CAACzJ,GAAG,CAAC,UAAU,CAAC,EAAE9I,KAAK;IAC3E,MAAMgT,IAAI,GAAW,IAAI,CAACT,qBAAqB,CAACzJ,GAAG,CAAC,MAAM,CAAC,EAAE9I,KAAK;IAClE,MAAMiT,qBAAqB,GAAW,IAAI,CAACV,qBAAqB,CAACzJ,GAAG,CAAC,uBAAuB,CAAC,EAAE9I,KAAK;IAEpG,MAAMoT,YAAY,GAAgB,IAAI,CAACZ,YAAY,CAACa,cAAc,CAACzF,KAAK,EAAEkB,QAAQ,EAAEkE,IAAI,EAAEC,qBAAqB,CAAC;IAEhH,IAAI,CAACtR,MAAM,CAACwE,QAAQ,CAAC+F,8DAAmB,CAACkH,YAAY,CAAC,CAAC;EAEzD;EAAC,QAAA3W,CAAA;qBA7DUkN,qBAAqB,EAAAlM,+DAAA,CAAAX,uDAAA,GAAAW,+DAAA,CAAA2C,8CAAA,GAAA3C,+DAAA,CAAA6C,+DAAA;EAAA;EAAA,QAAA5D,EAAA;UAArBiN,qBAAqB;IAAAzM,SAAA;IAAA4Q,QAAA,GAAArQ,wEAAA;IAAAN,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAAiW,+BAAA/V,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCzBlCE,4DAAA,aAAiD;QAEuEA,wDAAA,oBAAA8V,sDAAA;UAAA,OAAU/V,GAAA,CAAAkT,QAAA,EAAU;QAAA,EAAC;QACzIjT,4DAAA,WAA6C;QAAAA,oDAAA,GAA6B;QAAAA,0DAAA,EAAI;QAC9EA,uDAAA,mBAA0C;QAG1CA,4DAAA,aAA0C;QACRA,oDAAA,GAA6B;QAAAA,0DAAA,EAAQ;QACrEA,uDAAA,eAAsK;QACtKA,4DAAA,UAAK;QAEDA,wDAAA,KAAA+V,oCAAA,gBAEK;QACL/V,wDAAA,KAAAgW,oCAAA,gBAEK;QACPhW,0DAAA,EAAK;QAKTA,4DAAA,cAA0C;QACTA,oDAAA,IAA4B;QAAAA,0DAAA,EAAQ;QACnEA,uDAAA,gBAOoB;QAGlBA,wDAAA,KAAAiW,qCAAA,iBAEM;QACVjW,0DAAA,EAAM;QAGNA,4DAAA,cAA0C;QAEHA,oDAAA,IAAgC;QAAAA,0DAAA,EAAQ;QAC3EA,4DAAA,sBAO8B;QAE9BA,wDAAA,KAAAkW,6CAAA,kCAAAlW,oEAAA,CAWc;QAChBA,0DAAA,EAAa;QAIbA,wDAAA,KAAAmW,qCAAA,iBAEM;QACRnW,0DAAA,EAAM;QAGNA,4DAAA,cAA0C;QACLA,oDAAA,IAAuC;QAAAA,0DAAA,EAAQ;QAClFA,uDAAA,sBAOa;QACbA,4DAAA,WAAK;QAEDA,wDAAA,KAAAoW,oCAAA,gBAEK;QACLpW,wDAAA,KAAAqW,oCAAA,gBAEK;QACPrW,0DAAA,EAAK;QAKTA,wDAAA,KAAAsW,qCAAA,kBAUM;;QACNtW,wDAAA,KAAAuW,6CAAA,iCAAAvW,oEAAA,CAMc;QACdA,uDAAA,oBAAiE;QACnEA,0DAAA,EAAO;;;;;;;;;;;QAnH2EA,uDAAA,GAAmC;QAAnCA,wDAAA,cAAAD,GAAA,CAAA+U,qBAAA,CAAmC;QACtE9U,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAKxCrL,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,UAA6B;QAIpDrL,uDAAA,GAA6G;QAA7GA,wDAAA,WAAA0T,OAAA,GAAA3T,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,4BAAAqI,OAAA,CAAArB,OAAA,OAAAqB,OAAA,GAAA3T,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,4BAAAqI,OAAA,CAAApB,MAAA,kBAAAoB,OAAA,CAAApB,MAAA,cAA6G;QAG7GtS,uDAAA,GAA0G;QAA1GA,wDAAA,WAAAsU,OAAA,GAAAvU,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,4BAAAiJ,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAvU,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,4BAAAiJ,OAAA,CAAAhC,MAAA,kBAAAgC,OAAA,CAAAhC,MAAA,WAA0G;QASpFtS,uDAAA,GAA4B;QAA5BA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,SAA4B;QAWnDrL,uDAAA,GAA2G;QAA3GA,wDAAA,WAAAoS,OAAA,GAAArS,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,2BAAA+G,OAAA,CAAAC,OAAA,OAAAD,OAAA,GAAArS,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,2BAAA+G,OAAA,CAAAE,MAAA,kBAAAF,OAAA,CAAAE,MAAA,cAA2G;QAQ9EtS,uDAAA,GAAgC;QAAhCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,aAAgC;QAEnErL,uDAAA,GAAmC;QAAnCA,wDAAA,mBAAAwW,GAAA,CAAmC;QAwB9BxW,uDAAA,GAAmH;QAAnHA,wDAAA,WAAAwS,QAAA,GAAAzS,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,+BAAAmH,QAAA,CAAAH,OAAA,OAAAG,QAAA,GAAAzS,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,+BAAAmH,QAAA,CAAAF,MAAA,kBAAAE,QAAA,CAAAF,MAAA,cAAmH;QAOvFtS,uDAAA,GAAuC;QAAvCA,+DAAA,CAAAD,GAAA,CAAAoD,YAAA,CAAAkI,GAAA,oBAAuC;QAIxErL,uDAAA,GAAkB;QAAlBA,wDAAA,mBAAkB;QAOXA,uDAAA,GAAiI;QAAjIA,wDAAA,WAAAyW,QAAA,GAAA1W,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,sCAAAoL,QAAA,CAAApE,OAAA,OAAAoE,QAAA,GAAA1W,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,sCAAAoL,QAAA,CAAAnE,MAAA,kBAAAmE,QAAA,CAAAnE,MAAA,cAAiI;QAGjItS,uDAAA,GAAiH;QAAjHA,wDAAA,WAAA0W,QAAA,GAAA3W,GAAA,CAAA+U,qBAAA,CAAAzJ,GAAA,sCAAAqL,QAAA,CAAArE,OAAA,MAAAtS,GAAA,CAAA+U,qBAAA,CAAAxC,MAAA,kBAAAvS,GAAA,CAAA+U,qBAAA,CAAAxC,MAAA,sBAAiH;QAQrEtS,uDAAA,GAAyB;QAAzBA,wDAAA,SAAAA,yDAAA,SAAAD,GAAA,CAAAkV,QAAA,EAAyB,aAAA3N,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGN;AACS;AAC5B;AACV;AACa;AACsD;AACc;AACN;AAErH,MAAM6E,WAAW,GAAY,CAClC;EACErO,IAAI,EAAEL,qEAAW,CAACM,WAAW;EAC7BC,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAEF,uEAAe,CAAC6K,KAAK,CAACvK,GAAG;IAAEC,SAAS,EAAE8N,sFAAkB;IAAE7N,KAAK,EAAET,gEAAS,CAACgZ,cAAc,CAAClZ,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACxH;IAAER,IAAI,EAAEF,uEAAe,CAACqV,QAAQ,CAAC/U,GAAG;IAAEC,SAAS,EAAE+N,+FAAqB;IAAE9N,KAAK,EAAET,gEAAS,CAACiZ,iBAAiB,CAACnZ,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACjI;IAAER,IAAI,EAAEF,uEAAe,CAACiZ,iBAAiB,CAAC3Y,GAAG;IAAEC,SAAS,EAAEuO,4HAA8B;IAAEtO,KAAK,EAAET,gEAAS,CAACmZ,oBAAoB,CAACrZ,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACtJ;IAAER,IAAI,EAAEF,uEAAe,CAACmZ,qBAAqB,CAAC7Y,GAAG;IAAEC,SAAS,EAAEwO,0IAAkC;IAAEvO,KAAK,EAAET,gEAAS,CAACqZ,0BAA0B,CAACvZ,qEAAW,CAACa,QAAQ;EAAC,CAAC,EACpK;IAAER,IAAI,EAAEF,uEAAe,CAACuV,uBAAuB,CAACjV,GAAG;IAAEC,SAAS,EAAEyO,oIAAgC;IAAExO,KAAK,EAAET,gEAAS,CAACsZ,wBAAwB,CAACxZ,qEAAW,CAACa,QAAQ;EAAC,CAAC;CAGrK,CACF;;;;;;;;;;;;;;;;;;;;;ACrB+C;AAEW;AAIT;AAIiD;;;AAO7F,MAAOgO,WAAW;EAKtB9M,YAAoB2X,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAHjB,KAAAC,YAAY,GAAY3Z,qEAAW,CAACyS,QAAQ,GAAG,OAAO;EAGtB;EAEjCzH,KAAKA,CAAC4O,QAAkB;IAC7B,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAAmB,IAAI,CAACF,YAAY,GAAG,QAAQ,EAAEC,QAAQ,CAAC,CAACjT,IAAI,CACnFuF,yCAAG,CAAC4N,aAAa,IAAE;MACjBlN,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAAC8M,SAAS,CAAC;QAC1CC,MAAM,EAAEF,aAAa,CAACG,EAAE;QACxBvH,KAAK,EAAEoH,aAAa,CAACpH,KAAK;QAC1BvF,GAAG,EAAE2M,aAAa,CAAC3M,GAAG;QACtB+M,KAAK,EAAEJ,aAAa,CAACI;OACtB,CAAC,CAAC;IACL,CAAC,CAAC,CACH;EACH;EAEO1E,QAAQA,CAAC2E,WAAwB;IACtC,OAAO,IAAI,CAACT,KAAK,CAACG,IAAI,CAAsB,IAAI,CAACF,YAAY,GAAG,WAAW,EAAGQ,WAAW,CAAC;EAC5F;EAEOhI,IAAIA,CAAA;IACT,MAAM9R,IAAI,GAAG,IAAI,CAACsZ,YAAY,GAAG,OAAO;IACtC,OAAO,IAAI,CAACD,KAAK,CAAC9L,GAAG,CAACvN,IAAI,EAAC;MAC3B+Z,YAAY,EAAE;KACf,CAAC;EACJ;EAEOnC,OAAOA,CAAA;IACZ,MAAM5X,IAAI,GAAG,IAAI,CAACsZ,YAAY,GAAE,UAAU;IAC1C,OAAO,IAAI,CAACD,KAAK,CAAC9L,GAAG,CAAavN,IAAI,CAAC,CAACsG,IAAI,CAC1C8S,yCAAG,CAACY,GAAG,IAAE,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,CAAC,CACnC;EACH;EAEOpQ,MAAMA,CAAA;IACX;IAEA,MAAM0C,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIxM,IAAI,GAAS,EAAE;IAEnB,IAAGsM,IAAI,IAAE,IAAI,EAAG;MACd,MAAM4N,UAAU,GAAGtN,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;MACnC,MAAMqN,MAAM,GAAGO,UAAU,CAACP,MAAM;MAChC3Z,IAAI,GAAG,IAAI,CAACsZ,YAAY,GAAG,UAAU,GAAGK,MAAM;;IAEhDlN,OAAO,CAACC,GAAG,CAAC1M,IAAI,CAAC;IACjB,OAAO,IAAI,CAACqZ,KAAK,CAAC9L,GAAG,CAACvN,IAAI,EAAC;MACzB+Z,YAAY,EAAE;KACf,CAAC;EACJ;EAEO3D,mBAAmBA,CAAC+D,eAAsC;IAC/D,OAAO,IAAI,CAACd,KAAK,CAACG,IAAI,CAAiC,IAAI,CAACF,YAAY,GAAG,wBAAwB,EAAEa,eAAe,CAAC,CAAC7T,IAAI,CACxH8S,yCAAG,CAAC1I,QAAQ,IAAEA,QAAQ,CAAC7C,OAAO,CAAC,CAChC;EACH;EAEOmF,cAAcA,CAACY,iBAAoC;IACxD,OAAO,IAAI,CAACyF,KAAK,CAACG,IAAI,CAA4B,IAAI,CAACF,YAAY,GAAG,kBAAkB,EAAE1F,iBAAiB,CAAC,CAACtN,IAAI,CAC/G8S,yCAAG,CAAC1I,QAAQ,IAAEA,QAAQ,CAAC7C,OAAO,CAAC,CAChC;EACH;EAEOqE,eAAeA,CAACC,kBAAsC;IAC3D,OAAO,IAAI,CAACkH,KAAK,CAACG,IAAI,CAA6B,IAAI,CAACF,YAAY,GAAG,qBAAqB,EAAEnH,kBAAkB,CAAC,CAAC7L,IAAI,CACpH8S,yCAAG,CAACY,GAAG,IAAE,IAAI,CAACI,sBAAsB,CAACJ,GAAG,CAAC,CAAC,CAC3C;EACH;EAEA;;;;;EAKQC,cAAcA,CAACD,GAAe;IACpC,OAAO,IAAI1J,0DAAO,CAAC0J,GAAG,CAACK,WAAW,EAAEL,GAAG,CAACM,aAAa,EAAEN,GAAG,CAACvJ,QAAQ,EAAEuJ,GAAG,CAACtJ,QAAQ,CAAC;EACpF;EAEA;;;;;EAKQ0J,sBAAsBA,CAACJ,GAA+B;IAC5D,MAAMO,cAAc,GAA4B,IAAI,CAACC,yBAAyB,CAACR,GAAG,CAACS,qBAAqB,CAAC;IACzG,OAAO,IAAIrK,mFAAuB,CAACmK,cAAc,EAAEP,GAAG,CAACnM,OAAO,CAAC;EACjE;EAEA;;;;;;;;EAQOiK,cAAcA,CAACzF,KAAa,EAAEkB,QAAgB,EAAEkE,IAAY,EAAEC,qBAA6B;IAChG,MAAMgD,WAAW,GAAkBnO,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAClE,IAAImO,eAAe,GAAW,EAAE;IAGhC,IAAGD,WAAW,IAAI,IAAI,EAAE;MACtB,MAAME,eAAe,GAAGhO,IAAI,CAACC,KAAK,CAAC6N,WAAW,CAAC;MAC/CC,eAAe,GAAGC,eAAe,CAAClK,QAAQ;;IAG5C;IACA,MAAMmK,wBAAwB,GAA6B;MACzDF,eAAe;MACfG,cAAc,EAAEpD;KACjB;IAED,OAAQ;MACNrF,KAAK;MACLkB,QAAQ;MACRkE,IAAI;MACJoD,wBAAwB;MACxBra,QAAQ,EAAEb,qEAAW,CAACa;KACvB;EACH;EAEA;;;;;EAKOga,yBAAyBA,CAACC,qBAA6B;IAE5D,QAAOA,qBAAqB,CAACM,WAAW,EAAE;MACxC,KAAK5K,kFAAsB,CAACsB,OAAO,CAAC/M,QAAQ,EAAE,CAACqW,WAAW,EAAE;QAAE,OAAO5K,kFAAsB,CAACsB,OAAO;QAAE;MACrG,KAAKtB,kFAAsB,CAACuB,OAAO,CAAChN,QAAQ,EAAE,CAACqW,WAAW,EAAE;QAAE,OAAO5K,kFAAsB,CAACuB,OAAO;QAAE;MACrG,KAAKvB,kFAAsB,CAAC6K,iBAAiB,CAACtW,QAAQ,EAAE,CAACqW,WAAW,EAAE;QAAE,OAAO5K,kFAAsB,CAAC6K,iBAAiB;QAAE;MACzH;QAAS,OAAO7K,kFAAsB,CAACuB,OAAO;QAAE;;EAEpD;EAAC,QAAAxQ,CAAA;qBA1IUsN,WAAW,EAAAtM,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAXqN,WAAW;IAAAR,OAAA,EAAXQ,WAAW,CAAAP,IAAA;IAAAiN,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB+B;AAK3C,MAAMvQ,KAAK,GAAGwQ,yDAAY,CAAC,qBAAqB,EAAEC,kDAAK,EAAuD,CAAC;AAC/G,MAAMtJ,IAAI,GAAGqJ,yDAAY,CAAC,aAAa,CAAC;AACxC,MAAMvD,OAAO,GAAGuD,yDAAY,CAAC,oBAAoB,CAAC;AAClD,MAAME,cAAc,GAAGF,yDAAY,CAAC,wBAAwB,EAAEC,kDAAK,EAAsB,CAAC;AAE1F,MAAMxR,MAAM,GAAGuR,yDAAY,CAAC,eAAe,CAAC;AAC5C,MAAMG,aAAa,GAAGH,yDAAY,CAAC,uBAAuB,EAAEC,kDAAK,EAAqB,CAAC;AACvF,MAAMG,YAAY,GAAGJ,yDAAY,CAAC,sBAAsB,EAAEC,kDAAK,EAA4C,CAAC;AAE5G,MAAMjG,QAAQ,GAAGgG,yDAAY,CAAC,wBAAwB,EAAEC,kDAAK,EAAyH,CAAC;AACvL,MAAM7D,iBAAiB,GAAG4D,yDAAY,CAAC,4BAA4B,CAAC;AAEpE,MAAMjJ,eAAe,GAAGiJ,yDAAY,CAAC,yBAAyB,EAAEC,kDAAK,EAAmD,CAAC;AACzH,MAAMI,sBAAsB,GAAGL,yDAAY,CAAC,iCAAiC,EAAEC,kDAAK,EAAsD,CAAC;AAC3I,MAAMK,sBAAsB,GAAGN,yDAAY,CAAC,iCAAiC,CAAC;AAE9E,MAAM/E,mBAAmB,GAAG+E,yDAAY,CAAC,8BAA8B,EAAEC,kDAAK,EAAqC,CAAC;AAEpH,MAAMpI,cAAc,GAAGmI,yDAAY,CAAC,wBAAwB,EAAEC,kDAAK,EAAsG,CAAC;AAC1K,MAAMM,qBAAqB,GAAGP,yDAAY,CAAC,gCAAgC,EAAEC,kDAAK,EAAqB,CAAC;AACxG,MAAMO,qBAAqB,GAAGR,yDAAY,CAAC,gCAAgC,EAAEC,kDAAK,EAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBjD;AACvB;AAC8B;AACM;AAEA;AAGb;;;;;AAGxD,MAAO7M,UAAU;EAErB7M,YAAoB2a,QAAiB,EAAUpF,YAAyB,EAAU1F,OAAe;IAA7E,KAAA8K,QAAQ,GAARA,QAAQ;IAAmB,KAAApF,YAAY,GAAZA,YAAY;IAAuB,KAAA1F,OAAO,GAAPA,OAAO;IAEzF,KAAA+K,MAAM,GAAGV,2DAAY,CAAC,MACtB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,0CAAgB,CAAC,EACxByL,+CAAS,CAAEG,IAAI,IACb,IAAI,CAACtF,YAAY,CAACtM,KAAK,CAAC4R,IAAI,CAAC,CAACjW,IAAI,CAChC8V,+CAAS,CAAE3C,aAAa,IAAI;IAC1B;IACAqC,6EAA8B,CAAC;MAC7BnC,MAAM,EAAEF,aAAa,CAACG,EAAE;MACxBvH,KAAK,EAAEoH,aAAa,CAACpH,KAAK;MAC1BvF,GAAG,EAAE2M,aAAa,CAAC3M,GAAG;MACtB+M,KAAK,EAAEJ,aAAa,CAACI;KACtB,CAAC;IAEF;IACAkC,+EAAgC,CAAC;MAAClO,OAAO,EAAE4L,aAAa,CAAC5L,OAAO;MAAE6O,OAAO,EAAE;IAAK,CAAC,CAAC,CAGnF,CAAC,EACFV,gDAAU,CAAEvb,KAAK,IAAGwb,0CAAI,CAAC,CACvBH,4EAA6B,EAAE;IAC/B;IACAC,+EAAgC,CAAC;MAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;MAAEic,OAAO,EAAE;IAAI,CAAC,CAAC,CAC9E,CAAC,CACD,CACF,CACF,CACF,CACA;IAED,KAAAE,SAAS,GAAGhB,2DAAY,CAAC,MACvB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,6CAAmB,CAAC,EAC3BuL,8CAAQ,CAAEK,IAAI,IACZ,IAAI,CAACtF,YAAY,CAAC9B,QAAQ,CAACoH,IAAI,CAAC,CAACjW,IAAI,CACnC8S,0CAAG,CAAEyD,gBAAgB,IAAGd,+EAAgC,CAAC;MAAClO,OAAO,EAAEgP,gBAAgB,CAAChP,OAAO;MAAE6O,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,EAC9GV,gDAAU,CAACvb,KAAK,IAAE;MAChB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E;IACH,CAAC,CACF,CACA,CACF,CACF,CACF;IAED,KAAAI,OAAO,GAAGlB,2DAAY,CAAC,MACrB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,2CAAiB,CAAC,EACzBuL,8CAAQ,CAAC,MACP,IAAI,CAACjF,YAAY,CAACrN,MAAM,EAAE,CAACtD,IAAI,CAC7BuF,0CAAG,CAAC,MAAI;MACN;MACAY,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG5M,uEAAe,CAACK,IAAI,CAAC;MACpD,IAAI,CAACoR,OAAO,CAAC3D,QAAQ,CAAC,CAAC9N,uEAAe,CAACK,IAAI,CAAC,CAAC;IAAA,CAAC,CAC/C,EACDic,+CAAS,CAAEW,UAAU,IAAG;MACtBxQ,YAAY,CAACiL,UAAU,CAAC,MAAM,CAAC;MAC/B,OAAO;MACL;MACAsE,4EAA6B,EAAE;MAE/B;MACAC,+EAAgC,CAAC;QAAClO,OAAO,EAAEkP,UAAU;QAAEL,OAAO,EAAE;MAAK,CAAC,CAAC,CAGxE;IACH,CAAC,CAAC,EACFV,gDAAU,CAAEvb,KAAK,IAAG;MAClB8L,YAAY,CAACiL,UAAU,CAAC,MAAM,CAAC;MAC/B,OAAOyE,0CAAI,CAAC;MACV;MACAH,4EAA6B,EAAE;MAE/B;MACAC,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E,CAAC;IACJ,CAAC,CACF,CACF,CACF,CACF,CAAC;IAEF,KAAAM,KAAK,GAAGpB,2DAAY,CAAC,MACnB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,yCAAe,CAAC,EACvBuL,8CAAQ,CAAC,MACP,IAAI,CAACjF,YAAY,CAACnF,IAAI,EAAE,CAACxL,IAAI,CAC3B8V,+CAAS,CAAC,MAAI;MACZ;MACA;IAAA,CACD,CAAC,EACFJ,gDAAU,CAACvb,KAAK,IAAE;MAChB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E;IACH,CAAC,CACF,CACA,CACF,CACF,CACF;IAED,KAAAvF,QAAQ,GAAGyE,2DAAY,CAAC,MACtB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,4CAAkB,CAAC,EAC1BuL,8CAAQ,CAAC,MACP,IAAI,CAACjF,YAAY,CAACW,OAAO,EAAE,CAACtR,IAAI,CAC9B8S,0CAAG,CAAExB,OAAO,IAAG;MACb,MAAMqF,aAAa,GAAGrQ,IAAI,CAAC8M,SAAS,CAAC9B,OAAO,CAAC;MAC7CrL,YAAY,CAACiB,OAAO,CAAC,SAAS,EAAEyP,aAAa,CAAC;MAC9C,OAAOtM,mDAAyB,CAAC;QAACiH;MAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,EACFoE,gDAAU,CAACvb,KAAK,IAAE;MAChB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E;IACH,CAAC,CAAC,CACH,CACF,CACF,CACF;IAED,KAAAQ,gBAAgB,GAAGtB,2DAAY,CAAC,MAC9B,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,oDAA0B,CAAC,EAClCuL,8CAAQ,CAAE/J,kBAAkB,IAC1B,IAAI,CAAC8E,YAAY,CAAC/E,eAAe,CAACC,kBAAkB,CAAC,CAAC7L,IAAI,CACxD8V,+CAAS,CAAEe,uBAAuB,IAAG;IACnC;IACApB,+EAAgC,CAAC;MAAClO,OAAO,EAAEsP,uBAAuB,CAACtP,OAAO;MAAE6O,OAAO,EAAE;IAAK,CAAC,CAAC,EAE5F/L,2DAAiC,CAAC;MAACwM;IAAuB,CAAC,CAAC,CAC7D,CACF,EACCnB,gDAAU,CAACvb,KAAK,IAAE;MAChB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,EAC7E/L,2DAAiC,EAAE,CACpC;IACH,CAAC,CAAC,CACH,CACF,CACF,CAEF;IAED,KAAAyM,oBAAoB,GAAGxB,2DAAY,CAAC,MAClC,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,wDAA8B,CAAC,EACtCuL,8CAAQ,CAAElC,GAAG,IACX,IAAI,CAAC/C,YAAY,CAACb,mBAAmB,CAAC4D,GAAG,CAAC,CAAC1T,IAAI,CAC7C8S,0CAAG,CAAEvL,OAAO,IAAGkO,+EAAgC,CAAC;MAAClO,OAAO,EAAEA,OAAO;MAAE6O,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,EACpFV,gDAAU,CAAEvb,KAAK,IAAG;MAClB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E;IACH,CAAC,CAAC,CACH,CACF,CACF,CACF;IAED,KAAAW,eAAe,GAAGzB,2DAAY,CAAC,MAC7B,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAClL,mDAAyB,CAAC,EACjCuL,8CAAQ,CAAEoB,iBAAiB,IACzB,IAAI,CAACrG,YAAY,CAACjE,cAAc,CAACsK,iBAAiB,CAAC,CAAChX,IAAI,CACtD8S,0CAAG,CAAEvL,OAAO,IAAGkO,+EAAgC,CAAC;MAAClO,OAAO;MAAG6O,OAAO,EAAE;IAAK,CAAE,CAAC,CAAC,EAC7EV,gDAAU,CAAEvb,KAAK,IAAG;MAClB,OAAO0b,yCAAE;MACP;MACAJ,+EAAgC,CAAC;QAAClO,OAAO,EAAEpN,KAAK,CAACA,KAAK,CAACA,KAAK;QAAEic,OAAO,EAAE;MAAI,CAAC,CAAC,CAC9E;IACH,CAAC,CAAC,CACH,CACF,CACF,CAEF;EA3LkG;EAAC,QAAAxb,CAAA;qBAFzFqN,UAAU,EAAArM,uDAAA,CAAAX,kDAAA,GAAAW,uDAAA,CAAA2C,+DAAA,GAAA3C,uDAAA,CAAA6C,oDAAA;EAAA;EAAA,QAAA5D,EAAA;WAAVoN,UAAU;IAAAP,OAAA,EAAVO,UAAU,CAAAN;EAAA;;;;;;;;;;;;;;;;;;;ACZyB;AAET;AAEsC;AAEtE,MAAMyP,YAAY,GAAc;EACrCjd,KAAK,EAAE,EAAE;EACTkd,cAAc,EAAE,KAAK;EACrBC,SAAS,EAAE,KAAK;EAChBhG,OAAO,EAAE,IAAI;EACbuF,uBAAuB,EAAE;CAC1B;AAEM,MAAMra,QAAQ,GAAG0a,0DAAa,CACnCE,YAAY,EACZD,+CAAE,CAAC9M,0CAAgB,EAAGkN,KAAK,KAAI;EAAC,GAAGA,KAAK;EAAED,SAAS,EAAE;AAAI,CAAC,CAAC,CAAC,EAC5DH,+CAAE,CAAC9M,6CAAmB,EAAGkN,KAAK,KAAI;EAAC,GAAGA,KAAK;EAAED,SAAS,EAAE;AAAI,CAAC,CAAC,CAAC,EAC/DH,+CAAE,CAAC9M,mDAAyB,EAAC,CAACkN,KAAK,EAAE;EAACjG;AAAO,CAAC,MAAI;EAChD,GAAGiG,KAAK;EACR,GAAGA,KAAK,CAACjG,OAAO;EAAEA;CACjB,CAAC,CACH,EACD6F,+CAAE,CAAC9M,sDAA4B,EAAGkN,KAAK,KAAI;EAAC,GAAGA,KAAK;EAAEjG,OAAO,EAAE;AAAI,CAAC,CAAC,CAAC,EACtE6F,+CAAE,CAAC9M,2DAAiC,EAAE,CAACkN,KAAK,EAAE;EAACV;AAAuB,CAAC,MAAI;EACzE,GAAGU,KAAK;EAAEV,uBAAuB,EAAE;IACjC9M,sBAAsB,EAAEF,kFAAsB,CAACsB,OAAO;IACtD5D,OAAO,EAAEsP,uBAAuB,CAACtP;;CAElC,CAAC,CACH,EACD4P,+CAAE,CAAC9M,2DAAiC,EAAGkN,KAAK,KAAI;EAC9C,GAAGA,KAAK;EAAEV,uBAAuB,EAAE;IACjC9M,sBAAsB,EAAEF,kFAAsB,CAACuB,OAAO;IACtD7D,OAAO,EAAE;;CAGV,CAAC,CACH,CACF;;;;;;;;;;;;;;;;;;;;;ACvC4C;AAGtC,MAAMkQ,QAAQ,GAAIF,KAAc,IAAKA,KAAK,CAACG,SAAS;AAEpD,MAAMC,sBAAsB,GAAGH,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACF,cAAc,CAAC;AACxF,MAAM/I,iBAAiB,GAAGkJ,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAGA,KAAK,CAACD,SAAS,CAAC;AAC5E,MAAMM,oBAAoB,GAAGJ,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACpd,KAAK,CAAC;AAC7E,MAAMgW,eAAe,GAAGqH,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACjG,OAAO,CAAC;AAC1E,MAAMuG,uBAAuB,GAAGL,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACjG,OAAO,EAAEnH,QAAQ,CAAC;AAC5F,MAAMG,+BAA+B,GAAGkN,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACV,uBAAuB,CAAC;;;;;;;;;;;;;;ACR3G,SAAUrK,iBAAiBA,CAAA;EAC/B,OAAQsL,SAA0B,IAAoC;IACpE,MAAM7K,QAAQ,GAAG6K,SAAS,CAAC7Q,GAAG,CAAC,UAAU,CAAC,EAAE9I,KAAK;IACjD,MAAM+O,eAAe,GAAG4K,SAAS,CAAC7Q,GAAG,CAAC,iBAAiB,CAAC,EAAE9I,KAAK;IAE/D,IAAI8O,QAAQ,KAAKC,eAAe,EAAE;MAEhC,OAAO;QAAE6K,gBAAgB,EAAE;MAAI,CAAE;;IAEnC,OAAO,IAAI;EACb,CAAC;AACH;;;;;;;;;;;;;;;;ACNM,MAAOze,kBAAkB;EAAA,QAAAsB,CAAA;qBAAlBtB,kBAAkB;EAAA;EAAA,QAAAuB,EAAA;UAAlBvB,kBAAkB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAwc,4BAAAtc,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/BE,4DAAA,QAAG;QAAAA,oDAAA,kBAAW;QAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEIdA,4DAAA,QAAsC;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAI;;;;IAAfA,uDAAA,GAAW;IAAXA,+DAAA,CAAA+D,MAAA,CAAA4H,OAAA,CAAW;;;;;IAE/C3L,uDAAA,oBAAiE;;;ADEjE,MAAO1C,iBAAiB;EAI5BkC,YAAoB6c,YAAyB;IAAzB,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAA1Q,OAAO,GAAW,EAAE;EAE6B;EAEjDnD,QAAQA,CAAA;IACN,IAAI,CAAC6T,YAAY,CAACC,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG,IAAI,CAAC7Q,OAAO,GAAG6Q,GAAG,CAAC;EACxE;EAAC,QAAAxd,CAAA;qBARU1B,iBAAiB,EAAA0C,+DAAA,CAAAX,sEAAA;EAAA;EAAA,QAAAJ,EAAA;UAAjB3B,iBAAiB;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAA4E,MAAA;IAAA3E,QAAA,WAAA8c,2BAAA5c,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BE,4DAAA,QAAG;QAAAA,oDAAA,WAAI;QAAAA,0DAAA,EAAI;QACXA,4DAAA,aAA+B;QAEQA,oDAAA,yBAAkB;QAAAA,0DAAA,EAAK;QAC1DA,wDAAA,IAAA2c,8BAAA,eAAqD;QACrD3c,wDAAA,IAAA4c,wCAAA,gCAAA5c,oEAAA,CAEc;QAChBA,0DAAA,EAAM;QAERA,uDAAA,oBAA+B;;;;QANvBA,uDAAA,GAAe;QAAfA,wDAAA,SAAAD,GAAA,CAAA4L,OAAA,CAAe,aAAAlC,GAAA;;;;;;;;;;;;;;;;;;;;;;ACGjB,MAAOlM,qBAAqB;EAAA,QAAAyB,CAAA;qBAArBzB,qBAAqB;EAAA;EAAA,QAAA0B,EAAA;UAArB1B,qBAAqB;IAAAkC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAid,+BAAA/c,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPlCE,4DAAA,QAAG;QAAAA,oDAAA,4BAAqB;QAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;ACQtB,MAAOxC,iBAAiB;EAI5BgC,YAAoBsd,YAAyB;IAAzB,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAnR,OAAO,GAAW,EAAE;EAE4B;EAEhDnD,QAAQA,CAAA;IACN,IAAI,CAACsU,YAAY,CAACC,QAAQ,EAAE,CAACR,SAAS,CAACC,GAAG,IAAE,IAAI,CAAC7Q,OAAO,GAAC6Q,GAAG,CAAC;EAC/D;EAAC,QAAAxd,CAAA;qBARUxB,iBAAiB,EAAAwC,+DAAA,CAAAX,sEAAA;EAAA;EAAA,QAAAJ,EAAA;UAAjBzB,iBAAiB;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAqd,2BAAAnd,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BE,4DAAA,SAAI;QAAAA,oDAAA,gCAAyB;QAAAA,0DAAA,EAAK;QAElCA,4DAAA,QAAG;QAAAA,oDAAA,GAAW;QAAAA,0DAAA,EAAI;;;QAAfA,uDAAA,GAAW;QAAXA,+DAAA,CAAAD,GAAA,CAAA4L,OAAA,CAAW;;;;;;;;;;;;;;;;;;;;;;ACC6C;;;AAKrD,MAAO8Q,WAAW;EAItBjd,YAAoB2X,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,YAAY,GAAY3Z,qEAAW,CAACyS,QAAQ,GAAG,UAAU;EAExB;EAGlCoM,cAAcA,CAAA;IACnB,OAAO,IAAI,CAACnF,KAAK,CAAC9L,GAAG,CAAC,IAAI,CAAC+L,YAAY,EAAE;MACvCS,YAAY,EAAE;KACf,CAAC;EACJ;EAAC,QAAA7Y,CAAA;qBAXUyd,WAAW,EAAAzc,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAXwd,WAAW;IAAA3Q,OAAA,EAAX2Q,WAAW,CAAA1Q,IAAA;IAAAiN,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;;;;ACHuC;;;AAKrD,MAAOgE,WAAW;EAItBxd,YAAoB2X,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,YAAY,GAAY3Z,qEAAW,CAACyS,QAAQ,GAAG,QAAQ;EAEtB;EAGlC6M,QAAQA,CAAA;IACb,OAAO,IAAI,CAAC5F,KAAK,CAAC9L,GAAG,CAAC,IAAI,CAAC+L,YAAY,EAAE;MACvCS,YAAY,EAAE;KACf,CAAC;EACJ;EAAC,QAAA7Y,CAAA;qBAXUge,WAAW,EAAAhd,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAX+d,WAAW;IAAAlR,OAAA,EAAXkR,WAAW,CAAAjR,IAAA;IAAAiN,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;ACNpB,iEAAe;EACb/a,IAAI,EAAE;IACJC,GAAG,EAAE;GACN;EACDS,QAAQ,EAAE;IACRT,GAAG,EAAE;GACN;EACDgf,SAAS,EAAE;IACThf,GAAG,EAAE;GACN;EACDK,KAAK,EAAE;IACLL,GAAG,EAAE;GACN;EACDuK,KAAK,EAAE;IACLvK,GAAG,EAAE;GACN;EACD+U,QAAQ,EAAE;IACR/U,GAAG,EAAE;GACN;EACD2Y,iBAAiB,EAAE;IACjB3Y,GAAG,EAAE;GACN;EACD6Y,qBAAqB,EAAE;IACrB7Y,GAAG,EAAE;GACN;EACDiV,uBAAuB,EAAE;IACvBjV,GAAG,EAAE;GACN;EACDO,QAAQ,EAAE;IACRP,GAAG,EAAE;;CAER;;;;;;;;;;;;;;AC/BD,iEAAe;EACboR,qBAAqB,EAAE;IACrBhM,WAAW,EAAE;MACXlF,KAAK,EAAE;QACL+e,EAAE,EAAE,4BAA4B;QAChCC,EAAE,EAAE;OACL;MACDC,+BAA+B,EAAE;QAC/BF,EAAE,EAAE,oCAAoC;QACxCC,EAAE,EAAE;OACL;MACDE,+BAA+B,EAAE;QAC/BH,EAAE,EAAE,uCAAuC;QAC3CC,EAAE,EAAE;OACL;MACDG,6BAA6B,EAAE;QAC7BJ,EAAE,EAAE,gDAAgD;QACpDC,EAAE,EAAE;OACL;MACDI,mCAAmC,EAAE;QACnCL,EAAE,EAAE,6CAA6C;QACjDC,EAAE,EAAE;;KAEP;IACD7e,KAAK,EAAE;;CAIV;;;;;;;;;;;;;;AC5BD,iEAAe;EACbuS,cAAc,EAAE;IACdxN,WAAW,EAAE;MACXlF,KAAK,EAAE;QACL+e,EAAE,EAAE,8BAA8B;QAClCC,EAAE,EAAE;OACL;MACDjM,mBAAmB,EAAE;QACnBgM,EAAE,EAAE,oDAAoD;QACxDC,EAAE,EAAE;OACL;MACD/L,QAAQ,EAAE;QACR8L,EAAE,EAAE,oBAAoB;QACxBC,EAAE,EAAE;OACL;MACD9L,eAAe,EAAE;QACf6L,EAAE,EAAE,8BAA8B;QAClCC,EAAE,EAAE;;KAEP;IACD7e,KAAK,EAAE;MACLkf,YAAY,EAAE;QACZN,EAAE,EAAE,0BAA0B;QAC9BC,EAAE,EAAE;OACL;MACDM,eAAe,EAAE;QACfP,EAAE,EAAE,uBAAuB;QAC3BC,EAAE,EAAE;OACL;MACHO,sBAAsB,EAAE;QACtBR,EAAE,EAAE,oCAAoC;QACxCC,EAAE,EAAE;OACL;MACDQ,uBAAuB,EAAE;QACvBT,EAAE,EAAE,kCAAkC;QACtCC,EAAE,EAAE;;;;CAIT;;;;;;;;;;;;;;ACvCD,iEAAe;EACbvK,SAAS,EAAE;IACTvP,WAAW,EAAE;MACXlF,KAAK,EAAE;QACL+e,EAAE,EAAE,mBAAmB;QACvBC,EAAE,EAAE;OACL;MACDjN,KAAK,EAAE;QACLgN,EAAE,EAAE,aAAa;QACjBC,EAAE,EAAE;OACL;MACD/L,QAAQ,EAAE;QACR8L,EAAE,EAAE,oBAAoB;QACxBC,EAAE,EAAE;OACL;MACDS,YAAY,EAAE;QACZV,EAAE,EAAE,+BAA+B;QACnCC,EAAE,EAAE;OACL;MACDpK,YAAY,EAAE;QACZmK,EAAE,EAAE,aAAa;QACjBC,EAAE,EAAE;OACL;MACDnK,QAAQ,EAAE;QACRkK,EAAE,EAAE,iCAAiC;QACrCC,EAAE,EAAE;;KAEP;IACD7e,KAAK,EAAE;MACLuf,YAAY,EAAE;QACZX,EAAE,EAAE,gBAAgB;QACpBC,EAAE,EAAE;OACL;MACDW,aAAa,EAAE;QACbZ,EAAE,EAAE,kBAAkB;QACtBC,EAAE,EAAE;OACL;MACDM,eAAe,EAAE;QACfP,EAAE,EAAE,uBAAuB;QAC3BC,EAAE,EAAE;;;;CAIX;;;;;;;;;;;;;;AC3CD,iEAAe;EACbjK,uBAAuB,EAAE;IACvB7P,WAAW,EAAE;MACXlF,KAAK,EAAE;QACL+e,EAAE,EAAE,wBAAwB;QAC5BC,EAAE,EAAE;OACL;MACDzR,OAAO,EAAE;QACPwR,EAAE,EAAE,qFAAqF;QACzFC,EAAE,EAAE;OACL;MACDjN,KAAK,EAAE;QACLgN,EAAE,EAAE,aAAa;QACjBC,EAAE,EAAE;;KAEP;IACD7e,KAAK,EAAE;MACLuf,YAAY,EAAE;QACZX,EAAE,EAAE,gBAAgB;QACpBC,EAAE,EAAE;OACL;MACDW,aAAa,EAAE;QACbZ,EAAE,EAAE,kBAAkB;QACtBC,EAAE,EAAE;;;;CAIX;;;;;;;;;;;;;;AC3BK,MAAOta,WAAW;EAEtB;;;;EAIO,OAAOO,gBAAgBA,CAACgX,IAAY,EAAE/b,QAAgB;IAC3D,MAAM4Y,GAAG,GAAwB,IAAIhU,GAAG,EAAE;IAE1C,SAAS8a,eAAeA,CAAC3D,IAAY;MACnC4D,MAAM,CAACC,OAAO,CAAC7D,IAAI,CAAC,CAAC8D,OAAO,CAAC,CAAC,CAACC,GAAG,EAAE7b,KAAK,CAAC,KAAG;QAC3C2U,GAAG,CAACmH,GAAG,CAACD,GAAG,EAAC7b,KAAK,CAACjE,QAAQ,CAAC,CAAC;MAC9B,CAAC,CAAC;IACJ;IAEA0f,eAAe,CAAC3D,IAAI,CAAC;IAErB,OAAOnD,GAAG;EACZ;;;;;;;;;;;;;;;AClBF,iEAAe;EACblC,YAAY,EAAE;IACZ1R,WAAW,EAAE;MACXlF,KAAK,EAAE;QACL+e,EAAE,EAAE,iBAAiB;QACrBC,EAAE,EAAE;OACL;MACDjN,KAAK,EAAE;QACLgN,EAAE,EAAE,aAAa;QACjBC,EAAE,EAAE;OACL;MACD7H,IAAI,EAAE;QACJ4H,EAAE,EAAE,cAAc;QAClBC,EAAE,EAAE;OACL;MACD/L,QAAQ,EAAE;QACR8L,EAAE,EAAE,oBAAoB;QACxBC,EAAE,EAAE;OACL;MACD9L,eAAe,EAAE;QACf6L,EAAE,EAAE,8BAA8B;QAClCC,EAAE,EAAE;;KAEP;IACD7e,KAAK,EAAE;MACLuf,YAAY,EAAE;QACZX,EAAE,EAAE,gBAAgB;QACpBC,EAAE,EAAE;OACL;MACDW,aAAa,EAAE;QACbZ,EAAE,EAAE,kBAAkB;QACtBC,EAAE,EAAE;OACL;MACDkB,WAAW,EAAE;QACXnB,EAAE,EAAE,cAAc;QAClBC,EAAE,EAAE;OACL;MACDM,eAAe,EAAE;QACfP,EAAE,EAAE,uBAAuB;QAC3BC,EAAE,EAAE;OACL;MACHO,sBAAsB,EAAE;QACtBR,EAAE,EAAE,oCAAoC;QACxCC,EAAE,EAAE;OACL;MACDQ,uBAAuB,EAAE;QACvBT,EAAE,EAAE,kCAAkC;QACtCC,EAAE,EAAE;OACL;MACDmB,sBAAsB,EAAE;QACtBpB,EAAE,EAAE,mBAAmB;QACvBC,EAAE,EAAE;;;;CAIT;;;;;;;;;;;;;;;ACvD0D;AAE3D,iEAAe;EACbzG,cAAc,EAAG;IACfwG,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,sBAAsB;IACxDpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACDxH,0BAA0B,EAAG;IAC3BmG,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,iCAAiC;IACnEpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACD1H,oBAAoB,EAAG;IACrBqG,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,gCAAgC;IAClEpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACDvH,wBAAwB,EAAG;IACzBkG,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,uBAAuB;IACzDpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACD5H,iBAAiB,EAAG;IACnBuG,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,gBAAgB;IACjDpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACD5f,iBAAiB,EAAE;IACjBue,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,oBAAoB;IACtDpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACDC,kBAAkB,EAAE;IAClBtB,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,aAAa;IAC/CpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACDhgB,cAAc,EAAE;IACd2e,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,WAAW;IAC7CpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACD9f,iBAAiB,EAAE;IACjBye,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,iBAAiB;IACnDpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;GACnC;EACDngB,aAAa,EAAE;IACb8e,EAAE,EAAE,GAAG1f,qEAAW,CAAC+gB,eAAe,EAAE;IACpCpB,EAAE,EAAE,GAAG3f,qEAAW,CAAC+gB,eAAe;;CAGrC;;;;;;;;;;;;;;AC1CD;;;AAGO,MAAM/gB,WAAW,GAAmB;EACzCihB,UAAU,EAAE,KAAK;EACjBnJ,IAAI,EAAE,KAAK;EACXjX,QAAQ,EAAE,IAAI;EACd4R,QAAQ,EAAE,2BAA2B;EACrCnS,WAAW,EAAE,QAAQ;EACrBygB,eAAe,EAAE;CAClB;;;;;;;;;;;;;;ACV4C;AAG7CG,sEAAA,EAAwB,CAACE,eAAe,CAACjd,sDAAS,CAAC,CAChDkd,KAAK,CAACC,GAAG,IAAIxU,OAAO,CAAChM,KAAK,CAACwgB,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;ACLuD;AACf;AACC;AAWrE,MAAMne,QAAQ,GAA+B;EAClDue,cAAc,EAAEF,+DAAiB;EACjCnD,SAAS,EAAEkD,gFAAY;EACvBI,YAAY,EAAEF,kEAAeA;CAC9B;;;;;;;;;;;;;;;;AClBiD;AAE3C,MAAM3E,aAAa,GAAGtB,yDAAY,CAAC,0BAA0B,EAAEC,kDAAK,EAAyC,CAAC;AAE9G,MAAMmG,YAAY,GAAGpG,yDAAY,CAAC,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;ACHL;AAEf;AACb;;;AAG5B,MAAOnY,kBAAkB;EAE7BtB,YAAoB2a,QAAiB;IAAjB,KAAAA,QAAQ,GAARA,QAAQ;IAE5B,KAAAoF,MAAM,GAAG7F,2DAAY,CAAC,MACpB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAACE,kDAAgC,CAAC,EACxCyF,2CAAK,CAAC,IAAI,CAAC,EACXpI,yCAAG,CAAC,MAAI2C,iDAA+B,EAAE,CAAC,CAC3C,CACF;EARsC;EAAC,QAAA7a,CAAA;qBAF7B8B,kBAAkB,EAAAd,sDAAA,CAAAX,kDAAA;EAAA;EAAA,QAAAJ,EAAA;WAAlB6B,kBAAkB;IAAAgL,OAAA,EAAlBhL,kBAAkB,CAAAiL;EAAA;;;;;;;;;;;;;;;;;;ACPiB;AAEN;AAGnC,MAAM0T,mBAAmB,GAAiB;EAC/C9T,OAAO,EAAE,EAAE;EACX6O,OAAO,EAAE;CACV;AAEM,MAAM5Z,QAAQ,GAAG0a,0DAAa,CACnCmE,mBAAmB,EACnBlE,+CAAE,CAACiE,kDAA2B,EAAE,CAAC7D,KAAK,EAAE;EAAChQ,OAAO;EAAE6O;AAAO,CAAC,MAAI;EAAC,GAAGmB,KAAK;EAAEhQ,OAAO;EAAE6O;AAAO,CAAE,CAAC,CAAC,EAC7Fe,+CAAE,CAACiE,iDAA0B,EAAE7D,KAAK,KAAI;EAAC,GAAGA,KAAK;EAAEhQ,OAAO,EAAE,EAAE;EAAE6O,OAAO,EAAE;AAAK,CAAC,CAAC,CAAC,CAClF;;;;;;;;;;;;;;;;;ACd4C;AAGtC,MAAMqB,QAAQ,GAAIF,KAAe,IAAKA,KAAK,CAACyD,YAAY;AAExD,MAAM5b,eAAe,GAAGoY,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAAChQ,OAAO,CAAC;AAC1E,MAAMlI,sBAAsB,GAAGmY,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACnB,OAAO,CAAC;;;;;;;;;;;;;;;;ACNtC;AAE3C,MAAMF,cAAc,GAAGrB,yDAAY,CAAC,0BAA0B,EAAEC,kDAAK,EAKtE,CACL;AAEM,MAAMuB,aAAa,GAAGxB,yDAAY,CAAC,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;ACTa;AACrC;AAEZ;;;AAG1B,MAAOpY,UAAU;EAErBrB,YAAoB2a,QAAiB;IAAjB,KAAAA,QAAQ,GAARA,QAAQ;IAI5B,KAAAwF,KAAK,GAAGjG,2DAAY,CAAC,MACnB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAAC+F,4DAAiB,CAAC,EACzB/V,yCAAG,CAACpH,KAAK,IAAE;MACTgI,OAAO,CAACC,GAAG,CAACjI,KAAK,CAAC;IACpB,CAAC,CAAC,EACF2U,yCAAG,CAAC,MAAI;MAEN,MAAMc,UAAU,GAAG3N,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAG0N,UAAU,EAAE;QACbzN,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGwN,UAAU,CAAC;QAC3C,MAAM5N,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACqN,UAAU,CAAC;QAEnC,OAAO4B,mDAA8B,CAAC;UACpCnC,MAAM,EAAErN,IAAI,CAACwV,MAAM;UACnBzP,KAAK,EAAE/F,IAAI,CAAC+F,KAAK;UACjBvF,GAAG,EAAER,IAAI,CAACQ,GAAG;UACb+M,KAAK,EAAEvN,IAAI,CAACuN;SACb,CAAC;;MAEJ,OAAO;QAAEkI,IAAI,EAAE;MAAyB,CAAC;IAC3C,CAAC,CAAC,CACH,CACF;IAED,KAAAC,UAAU,GAAGpG,2DAAY,CAAC,MACxB,IAAI,CAACS,QAAQ,CAAC/V,IAAI,CAChBuV,qDAAM,CAACC,kDAA6B,CAAC,EACrC1C,yCAAG,CAAC,MAAI;MACN,OAAO0C,mDAA8B,CAAC;QACpCnC,MAAM,EAAEsI,MAAM,CAAC,CAAC,CAAC;QACjBnV,GAAG,EAAE,EAAE;QACPuF,KAAK,EAAE,EAAE;QACTwH,KAAK,EAAE;OACR,CAAC;IACJ,CAAC,CAAC,CACH,CACF;EAvCD;EAAC,QAAA3Y,CAAA;qBAJU6B,UAAU,EAAAb,sDAAA,CAAAX,kDAAA;EAAA;EAAA,QAAAJ,EAAA;WAAV4B,UAAU;IAAAiL,OAAA,EAAVjL,UAAU,CAAAkL;EAAA;;;;;;;;;;;;;;;;;;ACPyB;AAEJ;AAGrC,MAAMiU,gBAAgB,GAAmB;EAC9CvI,MAAM,EAAEsI,MAAM,CAAC,CAAC,CAAC;EACjB5V,KAAK,EAAE,EAAE;EACTS,GAAG,EAAE,EAAE;EACPuF,KAAK,EAAE,EAAE;EACTwH,KAAK,EAAE;CACR;AAEM,MAAM/W,QAAQ,GAAG0a,0DAAa,CACnC0E,gBAAgB,EAChBzE,+CAAE,CAAC3B,mDAA8B,EAAE,CAAC+B,KAAK,EAAE;EAACxL,KAAK;EAAEvF,GAAG;EAAE6M,MAAM;EAAEE;AAAK,CAAC,MAAI;EAAC,GAAGgE,KAAK;EAAExL,KAAK;EAAEvF,GAAG;EAAE6M,MAAM;EAAEE,KAAK;EAAExN,KAAK,EAAE;AAAE,CAAC,CAAC,CAAC,EAC5HoR,+CAAE,CAAC3B,kDAA6B,EAAE+B,KAAK,KAAI;EAAC,GAAGA,KAAK;EAAExL,KAAK,EAAE,EAAE;EAAEwH,KAAK,EAAE,EAAE;EAAEF,MAAM,EAAEsI,MAAM,CAAC,CAAC,CAAC;EAAEnV,GAAG,EAAE,EAAE;EAAET,KAAK,EAAE;AAAE,CAAC,CAAC,CAAC,CACrH;;;;;;;;;;;;;;;;;ACjB4C;AAGtC,MAAM0R,QAAQ,GAAIF,KAAe,IAAKA,KAAK,CAACwD,cAAc;AAE1D,MAAMxa,gBAAgB,GAAGiX,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAKA,KAAK,CAACxL,KAAK,CAAC;AACzE,MAAM8P,cAAc,GAAGrE,2DAAc,CAACC,QAAQ,EAAGF,KAAK,IAAGA,KAAK,CAAC/Q,GAAG,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component.base.ts","./src/app/components/flash-message/flash-message.component.ts","./src/app/components/flash-message/flash-message.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/http.interceptor.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/directives/show-on-focus.directive.ts","./src/app/modules/auth/models/activate-account.model.ts","./src/app/modules/auth/models/captcha.model.ts","./src/app/modules/auth/pages/account-activation-page/account-activation-page.component.ts","./src/app/modules/auth/pages/account-activation-page/account-activation-page.component.html","./src/app/modules/auth/pages/change-account-password-page/change-account-password-page.component.ts","./src/app/modules/auth/pages/change-account-password-page/change-account-password-page.component.html","./src/app/modules/auth/pages/login-page/login-page.component.ts","./src/app/modules/auth/pages/login-page/login-page.component.html","./src/app/modules/auth/pages/lost-password-mailing-page/lost-password-mailing-page.component.ts","./src/app/modules/auth/pages/lost-password-mailing-page/lost-password-mailing-page.component.html","./src/app/modules/auth/pages/register-page/register-page.component.ts","./src/app/modules/auth/pages/register-page/register-page.component.html","./src/app/modules/auth/routes/auth.routing.ts","./src/app/modules/auth/services/auth.service.ts","./src/app/modules/auth/store/auth-store/action.ts","./src/app/modules/auth/store/auth-store/effect.ts","./src/app/modules/auth/store/auth-store/reducer.ts","./src/app/modules/auth/store/auth-store/selector.ts","./src/app/modules/auth/validators/password.validator.ts","./src/app/pages/error-page/error-page.component.ts","./src/app/pages/error-page/error-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/not-found-page/not-found-page.component.ts","./src/app/pages/not-found-page/not-found-page.component.html","./src/app/pages/user-page/user-page.component.ts","./src/app/pages/user-page/user-page.component.html","./src/app/services/home.service.ts","./src/app/services/user.service.ts","./src/app/utils/frontend-link-url.ts","./src/app/utils/messages/account-page-message.ts","./src/app/utils/messages/change-password-message.ts","./src/app/utils/messages/login-page-message.ts","./src/app/utils/messages/lost-password-mailing-message.ts","./src/app/utils/messages/message-utils.ts","./src/app/utils/messages/register-page-message.ts","./src/app/utils/page-title.ts","./src/environments/environment.dev.ts","./src/main.ts","./src/store/app.state.ts","./src/store/flash-message-store/action.ts","./src/store/flash-message-store/effect.ts","./src/store/flash-message-store/reducer.ts","./src/store/flash-message-store/selector.ts","./src/store/user-ident-store/action.ts","./src/store/user-ident-store/effect.ts","./src/store/user-ident-store/reducer.ts","./src/store/user-ident-store/selector.ts"],"sourcesContent":["//@ts-nocheck\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { environment } from 'src/environments/environment';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\nimport pageTitle from './utils/page-title';\nimport frontendLinkUrl from './utils/frontend-link-url';\n\nconst routes: Routes = [\n  {\n    path: environment.webapp_path,\n    children: [\n      { path: frontendLinkUrl.home.url, component: HomePageComponent, title: pageTitle.homePageTitle[environment.language]},\n      { path: frontendLinkUrl.error.url, component: ErrorPageComponent, title: pageTitle.errorPageTitle[environment.language]},\n      { path: frontendLinkUrl.userHome.url, component: UserPageComponent, title: pageTitle.userHomePageTitle[environment.language]},\n      { path: frontendLinkUrl.notFound.url, component: NotFoundPageComponent, title: pageTitle.notFoundPageTitle[environment.language]}\n    ]\n  },\n  { path: '', redirectTo: `${environment.webapp_path}/${frontendLinkUrl.home.url}`, pathMatch: 'full'},\n  { path: \"**\", redirectTo:`${environment.webapp_path}/${frontendLinkUrl.notFound.url}`, pathMatch: \"full\"}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lalamiam';\n}\n","<app-flash-message></app-flash-message>\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { isDevMode, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from 'src/store/app.state';\nimport { UserEffect } from 'src/store/user-ident-store/effect';\nimport { FlashMessageEffect } from 'src/store/flash-message-store/effect';\nimport { HandlerHttpInterceptor } from './http.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { FlashMessageComponent } from './components/flash-message/flash-message.component';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\nimport { AuthModule } from './modules/auth/auth.module';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MessageModule } from 'primeng/message';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { CardModule } from 'primeng/card';\nimport { DividerModule } from 'primeng/divider';\nimport { SkeletonModule } from 'primeng/skeleton';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomePageComponent,\n    NotFoundPageComponent,\n    UserPageComponent,\n    FlashMessageComponent,\n    ErrorPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([UserEffect, FlashMessageEffect]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode(), serialize: {\n      replacer: (_key, value) => (typeof value === \"bigint\" ? value.toString() : value)\n    }\n  }),\n  InputTextModule,\n  MessageModule,\n  TabMenuModule,\n  ButtonModule,\n  ConfirmDialogModule,\n  CardModule,\n  DividerModule,\n  SkeletonModule\n\n  ],\n  providers: [\n    ConfirmationService,\n    {provide: HTTP_INTERCEPTORS, useClass:HandlerHttpInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { environment } from \"src/environments/environment\";\r\nimport { MessageUtil } from \"./utils/messages/message-utils\";\r\n\r\nexport default abstract class ComponentBaseApp {\r\n\r\n  /**\r\n   * Ensemble des messages de la page\r\n   */\r\n  private messagesData: any;\r\n\r\n  /**\r\n   * Message Erreurs qui sont affichable sur la page\r\n   */\r\n  protected errorMessages: Map<string, string> = new Map();\r\n\r\n  /**\r\n   * Message à afficher sur la page\r\n   */\r\n  protected pageMessages: Map<string, string> = new Map();\r\n\r\n  constructor(messagesData: any) {\r\n    this.messagesData = messagesData;\r\n    this.initializeMessages();\r\n  }\r\n\r\n  /**\r\n   * Initialisation des messages de la page\r\n   */\r\n  private initializeMessages() {\r\n    this.pageMessages = MessageUtil.loadMessageInMap(this.messagesData.information, environment.language);\r\n    this.errorMessages = MessageUtil.loadMessageInMap(this.messagesData.error, environment.language);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { messageSelector, isMessageErrorSelector } from 'src/store/flash-message-store/selector';\n\n@Component({\n  selector: 'app-flash-message',\n  templateUrl: './flash-message.component.html',\n  styleUrls: ['./flash-message.component.css']\n})\nexport class FlashMessageComponent {\n\n  message$: Observable<string>;\n  isErrorMessage$: Observable<boolean>\n\n  constructor(private _store: Store<AppState>) {\n    this.message$ = this._store.pipe(select(messageSelector));\n    this.isErrorMessage$ = this._store.pipe(select(isMessageErrorSelector));\n\n  }\n}\n","<div class=\"h-1rem absolute flex justify-content-center w-12\" *ngIf=\"(message$ | async) as message\">\n  <p-message class=\"p-message \" [severity]=\"(isErrorMessage$ | async) ? 'error' : 'success'\" [text]=\"message\" ></p-message>\n</div>\n\n","import { Component, HostListener } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { getEmailSelector } from 'src/store/user-ident-store/selector';\nimport * as Action from 'src/app/modules/auth/store/auth-store/action'\nimport { environment } from 'src/environments/environment';\nimport { ConfirmationService, MessageService, ConfirmEventType, MenuItem } from 'primeng/api';\nimport frontendLinkUrl from 'src/app/utils/frontend-link-url';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n\n  userEmail$: Observable<string>;\n  isLogoutVisible: boolean = false;\n  isMenuVisible:boolean = false;\n  items: MenuItem[] = [\n    {\n      label: 'Home',\n      routerLink: `/`,\n      icon: 'pi pi-user'\n    },\n    {\n      label: 'User',\n      routerLink: `/`,\n      icon: 'pi pi-cog'\n    }\n  ]\n  activeItem: MenuItem | undefined = undefined;\n\n   /**\n   * Path pour afficher la web_app\n   */\n  webappPath: string = environment.webapp_path;\n\n  homeLink!: string;\n  userLink!: string;\n  registerLink!: string;\n  loginLink!: string\n\n\n  constructor(private _store: Store<AppState>) {\n    this.userEmail$ = this._store.pipe(select(getEmailSelector));\n\n  }\n\n  ngOnInit() {\n    this.homeLink = `/${this.webappPath}/${frontendLinkUrl.home.url}`;\n    this.userLink = `/${this.webappPath}/${frontendLinkUrl.userHome.url}`;\n    this.loginLink = `/${this.webappPath}/${frontendLinkUrl.login.url}`;\n  }\n\n  /**\n   * Toggle LogoutOverlay\n   */\n  displayLogoutOverlay() {\n    this.isLogoutVisible = !this.isLogoutVisible;\n  }\n\n  /**\n   * Toggle MenuOverlay\n   */\n  displayMenuOverlay() {\n    this.isMenuVisible = !this.isMenuVisible;\n  }\n\n  logout() {\n    this._store.dispatch(Action.logout());\n    this.displayLogoutOverlay();\n  }\n\n  /**\n   *\n   * @param event\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.checkWidth();\n  }\n\n  /**\n   *\n   */\n  checkWidth() {\n    if (window.innerWidth > 768 && this.isMenuVisible) {\n      this.isMenuVisible = false;\n    }\n  }\n\n}\n","<nav class=\"p-4\">\n    <div class=\"flex align-items-center justify-content-between w-12\">\n      <!--LOGO - APP-->\n      <div class=\"p-4 navbar-logo cursor-pointer min-w-min\">\n        <h2 (click)=\"displayMenuOverlay()\" class=\"text-3xl font-bold\">MY APP</h2>\n        <!--\n          <img class=\"small\" src=\"assets/hamburger.jpg\" alt=\"My App Logo\" />\n        -->\n      </div>\n      <!--Links menu-->\n      <div class=\"hidden sm:flex w-8\">\n        <ul class=\"p-4 flex justify-content-center w-12\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"mr-4\">\n            <a class=\"link\" [routerLink]=homeLink>Home</a>\n          </li>\n          <li routerLinkActive=\"active\" class=\"mr-4\"><a class=\"link\" [routerLink]=userLink>users</a></li>\n          <ng-container *ngIf=\"(userEmail$ | async) as user; else elseBlock\">\n            <li class=\"right\">\n              <p-button label=\"Déconnexion\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n            </li>\n          </ng-container>\n\n          <ng-template #elseBlock>\n            <li class=\"right\" routerLinkActive=\"active\">\n              <a class=\"link\" [routerLink]=loginLink>\n                <i class=\"pi pi-user\"></i>\n                connexion\n              </a>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n</nav>\n<p-divider></p-divider>\n\n<!--Menu vertical-->\n<ng-container *ngIf=\"isMenuVisible\">\n  <nav class=\"inline sm:hidden\">\n    <div class=\"z-1 bg-black-alpha-10 absolute top-0 left-0 bottom-0 w-full flex justify-content-start align-items-start\">\n      <div class=\"shadow-2 sm:w-6 w-12 max-w-full sm:max-w-30rem min-h-full bg-white flex flex-column justify-content-start align-items-start\">\n        <div class=\"flex w-12 p-2 justify-content-end\">\n          <p-button (onClick)=\"displayMenuOverlay()\"  icon=\"pi pi-times\" [rounded]=\"true\" [text]=\"true\" severity=\"danger \"></p-button>\n        </div>\n        <ul class=\"p-4 flex flex-column justify-content-center w-12\">\n          <!-- Accueil-->\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"mr-4\">\n            <a (click)=\"displayMenuOverlay()\" class=\"link\" [routerLink]=homeLink>Home</a>\n          </li>\n\n          <!-- Page accueil utilisateur -->\n          <li (onClick)=\"displayMenuOverlay()\" routerLinkActive=\"active\" class=\"mr-4\">\n            <a (click)=\"displayMenuOverlay()\" class=\"link\" [routerLink]=userLink>users</a>\n          </li>\n\n          <!-- Deconnexion -->\n          <ng-container *ngIf=\"(userEmail$ | async) as user; else elseBlock\">\n            <li>\n              <p-button label=\"Déconnexion\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n            </li>\n          </ng-container>\n\n          <!-- login -->\n          <ng-template #elseBlock>\n            <li (onClick)=\"displayMenuOverlay()\" routerLinkActive=\"active\">\n              <a [routerLink]=loginLink\n              (click)=\"displayMenuOverlay()\">\n                <i class=\"pi pi-user\"></i>\n                connexion\n              </a>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</ng-container>\n\n<!--Confirmation logout-->\n<ng-container *ngIf=\"isLogoutVisible\">\n  <div class=\"z-1 bg-black-alpha-10 absolute top-0 left-0 bottom-0 w-full flex align-items-center justify-content-center\">\n    <div class=\"shadow-2 sm:w-6 max-w-full sm:max-w-30rem bg-white flex flex-column justify-content-center align-items-center\">\n      <p class=\"p-5\">Souhaitez-vous quitter l'application?</p>\n      <div class=\"p-5 w-12  flex flex-column sm:flex-row align-items-center justify-content-center\">\n        <p-button class=\"w-12 m-1\" [style]=\"{ 'width': '100%' }\" label=\" Me deconnecter\" [outlined]=\"true\"  styleClass=\"p-button-secondary\" (onClick)=\"logout()\" icon=\"pi pi-check\"></p-button>\n        <p-button class=\"w-12 m-1\" label=\"Non\"  [style]=\"{ 'width': '100%' }\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n      </div>\n  </div>\n  </div>\n\n</ng-container>\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport frontendLinkUrl from './utils/frontend-link-url';\n\n\n@Injectable()\nexport class HandlerHttpInterceptor implements HttpInterceptor {\n\n  constructor(private _injector: Injector) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(request.urlWithParams.includes('/api/')){\n      let token: string | undefined = undefined;\n\n      const user: any | null = localStorage.getItem('user');\n      console.log(`Données utilisateur : ${user}`)\n\n      if(user !== null) {\n        const userJSON = JSON.parse(user);\n        console.log(`token bearer: : ${userJSON.jwt}`);\n        token = userJSON.jwt;\n      }\n\n      const formToken: string|null = localStorage.getItem('form-csrf-token');\n      request = request.clone({\n        withCredentials: true,\n        setHeaders: {\n          authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Form-Csrf-Token': formToken === null ? '-' : formToken\n        }\n      });\n    }\n    return next.handle(request).pipe(\n      tap(event=>{\n        if(event instanceof HttpResponse) {\n          const csrfToken = event.headers.get('form-csrf-token');\n          if (csrfToken) {\n            localStorage.setItem('form-csrf-token', csrfToken);\n          }\n        }\n      }),\n      tap({\n        error: (error: HttpErrorResponse)=>{\n          const errorStatus: number = error.status;\n          const router = this._injector.get(Router);\n          const webappPath: string = environment.webapp_path !== '' ?\n          environment.webapp_path : '';\n          switch(errorStatus) {\n            case 0: {\n              console.log('erreur: 0: ', error.status);\n              router.navigate([`${webappPath}/${frontendLinkUrl.error.url}`]);\n              break;\n            }\n            case 401: {\n              console.log('erreur: 401: ', error.message);\n              router.navigate([`${webappPath}/${frontendLinkUrl.login.url}`]);\n              break;\n            }\n            case 403: {\n\n              console.log('error 403: ', 'error 403');\n              router.navigate([`${webappPath}/${frontendLinkUrl.login.url}`]);\n              break;\n            }\n            case 404: {\n              console.log('error 404: ', error.status);\n              router.navigate([`${webappPath}/${frontendLinkUrl.notFound.url}`]);\n             break;\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { authRouting } from './routes/auth.routing';\nimport { reducers as authReducer } from './store/auth-store/reducer';\nimport { AuthEffect } from './store/auth-store/effect';\nimport { AuthService } from './services/auth.service';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport { ShowOnFocusDirective } from './directives/show-on-focus.directive';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { AccountActivationPageComponent } from './pages/account-activation-page/account-activation-page.component';\nimport { ChangeAccountPasswordPageComponent } from './pages/change-account-password-page/change-account-password-page.component';\nimport { LostPasswordMailingPageComponent } from './pages/lost-password-mailing-page/lost-password-mailing-page.component';\n\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    RegisterPageComponent,\n    ShowOnFocusDirective,\n    AccountActivationPageComponent,\n    ChangeAccountPasswordPageComponent,\n    LostPasswordMailingPageComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRouting),\n    StoreModule.forFeature('authState', authReducer),\n    EffectsModule.forFeature([\n      AuthEffect\n    ]),\n    InputTextModule,\n    PasswordModule,\n    MessagesModule,\n    ButtonModule,\n    MessageModule,\n    DividerModule,\n    SkeletonModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { Directive, ElementRef, HostListener, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Password } from 'primeng/password';\n\n@Directive({\n  selector: '[appShowOnFocus]'\n})\nexport class ShowOnFocusDirective {\n\n  constructor(private _el: ElementRef, private _viewContainer: ViewContainerRef) { }\n\n  @Input('appShowOnFocus') templateRef!: TemplateRef<any>;\n\n  @HostListener('focusin', ['$event']) onFocus(event: FocusEvent) {\n    this._viewContainer.createEmbeddedView(this.templateRef);\n  }\n  @HostListener('focusout', ['$event']) onFocusOut(event: FocusEvent) {\n    this._viewContainer.clear();\n  }\n\n  private isPrimeNgPasswordInput(target: EventTarget | null): boolean {\n    return target instanceof HTMLInputElement && this._el.nativeElement.querySelector('input') === target;\n  }\n}\n","export enum ActivatedAccountStatus {\r\n  SUCCESS,\r\n  FAILURE,\r\n  ALREADY_ACTIVATED\r\n}\r\n\r\nexport class ActivateAccountResponse {\r\n  constructor(\r\n    public readonly accountActivatedStatus: ActivatedAccountStatus,\r\n    public readonly message: string){}\r\n}\r\n","export class Captcha {\r\n  constructor(\r\n    public readonly image: string,\r\n    public readonly mimeType: string,\r\n    public readonly question: string,\r\n    public readonly response: string,\r\n  ) {}\r\n}\r\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport frontendLinkUrl from 'src/app/utils/frontend-link-url';\nimport { environment } from 'src/environments/environment';\nimport { ActivateAccountDto } from '../../models/auth.dto';\nimport { select, Store } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { Observable } from 'rxjs';\nimport { ActivateAccountResponse, ActivatedAccountStatus } from '../../models/activate-account.model';\nimport { activateAccountResponseSelector } from '../../store/auth-store/selector';\nimport { AppState } from 'src/store/app.state';\nimport appMessage from 'src/app/utils/messages/account-page-message';\nimport ComponentBaseApp from 'src/app/component.base';\n\n@Component({\n  selector: 'app-account-activation-page',\n  templateUrl: './account-activation-page.component.html',\n  styleUrls: ['./account-activation-page.component.css']\n})\nexport class AccountActivationPageComponent extends ComponentBaseApp {\n\n  activatedAccountResponse$: Observable<ActivateAccountResponse|null>;\n\n  // Statut de l'activation possible\n  activateAccountStatusSuccess: ActivatedAccountStatus = ActivatedAccountStatus.SUCCESS;\n  activateAccountStatusFailure: ActivatedAccountStatus = ActivatedAccountStatus.FAILURE;\n\n  // Données de URL\n  activationToken: string | null = '';\n  userEmail: string | null = '';\n\n  constructor(private _activatedRoute: ActivatedRoute, private _router: Router, private _store: Store<AppState>) {\n    super(appMessage.accountActivationPage);\n    this.activatedAccountResponse$ = this._store.pipe(select(activateAccountResponseSelector));\n  }\n\n  ngOnInit() {\n    // chargement token csrf\n    this._store.dispatch(AuthAction.csrf());\n\n    this.userEmail = this._activatedRoute.snapshot.paramMap.get('user-email');\n    this.activationToken = this._activatedRoute.snapshot.paramMap.get('confirmation-token');\n\n    if(this.userEmail === null || this.userEmail.trim() === '' || this.activationToken === null || this.activationToken.trim() === '') {\n      this._router.navigate([`${environment.webapp_path}/${frontendLinkUrl.error.url}`]);\n    }\n\n    this.activateAccount();\n  }\n\n  /**\n   * Activation du compte\n   */\n  activateAccount(){\n    const activateAccountDto: ActivateAccountDto = {\n      language: environment.api_base,\n      token: this.activationToken!,\n      email: this.userEmail!\n    }\n\n    this._store.dispatch(AuthAction.activateAccount(activateAccountDto))\n  }\n}\n","<div class=\"container--center\">\n  <div class=\"flex flex-column align-items-center\">\n    <div class=\"p-4 shadow-5 overflow-hidden\">\n      <h2 class=\"pb-2 font-bold text-xl\">{{pageMessages.get('title')}}</h2>\n      <div class=\"pt-4\" *ngIf=\"(activatedAccountResponse$|async) as activateAccount; else elseBlock\">\n        <!--Message activation réussi-->\n        <div *ngIf=\"activateAccount.accountActivatedStatus===activateAccountStatusSuccess\">\n          <p>{{pageMessages.get('accountActivationSuccessMessage')}}</p>\n        </div>\n        <!--Message echec activation-->\n        <div *ngIf=\"activateAccount.accountActivatedStatus===activateAccountStatusFailure\">\n          <p>{{pageMessages.get('accountActivationErrorMessage')}}</p>\n        </div>\n      </div>\n      <!--Message par default-->\n      <ng-template #elseBlock>\n        <div>\n          <p>{{pageMessages.get('accountActivationWaitingMessage')}}</p>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport ComponentBaseApp from 'src/app/component.base';\nimport appMessage from 'src/app/utils/messages/change-password-message'\nimport { passwordValidator } from '../../validators/password.validator';\nimport { AppState } from 'src/store/app.state';\nimport { Store } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport frontendLinkUrl from 'src/app/utils/frontend-link-url';\nimport { ChangePasswordDto } from '../../models/auth.dto';\n\n@Component({\n  selector: 'app-change-account-password-page',\n  templateUrl: './change-account-password-page.component.html',\n  styleUrls: ['./change-account-password-page.component.css']\n})\nexport class ChangeAccountPasswordPageComponent extends ComponentBaseApp {\n\n  changePasswordFG: FormGroup = new FormGroup({});\n\n   // Données de URL\n   urlToken: string | null = '';\n   userEmail: string | null = '';\n\n\n  constructor(\n    private _fb: FormBuilder,\n    private _store: Store<AppState>,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute) {\n    super(appMessage.changePassword);\n  }\n\n  ngOnInit() {\n    this.initFormGroup();\n\n    this.userEmail = this._activatedRoute.snapshot.paramMap.get('user-email');\n    this.urlToken = this._activatedRoute.snapshot.paramMap.get('confirmation-token');\n\n    if(this.userEmail === null || this.userEmail.trim() === '' || this.urlToken === null || this.urlToken.trim() === '') {\n      this._router.navigate([`${environment.webapp_path}/${frontendLinkUrl.error.url}`]);\n    }\n  }\n\n  /**\n   * Initialisation FormGroip\n   */\n  initFormGroup() {\n    this.changePasswordFG = this._fb.group({\n      changePasswordToken: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    }, {\n      Validators: passwordValidator\n    })\n  }\n\n  updatePassword() {\n    if (!this.changePasswordFG.valid) {\n      return this.changePasswordFG.markAllAsTouched();\n    }\n\n    const changePasswordDto: ChangePasswordDto = {\n      email: this.userEmail!,\n      password:  this.changePasswordFG.get('password')?.value,\n      urlToken: this.urlToken!,\n      changePasswordToken: this.changePasswordFG.get('password')?.value,\n      language: environment.language\n    }\n\n    this._store.dispatch(AuthAction.changePassword(changePasswordDto))\n  }\n\n}\n","<div class=\"flex flex-column align-items-center\">\n\n  <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"changePasswordFG\" (submit)=\"updatePassword()\">\n    <p class=\"text-base pt-6 pb-4 font-semibold\">{{pageMessages.get('title')}}</p>\n    <p-divider class=\"p-2 w-full\"></p-divider>\n\n    <!--mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <div class=\"relative flex flex-column w-full\">\n        <label class=\"pb-1\" for=\"password\">{{pageMessages.get('password')}}</label>\n        <p-password\n        [appShowOnFocus]=\"passwordTemplate\"\n        id=\"password\"\n        aria-describedby=\"password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n        <!--Template indicator-->\n        <ng-template #passwordTemplate>\n          <div class=\"absolute top-100 left-0 shadow-1 p-2 z-1 bg-white\">\n            <p class=\"mt-2 text-sm font-bold\">Contraintes</p>\n            <p-divider class=\"p-2\"></p-divider>\n            <ul class=\"pl-2 ml-2 mt-0\" style=\"line-height: 1.5\">\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en miniscule</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en majiscule </li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 chiffre</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Minimum 8 caractères</li>\n            </ul>\n          </div>\n        </ng-template>\n      </p-password>\n      </div>\n\n      <!--Message erreur-->\n      <div  *ngIf=\"changePasswordFG.get('password')?.touched && changePasswordFG.get('password')?.errors?.['required']\">\n        <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('passwordMissing')\" ></p-message>\n      </div>\n    </div>\n\n     <!-- confirmation mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"password\">{{pageMessages.get('confirmPassword')}}</label>\n      <p-password\n        id=\"confirmPassword\"\n        aria-describedby=\"confirm-password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"confirmPassword\"\n        placeholder=\"mot de passe\">\n      </p-password>\n      <div>\n        <ul>\n          <li *ngIf=\"changePasswordFG.get('confirmPassword')?.touched && changePasswordFG.get('confirmPassword')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordMissing')\" ></p-message>\n          </li>\n          <li *ngIf=\"changePasswordFG.get('confirmPassword')?.touched && changePasswordFG.errors?.['passwordMismatch']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordNotMatch')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!--Token-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"email\">{{pageMessages.get('changePasswordToken')}}</label>\n      <input style=\"border-color: var(--first_color)\" type=\"text\" pInputText id=\"changePasswordToken\" formControlName=\"changePasswordToken\"  placeholder=\"Token...\">\n      <div>\n        <ul>\n          <li *ngIf=\"changePasswordFG.get('changePasswordToken')?.touched && changePasswordFG.get('changePasswordToken')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('tokenMissing')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <p-button class=\"pt-4\" type=\"submit\" label=\"Go\"></p-button>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\n\nimport { LoginDto } from '../../models/auth.dto';\nimport { isLoadingSelector } from '../../store/auth-store/selector';\nimport { environment } from 'src/environments/environment';\nimport frontendLinkUrl from 'src/app/utils/frontend-link-url';\nimport ComponentBase from 'src/app/component.base';\nimport appMessage from 'src/app/utils/messages/login-page-message';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent extends ComponentBase {\n\n  loginDataFormGroup: FormGroup = new FormGroup({});\n  isLoading$: Observable<boolean>;\n\n  /**\n   * Path pour afficher la web_app\n   */\n  webappPath: string = environment.webapp_path;\n\n  /**\n   * Link page inscription\n   */\n  registerLink!: string;\n\n  /**\n   * Link reset mot de passe\n   */\n  resetPasswordLink!: string;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>) {\n    super(appMessage.loginPage);\n    this.isLoading$ = this._store.pipe(select(isLoadingSelector));\n\n  }\n\n  ngOnInit() {\n    this.registerLink =  `/${this.webappPath}/${frontendLinkUrl.register.url}`;\n    this.resetPasswordLink = `/${this.webappPath}/${frontendLinkUrl.lostPasswordMailingPage.url}`;\n\n    this._store.dispatch(AuthAction.csrf());\n    this.initializeLoginData();\n  }\n\n  /**\n   * Initialisation FormBuilder\n   */\n  initializeLoginData() {\n    this.loginDataFormGroup = this._fb.group({\n      // Email\n      email: ['', Validators.required],\n\n      // Password\n      password: ['', Validators.required]\n    })\n  }\n\n  /**\n   * Login\n   * @returns\n   */\n  login() {\n\n    if (!this.loginDataFormGroup.valid) {\n      return this.loginDataFormGroup.markAllAsTouched();\n    }\n\n    const logindata: LoginDto = {\n      email: this.loginDataFormGroup.get('email')?.value,\n      password:  this.loginDataFormGroup.get('password')?.value,\n      language: environment.language\n    }\n\n    this._store.dispatch(AuthAction.login(logindata));\n\n  }\n\n}\n","<div class=\"container--center\">\n  <div class=\"flex flex-column align-items-center w-full\">\n    <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"loginDataFormGroup\" (submit)=\"login()\" >\n      <p class=\"text-base pt-6 pb-4 font-semibold\">{{pageMessages.get('title')}}</p>\n      <p-divider class=\"p-2 w-full\"></p-divider>\n\n      <!--Email-->\n      <div class=\"flex flex-column w-full pt-4\">\n        <label class=\"pb-1\" for=\"email\">{{pageMessages.get('email')}}</label>\n        <input style=\"border-color: var(--first_color)\" type=\"email\" pInputText id=\"email\" formControlName=\"email\" placeholder=\"votre email.\">\n\n         <!--Message erreur-->\n         <div *ngIf=\"loginDataFormGroup.get('email')?.touched && loginDataFormGroup.get('email')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailMissing')\" ></p-message>\n        </div>\n      </div>\n\n      <!-- Mote de passe-->\n      <div class=\"flex flex-column w-full pt-4\">\n        <label class=\"pb-1\" for=\"password\">{{pageMessages.get('password')}}</label>\n        <p-password\n          id=\"password\"\n          [feedback]=\"false\"\n          [toggleMask]=\"true\"\n          formControlName=\"password\"\n          placeholder=\"mot de passe...\">\n        </p-password>\n        <!--Message erreur-->\n        <div *ngIf=\"loginDataFormGroup.get('password')?.touched && loginDataFormGroup.get('password')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('passwordMissing')\" ></p-message>\n        </div>\n\n        <!-- Lien perte de mot de passe -->\n        <div class=\"flex flex-column w-full pt-1\">\n          <a class=\"text-sm\" [routerLink]=resetPasswordLink>{{pageMessages.get('lostPassword')}}</a>\n        </div>\n\n      </div>\n\n      <p-button class=\"pt-4\" type=\"submit\" label=\"connexion\"></p-button>\n      <div class=\"flex flex-column w-full pt-4\">\n        <p> {{pageMessages.get('register')}} </p> <a [routerLink]=registerLink>{{pageMessages.get('registerLink')}}</a>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport ComponentBase from 'src/app/component.base';\nimport messageData from 'src/app/utils/messages/lost-password-mailing-message';\nimport { LostPaswordMailingDto } from '../../models/auth.dto';\nimport { environment } from 'src/environments/environment';\nimport { AppState } from 'src/store/app.state';\nimport { Store } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\n\n@Component({\n  selector: 'app-lost-password-mailing-page',\n  templateUrl: './lost-password-mailing-page.component.html',\n  styleUrls: ['./lost-password-mailing-page.component.css']\n})\nexport class LostPasswordMailingPageComponent extends ComponentBase {\n\n  lostPasswordFG: FormGroup = new FormGroup({});\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>) {\n    // Charegement des messages de la page\n    super(messageData.lostPasswordMailingPage);\n  }\n\n  ngOnInit() {\n    this.initialiazeFormData();\n  }\n\n  initialiazeFormData() {\n    this.lostPasswordFG = this._fb.group({\n      email: ['', Validators.required]\n    });\n  }\n\n  passwordLinkReinitializer(){\n    if (!this.lostPasswordFG.valid) {\n      return this.lostPasswordFG.markAllAsTouched();\n    }\n\n    const lostPasswordMailingDto: LostPaswordMailingDto = {\n      email: this.lostPasswordFG.get('email')?.value,\n      language: environment.language\n    }\n\n    this._store.dispatch(AuthAction.lostPasswordMailing(lostPasswordMailingDto));\n\n  }\n\n}\n","\n<div class=\"container--center\">\n  <div class=\"flex flex-column align-items-center w-full\">\n    <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"lostPasswordFG\" (submit)=\"passwordLinkReinitializer()\" >\n      <p class=\"text-base pt-6 pb-4 font-semibold\">{{ pageMessages.get('title') }}</p>\n      <p-divider class=\"p-2 w-full\"></p-divider>\n\n      <!--message-->\n      <p class=\"text-sm\">{{pageMessages.get('message')}}</p>\n\n      <!--Email-->\n      <div class=\"flex flex-column w-full pt-4\">\n        <label class=\"pb-1\" for=\"email\">{{pageMessages.get('email')}}</label>\n        <input style=\"border-color: var(--first_color)\" type=\"email\" pInputText id=\"email\" formControlName=\"email\" placeholder=\"votre email.\">\n\n         <!--Message erreur-->\n         <div *ngIf=\"lostPasswordFG.get('email')?.touched && lostPasswordFG.get('email')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailMissing')\" ></p-message>\n        </div>\n      </div>\n\n      <p-button class=\"pt-4\" type=\"submit\" label=\"Go\"></p-button>\n    </form>\n  </div>\n</div>\n","//@ts-nocheck\nimport { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppState } from 'src/store/app.state';\nimport { Observable } from 'rxjs';\nimport { Message } from 'primeng/api';\n\nimport { RegisterDto } from '../../models/register.dto';\nimport { Captcha } from '../../models/captcha.model';\nimport {  captchaSelector } from '../../store/auth-store/selector';\nimport { passwordValidator } from '../../validators/password.validator';\nimport { environment } from 'src/environments/environment';\nimport appMessage from 'src/app/utils/messages/register-page-message';\nimport { MessageUtil } from 'src/app/utils/messages/message-utils';\nimport { CaptchaClientResponseDto } from '../../models/captcha-client-response.dto';\nimport { AuthService } from '../../services/auth.service';\nimport ComponentBaseApp from 'src/app/component.base';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent extends ComponentBaseApp {\n\n  registerDataFormGroup: FormGroup = new FormGroup({});\n\n  /**\n   * Données pour le captcha\n   */\n  captcha$: Observable<Captcha|null>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>, private _authService: AuthService){\n    super(appMessage.registerPage);\n    this.captcha$ = _store.pipe(select(captchaSelector));\n  }\n\n  ngOnInit() {\n    this.initializeRegisterData();\n    this.initializeForm();\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(AuthAction.leaveRegisterPage());\n    localStorage.removeItem('captcha');\n  }\n\n  /**\n   * Formgroup Init\n   */\n  initializeRegisterData() {\n    this.registerDataFormGroup = this._fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      name : ['', Validators.required],\n      captchaClientResponse: ['', Validators.required]\n    }, {\n      validators: passwordValidator()\n    })\n  }\n\n  /**\n   * CSRF + Captcha\n   */\n  initializeForm() {\n    this._store.dispatch(AuthAction.captcha());\n    this._store.dispatch(AuthAction.csrf());\n  }\n\n  register() {\n    if (!this.registerDataFormGroup.valid) {\n      return this.registerDataFormGroup.markAllAsTouched();\n    }\n\n    const email: string = this.registerDataFormGroup.get('email')?.value;\n    const password : string = this.registerDataFormGroup.get('password')?.value;\n    const name: string = this.registerDataFormGroup.get('name')?.value;\n    const captchaClientResponse: string = this.registerDataFormGroup.get('captchaClientResponse')?.value\n\n    const registerData: RegisterDto = this._authService.getRegisterDto(email, password, name, captchaClientResponse);\n\n    this._store.dispatch(AuthAction.register(registerData));\n\n  }\n\n}\n","<div class=\"flex flex-column align-items-center\">\n\n  <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"registerDataFormGroup\" (submit)=\"register()\">\n    <p class=\"text-base pt-6 pb-4 font-semibold\">{{pageMessages.get('title')}}</p>\n    <p-divider class=\"p-2 w-full\"></p-divider>\n\n    <!--Email-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"email\">{{pageMessages.get('email')}}</label>\n      <input style=\"border-color: var(--first_color)\" type=\"email\" pInputText id=\"email\" formControlName=\"email\" aria-describedby=\"email-help\" placeholder=\"votre email...\">\n      <div>\n        <ul>\n          <li *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailMissing')\" ></p-message>\n          </li>\n          <li *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['email']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailNotValid')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!--Nom-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"name\">{{pageMessages.get('name')}}</label>\n      <input\n        style=\"border-color: var(--first_color)\"\n        type=\"text\"\n        pInputText\n        aria-describedby=\"name\"\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"nom\">\n\n        <!--Message erreur-->\n        <div *ngIf=\"registerDataFormGroup.get('name')?.touched && registerDataFormGroup.get('name')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('nameMissing')\" ></p-message>\n        </div>\n    </div>\n\n    <!--mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <div class=\"relative flex flex-column w-full\">\n        <label class=\"pb-1\" for=\"password\">{{pageMessages.get('password')}}</label>\n        <p-password\n        [appShowOnFocus]=\"passwordTemplate\"\n        id=\"password\"\n        aria-describedby=\"password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n        <!--Template indicator-->\n        <ng-template #passwordTemplate>\n          <div class=\"absolute top-100 left-0 shadow-1 p-2 z-1 bg-white\">\n            <p class=\"mt-2 text-sm font-bold\">Contraintes</p>\n            <p-divider class=\"p-2\"></p-divider>\n            <ul class=\"pl-2 ml-2 mt-0\" style=\"line-height: 1.5\">\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en miniscule</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en majiscule </li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 chiffre</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Minimum 8 caractères</li>\n            </ul>\n          </div>\n        </ng-template>\n      </p-password>\n      </div>\n\n      <!--Message erreur-->\n      <div  *ngIf=\"registerDataFormGroup.get('password')?.touched && registerDataFormGroup.get('password')?.errors?.['required']\">\n        <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('passwordMissing')\" ></p-message>\n      </div>\n    </div>\n\n     <!-- confirmation mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"password\">{{pageMessages.get('confirmPassword')}}</label>\n      <p-password\n        id=\"confirmPassword\"\n        aria-describedby=\"confirm-password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"confirmPassword\"\n        placeholder=\"mot de passe\">\n      </p-password>\n      <div>\n        <ul>\n          <li *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.get('confirmPassword')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordMissing')\" ></p-message>\n          </li>\n          <li *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.errors?.['passwordMismatch']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordNotMatch')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!--captcha-->\n    <div class=\"flex flex-column w-full m-4 p-4 shadow-1\" *ngIf=\"(captcha$ | async) as captcha; else waitingBlock\">\n      <p class=\"mb-2\">{{captcha.question}}</p>\n      <div class=\"flex flex-column align-items-center mb-2\">\n        <img [src]=\"'data:' + captcha.mimeType + ';base64,' + captcha.image\">\n      </div>\n      <input pInputText style=\"border-color: var(--first_color)\" id=\"captchaClientResponse\" type=\"text\" formControlName=\"captchaClientResponse\">\n       <!--Message erreur-->\n       <div   *ngIf=\"registerDataFormGroup.get('captchaClientResponse')?.touched && registerDataFormGroup.get('captchaClientResponse')?.errors?.['required']\">\n        <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('captchaResponseMissing')\" ></p-message>\n      </div>\n    </div>\n    <ng-template #waitingBlock>\n      <div class=\"shadow-2 p-4 m-4 w-12\">\n        <p-skeleton class=\"p-2\" width=\"10rem\" height=\"2rem\"></p-skeleton>\n        <p-skeleton class=\"ml-4\" width=\"80%\" height=\"70px\" borderRadius=\"16px\"></p-skeleton>\n        <p-skeleton class=\"p-2\" width=\"10rem\" height=\"35px\"></p-skeleton>\n      </div>\n    </ng-template>\n    <p-button class=\"pt-4\" type=\"submit\" label=\"creation\"></p-button>\n  </form>\n</div>\n","//@ts-nocheck\r\nimport { Route } from \"@angular/router\";\r\nimport { LoginPageComponent } from \"../pages/login-page/login-page.component\";\r\nimport { RegisterPageComponent } from \"../pages/register-page/register-page.component\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport pageTitle from \"src/app/utils/page-title\";\r\nimport frontendLinkUrl from \"src/app/utils/frontend-link-url\";\r\nimport { AccountActivationPageComponent } from \"../pages/account-activation-page/account-activation-page.component\";\r\nimport { ChangeAccountPasswordPageComponent } from \"../pages/change-account-password-page/change-account-password-page.component\";\r\nimport { LostPasswordMailingPageComponent } from \"../pages/lost-password-mailing-page/lost-password-mailing-page.component\";\r\n\r\nexport const authRouting: Route[] = [\r\n  {\r\n    path: environment.webapp_path,\r\n    children: [\r\n      { path: frontendLinkUrl.login.url, component: LoginPageComponent, title: pageTitle.loginPageTitle[environment.language]},\r\n      { path: frontendLinkUrl.register.url, component: RegisterPageComponent, title: pageTitle.registerPageTitle[environment.language]},\r\n      { path: frontendLinkUrl.accountActivation.url, component: AccountActivationPageComponent, title: pageTitle.activateAccountTitle[environment.language]},\r\n      { path: frontendLinkUrl.changeAccountPassword.url, component: ChangeAccountPasswordPageComponent, title: pageTitle.changeAccountPasswordTitle[environment.language]},\r\n      { path: frontendLinkUrl.lostPasswordMailingPage.url, component: LostPasswordMailingPageComponent, title: pageTitle.lostPasswordMailingTitle[environment.language]}\r\n    ]\r\n\r\n  }\r\n]\r\n","import { Injectable } from \"@angular/core\";\r\nimport { LoginDto } from \"../models/auth.dto\";\r\nimport { map, Observable, of, tap } from \"rxjs\";\r\nimport { LoginResponseDto } from \"../models/auth.dto\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { RegisterDto } from \"../models/auth.dto\";\r\nimport { RegisterResponseDto } from \"../models/auth.dto\";\r\nimport { Captcha } from \"../models/captcha.model\";\r\nimport { CaptchaDto } from \"../models/auth.dto\";\r\nimport { CaptchaClientResponseDto } from \"../models/auth.dto\";\r\nimport { ActivateAccountDto, ActivateAccountResponseDto } from \"../models/auth.dto\";\r\nimport { ActivateAccountResponse, ActivatedAccountStatus } from \"../models/activate-account.model\";\r\nimport { LostPasswordMailingResponseDto, LostPaswordMailingDto } from \"../models/auth.dto\";\r\nimport { ChangePasswordDto, ChangePasswordResponseDto } from \"../models/auth.dto\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService {\r\n\r\n  private _apiEndPoint: string =  environment.api_base + \"/auth\";\r\n\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public login(loginDto: LoginDto): Observable<LoginResponseDto> {\r\n    return this._http.post<LoginResponseDto>(this._apiEndPoint + \"/login\", loginDto).pipe(\r\n      tap(loginResponse=>{\r\n        localStorage.setItem('user', JSON.stringify({\r\n          userId: loginResponse.id,\r\n          email: loginResponse.email,\r\n          jwt: loginResponse.jwt,\r\n          roles: loginResponse.roles\r\n        }))\r\n      })\r\n    )\r\n  }\r\n\r\n  public register(registerDto: RegisterDto): Observable<RegisterResponseDto> {\r\n    return this._http.post<RegisterResponseDto>(this._apiEndPoint + \"/register\",  registerDto)\r\n  }\r\n\r\n  public csrf(): Observable<string> {\r\n    const path = this._apiEndPoint + \"/csrf\";\r\n      return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  public captcha(): Observable<Captcha> {\r\n    const path = this._apiEndPoint+ \"/captcha\";\r\n    return this._http.get<CaptchaDto>(path).pipe(\r\n      map(dto=>this.toCaptchaModel(dto))\r\n    )\r\n  }\r\n\r\n  public logout(): Observable<string> {\r\n    //const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const user = localStorage.getItem('user');\r\n    let path:string= \"\";\r\n\r\n    if(user!=null)  {\r\n      const userString = JSON.parse(user);\r\n      const userId = userString.userId;\r\n      path = this._apiEndPoint + \"/logout/\" + userId;\r\n    }\r\n    console.log(path);\r\n    return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  public lostPasswordMailing(lostPasswordDto: LostPaswordMailingDto): Observable<string> {\r\n    return this._http.post<LostPasswordMailingResponseDto>(this._apiEndPoint + \"/lost-password-mailing\", lostPasswordDto).pipe(\r\n      map(response=>response.message)\r\n    )\r\n  }\r\n\r\n  public changePassword(changePasswordDto: ChangePasswordDto): Observable<string> {\r\n    return this._http.post<ChangePasswordResponseDto>(this._apiEndPoint + \"/change-password\", changePasswordDto).pipe(\r\n      map(response=>response.message)\r\n    )\r\n  }\r\n\r\n  public activateAccount(activateAccountDto: ActivateAccountDto ): Observable<ActivateAccountResponse> {\r\n    return this._http.post<ActivateAccountResponseDto>(this._apiEndPoint + '/account-activation', activateAccountDto).pipe(\r\n      map(dto=>this.toActivateAccountModel(dto))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Convertie un CaptchaDto -> Captcha\r\n   * @param dto CaptchaDto\r\n   * @returns Captcha\r\n   */\r\n  private toCaptchaModel(dto: CaptchaDto): Captcha {\r\n    return new Captcha(dto.imageBase64, dto.imageMimeType, dto.question, dto.response);\r\n  }\r\n\r\n  /**\r\n   * Converti un ActivateAccountResponseDto -> ActivateAccountResponse\r\n   * @param dto ActivateAccountResponseDto - réponse API\r\n   * @returns ActivateAccountResponse\r\n   */\r\n  private toActivateAccountModel(dto: ActivateAccountResponseDto): ActivateAccountResponse {\r\n    const activateStatus: ActivatedAccountStatus  = this.getAcctivateAccountStatus(dto.accountActivateStatus);\r\n    return new ActivateAccountResponse(activateStatus, dto.message);\r\n  }\r\n\r\n  /**\r\n   * Renvoi un RegisterDto\r\n   * @param email string\r\n   * @param password string\r\n   * @param name string\r\n   * @param captchaClientResponse\r\n   * @returns RegisterDto\r\n   */\r\n  public getRegisterDto(email: string, password: string, name: string, captchaClientResponse: string): RegisterDto {\r\n    const captchaData: string | null = localStorage.getItem('captcha');\r\n    let captchaResponse: string = '';\r\n\r\n\r\n    if(captchaData != null) {\r\n      const captchaDataJson = JSON.parse(captchaData);\r\n      captchaResponse = captchaDataJson.response\r\n    }\r\n\r\n    // Récupération des données du captcha et réponse client\r\n    const captchaClientResponseDto: CaptchaClientResponseDto = {\r\n      captchaResponse,\r\n      clientResponse: captchaClientResponse\r\n    };\r\n\r\n    return  {\r\n      email,\r\n      password,\r\n      name,\r\n      captchaClientResponseDto,\r\n      language: environment.language\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renvoie un string en ActivatedAccountStatus\r\n   * @param accountActivateStatus string\r\n   * @returns ActivatedAccountStatus\r\n   */\r\n  public getAcctivateAccountStatus(accountActivateStatus: string): ActivatedAccountStatus {\r\n\r\n    switch(accountActivateStatus.toLowerCase()) {\r\n      case ActivatedAccountStatus.SUCCESS.toString().toLowerCase(): return ActivatedAccountStatus.SUCCESS; break;\r\n      case ActivatedAccountStatus.FAILURE.toString().toLowerCase(): return ActivatedAccountStatus.FAILURE; break;\r\n      case ActivatedAccountStatus.ALREADY_ACTIVATED.toString().toLowerCase(): return ActivatedAccountStatus.ALREADY_ACTIVATED; break;\r\n      default: return ActivatedAccountStatus.FAILURE; break;\r\n    }\r\n  }\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { Captcha } from \"../../models/captcha.model\";\r\nimport { CaptchaClientResponseDto, ActivateAccountDto } from \"../../models/auth.dto\";\r\nimport { ActivateAccountResponse } from \"../../models/activate-account.model\";\r\n\r\nexport const login = createAction('[Auth] Login client', props<{email: string, password: string, language: string}>());\r\nexport const csrf = createAction('[Auth] csrf');\r\nexport const captcha = createAction('[Auth] get captcha')\r\nexport const captchaSuccess = createAction('[Auth] captcha success', props<{captcha: Captcha}>());\r\n\r\nexport const logout = createAction('[Auth] Logout');\r\nexport const logoutSuccess = createAction('[Auth] Logout success', props<{message: string}>());\r\nexport const logoutFailed = createAction('[Auth] Logout failed', props<{error: string, isErrorVisible: boolean}>());\r\n\r\nexport const register = createAction('[Auth] Register client', props<{email: string, password: string, name: string, captchaClientResponseDto: CaptchaClientResponseDto, language: string}>());\r\nexport const leaveRegisterPage = createAction('[Auth] leave register page');\r\n\r\nexport const activateAccount = createAction('[Auth] Activate account', props<{email: string, token:string, language: string}>());\r\nexport const activateAccountSuccess = createAction('[Auth] Activate account success', props<{activateAccountResponse: ActivateAccountResponse}>());\r\nexport const activateAccountFailure = createAction('[Auth] Activate account failure');\r\n\r\nexport const lostPasswordMailing = createAction('[Auth] Lost password mailing', props<{email: string, language: string}>());\r\n\r\nexport const changePassword = createAction('[Auth] change password', props<{changePasswordToken: string, urlToken: string, email: string, password: string, language: string}>());\r\nexport const changePasswordSuccess = createAction('[Auth] change password success', props<{message: string}>());\r\nexport const changePasswordFailure = createAction('[Auth] change password failure', props<{message: string}>());\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport * as AuthAction from \"./action\";\r\nimport * as UserIdentAction from \"src/store/user-ident-store/action\";\r\nimport * as FlashMessageAction from 'src/store/flash-message-store/action';\r\n\r\nimport { catchError, from, map, mergeMap, of, switchMap, tap } from \"rxjs\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport frontendLinkUrl from \"src/app/utils/frontend-link-url\";\r\n\r\n@Injectable()\r\nexport class AuthEffect {\r\n\r\n  constructor(private _action$: Actions, private _authService: AuthService, private _router: Router){}\r\n\r\n  login$ = createEffect(()=>\r\n  this._action$.pipe(\r\n    ofType(AuthAction.login),\r\n    switchMap((data)=>\r\n      this._authService.login(data).pipe(\r\n        switchMap((loginResponse)=> [\r\n          // Creation du UserIdent\r\n          UserIdentAction.createUserIden({\r\n            userId: loginResponse.id,\r\n            email: loginResponse.email,\r\n            jwt: loginResponse.jwt,\r\n            roles: loginResponse.roles\r\n          }),\r\n\r\n          // Generation Message login\r\n          FlashMessageAction.createMessage({message: loginResponse.message, isError: false}),\r\n\r\n\r\n        ]),\r\n        catchError((error)=>from([\r\n          UserIdentAction.clearUserIden(),\r\n          // Generation Message d'erreur\r\n          FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n        ])\r\n        )\r\n      )\r\n    )\r\n  )\r\n  )\r\n\r\n  register$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.register),\r\n      mergeMap((data)=>\r\n        this._authService.register(data).pipe(\r\n          map((registerResponse)=>FlashMessageAction.createMessage({message: registerResponse.message, isError: false})),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  logout$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.logout),\r\n      mergeMap(()=>\r\n        this._authService.logout().pipe(\r\n          tap(()=>{\r\n            // Redirect HomeApp\r\n            console.log('redirection:  ' + frontendLinkUrl.home);\r\n            this._router.navigate([frontendLinkUrl.home])}\r\n          ),\r\n          switchMap((resMessage)=> {\r\n            localStorage.removeItem('user');\r\n            return [\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message logout\r\n              FlashMessageAction.createMessage({message: resMessage, isError: false}),\r\n\r\n\r\n            ]\r\n          }),\r\n          catchError((error)=>{\r\n            localStorage.removeItem('user');\r\n            return from([\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            ])\r\n          }\r\n        )\r\n      )\r\n    )\r\n  ))\r\n\r\n  csrf$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.csrf),\r\n      mergeMap(()=>\r\n        this._authService.csrf().pipe(\r\n          switchMap(()=>[\r\n            // Generation Message Register\r\n            //FlashMessageAction.createMessage({message: csrf, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  captcha$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.captcha),\r\n      mergeMap(()=>\r\n        this._authService.captcha().pipe(\r\n          map((captcha)=>{\r\n            const captchaString = JSON.stringify(captcha);\r\n            localStorage.setItem('captcha', captchaString)\r\n            return AuthAction.captchaSuccess({captcha})\r\n          }),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  activateAccount$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.activateAccount),\r\n      mergeMap((activateAccountDto)=>\r\n        this._authService.activateAccount(activateAccountDto).pipe(\r\n          switchMap((activateAccountResponse)=>[\r\n            // Message de success\r\n            FlashMessageAction.createMessage({message: activateAccountResponse.message, isError: false}),\r\n\r\n            AuthAction.activateAccountSuccess({activateAccountResponse})\r\n          ]\r\n        ),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true}),\r\n              AuthAction.activateAccountFailure()\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  )\r\n\r\n  lostPasswordMailing$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.lostPasswordMailing),\r\n      mergeMap((dto)=>\r\n        this._authService.lostPasswordMailing(dto).pipe(\r\n          map((message)=>FlashMessageAction.createMessage({message: message, isError: false})),\r\n          catchError((error)=>{\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  changePassword$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.changePassword),\r\n      mergeMap((ChangePasswordDto)=>\r\n        this._authService.changePassword(ChangePasswordDto).pipe(\r\n          map((message)=>FlashMessageAction.createMessage({message , isError: false })),\r\n          catchError((error)=>{\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  )\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as AuthAction from \"./action\";\r\nimport { AuthModel } from \"./auth.model\";\r\nimport { ActivatedAccountStatus } from \"../../models/activate-account.model\";\r\n\r\nexport const initialState: AuthModel = {\r\n  error: '',\r\n  isErrorVisible: false,\r\n  isLoading: false,\r\n  captcha: null,\r\n  activateAccountResponse: null\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialState,\r\n  on(AuthAction.login, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.register, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.captchaSuccess,(state, {captcha})=>({\r\n    ...state,\r\n    ...state.captcha, captcha\r\n    })\r\n  ),\r\n  on(AuthAction.leaveRegisterPage, (state)=>({...state, captcha: null})),\r\n  on(AuthAction.activateAccountSuccess, (state, {activateAccountResponse})=>({\r\n    ...state, activateAccountResponse: {\r\n      accountActivatedStatus: ActivatedAccountStatus.SUCCESS,\r\n      message: activateAccountResponse.message\r\n    }\r\n    })\r\n  ),\r\n  on(AuthAction.activateAccountFailure, (state)=>({\r\n    ...state, activateAccountResponse: {\r\n      accountActivatedStatus: ActivatedAccountStatus.FAILURE,\r\n      message: ''\r\n    }\r\n\r\n    })\r\n  )\r\n);\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"src/store/app.state\";\r\n\r\nexport const selector = (state:AppState) => state.authState;\r\n\r\nexport const isErrorVisibleSelector = createSelector(selector, (state) => state.isErrorVisible);\r\nexport const isLoadingSelector = createSelector(selector, (state)=>state.isLoading)\r\nexport const errorMessageSelector = createSelector(selector, (state) => state.error);\r\nexport const captchaSelector = createSelector(selector, (state) => state.captcha);\r\nexport const captchaQuestionSelector = createSelector(selector, (state) => state.captcha?.question);\r\nexport const activateAccountResponseSelector = createSelector(selector, (state) => state.activateAccountResponse);\r\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function passwordValidator(): ValidatorFn {\r\n  return (formGroup: AbstractControl):{[key: string]: boolean} | null => {\r\n    const password = formGroup.get('password')?.value;\r\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\r\n\r\n    if (password !== confirmPassword) {\r\n\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent {\r\n\r\n}\r\n","<p>Erreur page</p>\r\n","import { Component } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n\n  message: string = '';\n\n  constructor(private _homeService: HomeService) { }\n\n  ngOnInit() {\n    this._homeService.getHomeMessage().subscribe(res=> this.message = res);\n  }\n\n}\n","<p>home</p>\n<div class=\"container--center\">\n  <div class=\"p-4 shadow-5\">\n    <h2 class=\"pb-2 font-bold text-xl\">Message du backend</h2>\n    <p *ngIf=\"message; else waitingBlock\">{{message}}</p>\n    <ng-template #waitingBlock>\n      <p-skeleton class=\"p-2\" width=\"10rem\" height=\"1rem\"></p-skeleton>\n    </ng-template>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent {\n\n}\n","<p>not-found-page works!</p>\n","import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent {\n\n  message: string = '';\n\n  constructor(private _userService: UserService) {}\n\n  ngOnInit() {\n    this._userService.getUsers().subscribe(res=>this.message=res);\n  }\n\n}\n","<h2>PAge sur les utilisateurs</h2>\n\n<p>{{message}}</p>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/version\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getHomeMessage(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/users\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getUsers(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n}\n","export default {\r\n  home: {\r\n    url: 'home'\r\n  },\r\n  notFound: {\r\n    url: 'not-found'\r\n  },\r\n  forbidden: {\r\n    url: \"forbidden\"\r\n  },\r\n  error: {\r\n    url: 'error'\r\n  },\r\n  login: {\r\n    url: 'auth/login'\r\n  },\r\n  register: {\r\n    url: 'auth/create-account/user/:user/confirmation/:confirmation'\r\n  },\r\n  accountActivation: {\r\n    url: 'auth/account-activation/user-email/:user-email/confirmation-token/:confirmation-token'\r\n  },\r\n  changeAccountPassword: {\r\n    url: 'auth/change-account-password/user-email/:user-email/change-account-password-token/:confirmation-token'\r\n  },\r\n  lostPasswordMailingPage: {\r\n    url: 'auth/lost-password/mailing'\r\n  },\r\n  userHome: {\r\n    url: 'users-page'\r\n  }\r\n}\r\n","export default {\r\n  accountActivationPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Activation de votre compte',\r\n        en: 'Account activation'\r\n      },\r\n      accountActivationWaitingMessage: {\r\n        fr: 'Attente validation de votre compte',\r\n        en: 'Waiting for account validation'\r\n      },\r\n      accountActivationSuccessMessage: {\r\n        fr: 'Félicitation, votre compte est activé',\r\n        en: 'Congratilation, your account is activated'\r\n      },\r\n      accountActivationErrorMessage: {\r\n        fr: 'Désolé, echec de l\\'activation de votre compte',\r\n        en: 'Sorry, we can\\'t activate your account'\r\n      },\r\n      accountActivationAlreadyDoneMessage: {\r\n        fr: 'Il semble que votre compte soit déjà activé',\r\n        en: 'It\\'s seems that your account is already activated'\r\n      }\r\n    },\r\n    error: {\r\n\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  changePassword: {\r\n    information: {\r\n      title: {\r\n        fr: 'Modification du mot de passe',\r\n        en: 'Password modification'\r\n      },\r\n      changePasswordToken: {\r\n        fr: 'Token pour valider la modification du mot de passe',\r\n        en: 'Token to enable password update'\r\n      },\r\n      password: {\r\n        fr: 'Votre mot de passe',\r\n        en: 'Your password'\r\n      },\r\n      confirmPassword: {\r\n        fr: 'Confirmer votre mot de passe',\r\n        en: 'Confirm your password'\r\n      }\r\n    },\r\n    error: {\r\n      tokenMissing: {\r\n        fr: 'Le token est obligatoire',\r\n        en: 'Token is mandatory'\r\n      },\r\n      passwordMissing: {\r\n        fr: 'Mot de passe manquant',\r\n        en: 'Password missing'\r\n      },\r\n    confirmPasswordMissing: {\r\n      fr: 'Confirmation mot de passe manquant',\r\n      en: 'Confirm password missing'\r\n    },\r\n    confirmPasswordNotMatch: {\r\n      fr: 'Erreur confirmation mot de passe',\r\n      en: 'Confirm password unvalid'\r\n    },\r\n  },\r\n  }\r\n}\r\n","export default {\r\n  loginPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Page de connexion',\r\n        en: 'Login page'\r\n      },\r\n      email: {\r\n        fr: 'Votre email',\r\n        en: 'Email'\r\n      },\r\n      password: {\r\n        fr: 'Votre mot de passe',\r\n        en: 'Your password'\r\n      },\r\n      lostPassword: {\r\n        fr: 'J\\'ai oublié mon mot de passe',\r\n        en: 'I lost my password'\r\n      },\r\n      registerLink: {\r\n        fr: 'Inscription',\r\n        en: 'Register'\r\n      },\r\n      register: {\r\n        fr: 'Pas encore de compte chez nous?',\r\n        en: 'Not yet register?'\r\n      }\r\n    },\r\n    error: {\r\n      emailMissing: {\r\n        fr: 'Email manquant',\r\n        en: 'Email missing'\r\n      },\r\n      emailNotValid: {\r\n        fr: 'Email non valide',\r\n        en: 'Email unvalid'\r\n      },\r\n      passwordMissing: {\r\n        fr: 'Mot de passe manquant',\r\n        en: 'Password missing'\r\n      }\r\n  },\r\n  }\r\n}\r\n","export default {\r\n  lostPasswordMailingPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Oublie du mot de passe',\r\n        en: 'Lost of my password'\r\n      },\r\n      message: {\r\n        fr: 'Nous allons vous renvoyer un lien par mail afin de réinitialiser votre mot de passe',\r\n        en: 'We will send to you a new link on your email in order to reinitialize your password'\r\n      },\r\n      email: {\r\n        fr: 'Votre email',\r\n        en: 'Email'\r\n      }\r\n    },\r\n    error: {\r\n      emailMissing: {\r\n        fr: 'Email manquant',\r\n        en: 'Email missing'\r\n      },\r\n      emailNotValid: {\r\n        fr: 'Email non valide',\r\n        en: 'Email unvalid'\r\n      }\r\n  },\r\n  }\r\n}\r\n","export class MessageUtil {\r\n\r\n  /**\r\n   * Remplie une map de string\r\n   * @returns Map<string, string>\r\n   */\r\n  public static loadMessageInMap(data: object, language: string): Map<string, string> {\r\n    const map: Map<string, string> = new Map();\r\n\r\n    function addEntriesInMap(data: object) {\r\n      Object.entries(data).forEach(([key, value])=>{\r\n        map.set(key,value[language]);\r\n      })\r\n    }\r\n\r\n    addEntriesInMap(data);\r\n\r\n    return map;\r\n  }\r\n}\r\n","export default {\r\n  registerPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Création compte',\r\n        en: 'Create account'\r\n      },\r\n      email: {\r\n        fr: 'Votre email',\r\n        en: 'Email'\r\n      },\r\n      name: {\r\n        fr: 'Votre pseudo',\r\n        en: 'Your nickname '\r\n      },\r\n      password: {\r\n        fr: 'Votre mot de passe',\r\n        en: 'Your password'\r\n      },\r\n      confirmPassword: {\r\n        fr: 'Confirmer votre mot de passe',\r\n        en: 'Confirm your password'\r\n      }\r\n    },\r\n    error: {\r\n      emailMissing: {\r\n        fr: 'Email manquant',\r\n        en: 'Email missing'\r\n      },\r\n      emailNotValid: {\r\n        fr: 'Email non valide',\r\n        en: 'Email unvalid'\r\n      },\r\n      nameMissing: {\r\n        fr: 'Nom manquant',\r\n        en: 'Name missing'\r\n      },\r\n      passwordMissing: {\r\n        fr: 'Mot de passe manquant',\r\n        en: 'Password missing'\r\n      },\r\n    confirmPasswordMissing: {\r\n      fr: 'Confirmation mot de passe manquant',\r\n      en: 'Confirm password missing'\r\n    },\r\n    confirmPasswordNotMatch: {\r\n      fr: 'Erreur confirmation mot de passe',\r\n      en: 'Confirm password unvalid'\r\n    },\r\n    captchaResponseMissing: {\r\n      fr: 'Réponse manquante',\r\n      en: 'Answer missing'\r\n    }\r\n  },\r\n  }\r\n}\r\n","import { environment } from \"src/environments/environment\";\r\n\r\nexport default {\r\n  loginPageTitle:  {\r\n    fr: `${environment.main_page_title} | Page de connexion`,\r\n    en: `${environment.main_page_title} | Login page`\r\n  },\r\n  changeAccountPasswordTitle:  {\r\n    fr: `${environment.main_page_title} | Modification du mot de passe`,\r\n    en: `${environment.main_page_title} | Update password`\r\n  },\r\n  activateAccountTitle:  {\r\n    fr: `${environment.main_page_title} | Activation de votre commpte`,\r\n    en: `${environment.main_page_title} | Account activation`\r\n  },\r\n  lostPasswordMailingTitle:  {\r\n    fr: `${environment.main_page_title} | Perte mot de passe`,\r\n    en: `${environment.main_page_title} | Lost password`\r\n  },\r\n  registerPageTitle:  {\r\n   fr: `${environment.main_page_title} | Inscription`,\r\n    en: `${environment.main_page_title} | Register`\r\n  },\r\n  notFoundPageTitle: {\r\n    fr: `${environment.main_page_title} | Pas de résultat`,\r\n    en: `${environment.main_page_title} | No found`\r\n  },\r\n  forbiddenPageTitle: {\r\n    fr: `${environment.main_page_title} | Interdit`,\r\n    en: `${environment.main_page_title} | Forbidden page`\r\n  },\r\n  errorPageTitle: {\r\n    fr: `${environment.main_page_title} | Erreur`,\r\n    en: `${environment.main_page_title} | Error`\r\n  },\r\n  userHomePageTitle: {\r\n    fr: `${environment.main_page_title} | Votre compte`,\r\n    en: `${environment.main_page_title} | Your account`\r\n  },\r\n  homePageTitle: {\r\n    fr: `${environment.main_page_title}`,\r\n    en: `${environment.main_page_title}`\r\n  }\r\n\r\n}\r\n","import { EnvironmentRef } from \"./environment.ref\";\r\n\r\n/**\r\n * Dev - LocalServer\r\n */\r\nexport const environment: EnvironmentRef = {\r\n  production: false,\r\n  name: 'dev',\r\n  language: 'fr',\r\n  api_base: 'http://localhost:8080/api',\r\n  webapp_path: 'webapp',\r\n  main_page_title: 'My APP'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport { reducers as AuthReducers } from './../app/modules/auth/store/auth-store/reducer';\r\nimport { reducers as UserIdentReducers } from './user-ident-store/reducer';\r\nimport { reducers as MessageReducers } from './flash-message-store/reducer';\r\nimport { AuthModel } from \"src/app/modules/auth/store/auth-store/auth.model\";\r\nimport { UserIdentModel } from \"./user-ident-store/user.ident.model\";\r\nimport { MessageModel } from \"./flash-message-store/message.model\";\r\n\r\nexport interface AppState {\r\n  userIdentState: UserIdentModel;\r\n  authState: AuthModel;\r\n  messageState: MessageModel\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  userIdentState: UserIdentReducers,\r\n  authState: AuthReducers,\r\n  messageState: MessageReducers\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createMessage = createAction('[message] create message', props<{ message: string, isError: boolean }>());\r\n\r\nexport const clearMessage = createAction('[message] clear message');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\n\r\nimport * as FlashMessageAction from './action';\r\nimport { delay, map } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class FlashMessageEffect {\r\n\r\n  constructor(private _action$: Actions){}\r\n\r\n  clear$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(FlashMessageAction.createMessage),\r\n      delay(5000),\r\n      map(()=>FlashMessageAction.clearMessage())\r\n    )\r\n  )\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as MessageAction from \"./action\";\r\nimport { MessageModel } from \"./message.model\";\r\n\r\nexport const initialMessageState: MessageModel = {\r\n  message: '',\r\n  isError: false\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialMessageState,\r\n  on(MessageAction.createMessage, (state, {message, isError})=>({...state, message, isError })),\r\n  on(MessageAction.clearMessage,(state)=>({...state, message: '', isError: false}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.messageState;\r\n\r\nexport const messageSelector = createSelector(selector, (state) => state.message);\r\nexport const isMessageErrorSelector = createSelector(selector, (state) => state.isError);\r\n\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createUserIden = createAction('[user] create user ident', props<{\r\n    userId: BigInt\r\n    email: string,\r\n    jwt:string,\r\n    roles:string[]\r\n  }>()\r\n);\r\n\r\nexport const clearUserIden = createAction('[user] clear user ident');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from \"@ngrx/effects\";\r\nimport * as UserIdentAction from \"./action\";\r\n\r\nimport { map, tap } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n\r\n  constructor(private _action$: Actions){\r\n\r\n  }\r\n\r\n  init$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(ROOT_EFFECTS_INIT),\r\n      tap(value=>{\r\n        console.log(value);\r\n      }),\r\n      map(()=>{\r\n\r\n        const userString = localStorage.getItem('user');\r\n        if(userString) {\r\n          console.log(\"ici, userinfo: \" + userString);\r\n          const user = JSON.parse(userString);\r\n\r\n          return UserIdentAction.createUserIden({\r\n            userId: user.userid,\r\n            email: user.email,\r\n            jwt: user.jwt,\r\n            roles: user.roles\r\n          })\r\n        }\r\n        return { type: '[user] clear user ident'}\r\n      })\r\n    )\r\n  );\r\n\r\n  clearUser$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(UserIdentAction.clearUserIden),\r\n      map(()=>{\r\n        return UserIdentAction.createUserIden({\r\n          userId: BigInt(0),\r\n          jwt: '',\r\n          email: '',\r\n          roles: []\r\n        })\r\n      })\r\n    )\r\n  )\r\n\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as UserIdentAction from \"./action\";\r\nimport { UserIdentModel } from \"./user.ident.model\";\r\n\r\nexport const initialUserState: UserIdentModel = {\r\n  userId: BigInt(0),\r\n  token: '',\r\n  jwt: '',\r\n  email: '',\r\n  roles: []\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialUserState,\r\n  on(UserIdentAction.createUserIden, (state, {email, jwt, userId, roles})=>({...state, email, jwt, userId, roles, token: ''})),\r\n  on(UserIdentAction.clearUserIden,(state)=>({...state, email: '', roles: [], userId: BigInt(0), jwt: '', token: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.userIdentState;\r\n\r\nexport const getEmailSelector = createSelector(selector, (state) => state.email);\r\nexport const getJwtSelector = createSelector(selector, (state)=>state.jwt);\r\n"],"names":["RouterModule","HomePageComponent","NotFoundPageComponent","UserPageComponent","environment","ErrorPageComponent","pageTitle","frontendLinkUrl","routes","path","webapp_path","children","home","url","component","title","homePageTitle","language","error","errorPageTitle","userHome","userHomePageTitle","notFound","notFoundPageTitle","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","isDevMode","BrowserModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","FormsModule","ReactiveFormsModule","StoreDevtoolsModule","StoreModule","EffectsModule","reducers","UserEffect","FlashMessageEffect","HandlerHttpInterceptor","NavbarComponent","FlashMessageComponent","AuthModule","InputTextModule","MessageModule","TabMenuModule","ButtonModule","ConfirmDialogModule","ConfirmationService","CardModule","DividerModule","SkeletonModule","AppModule","bootstrap","provide","useClass","multi","instrument","maxAge","logOnly","serialize","replacer","_key","value","toString","declarations","StoreRootModule","i2","EffectsRootModule","i3","MessageUtil","ComponentBaseApp","messagesData","errorMessages","Map","pageMessages","initializeMessages","loadMessageInMap","information","select","messageSelector","isMessageErrorSelector","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ctx_r0","isErrorMessage$","message_r1","_store","message$","pipe","ɵɵdirectiveInject","Store","consts","FlashMessageComponent_Template","ɵɵtemplate","FlashMessageComponent_div_0_Template","getEmailSelector","Action","ɵɵelementContainerStart","ɵɵlistener","NavbarComponent_ng_container_13_Template_p_button_onClick_2_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","displayLogoutOverlay","ɵɵelementContainerEnd","ɵɵtext","ctx_r2","loginLink","NavbarComponent_ng_container_18_ng_container_13_Template_p_button_onClick_2_listener","_r13","ctx_r12","NavbarComponent_ng_container_18_ng_template_15_Template_li_onClick_0_listener","_r15","ctx_r14","displayMenuOverlay","NavbarComponent_ng_container_18_ng_template_15_Template_a_click_1_listener","ctx_r16","ctx_r10","NavbarComponent_ng_container_18_Template_p_button_onClick_5_listener","_r18","ctx_r17","NavbarComponent_ng_container_18_Template_a_click_8_listener","ctx_r19","NavbarComponent_ng_container_18_Template_li_onClick_10_listener","ctx_r20","NavbarComponent_ng_container_18_Template_a_click_11_listener","ctx_r21","NavbarComponent_ng_container_18_ng_container_13_Template","NavbarComponent_ng_container_18_ng_template_15_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction0","_c0","ctx_r3","homeLink","userLink","userEmail$","_r9","NavbarComponent_ng_container_19_Template_p_button_onClick_6_listener","_r23","ctx_r22","logout","NavbarComponent_ng_container_19_Template_p_button_onClick_7_listener","ctx_r24","ɵɵstyleMap","_c1","isLogoutVisible","isMenuVisible","items","label","routerLink","icon","activeItem","undefined","webappPath","ngOnInit","login","dispatch","onResize","event","checkWidth","window","innerWidth","hostBindings","NavbarComponent_HostBindings","$event","ɵɵresolveWindow","NavbarComponent_Template_h2_click_3_listener","NavbarComponent_ng_container_13_Template","NavbarComponent_ng_template_15_Template","NavbarComponent_ng_container_18_Template","NavbarComponent_ng_container_19_Template","_r1","HttpResponse","tap","Router","_injector","intercept","request","next","urlWithParams","includes","token","user","localStorage","getItem","console","log","userJSON","JSON","parse","jwt","formToken","clone","withCredentials","setHeaders","authorization","handle","csrfToken","headers","get","setItem","errorStatus","status","router","navigate","message","ɵɵinject","Injector","factory","ɵfac","CommonModule","LoginPageComponent","RegisterPageComponent","authRouting","authReducer","AuthEffect","AuthService","PasswordModule","MessagesModule","ShowOnFocusDirective","AccountActivationPageComponent","ChangeAccountPasswordPageComponent","LostPasswordMailingPageComponent","forChild","forFeature","StoreFeatureModule","EffectsFeatureModule","_el","_viewContainer","onFocus","createEmbeddedView","templateRef","onFocusOut","clear","isPrimeNgPasswordInput","target","HTMLInputElement","nativeElement","querySelector","ElementRef","ViewContainerRef","ShowOnFocusDirective_HostBindings","ShowOnFocusDirective_focusout_HostBindingHandler","ActivatedAccountStatus","ActivateAccountResponse","accountActivatedStatus","Captcha","image","mimeType","question","response","AuthAction","activateAccountResponseSelector","appMessage","ɵɵtextInterpolate","ctx_r4","ctx_r5","AccountActivationPageComponent_div_5_div_1_Template","AccountActivationPageComponent_div_5_div_2_Template","activateAccount_r3","activateAccountStatusSuccess","activateAccountStatusFailure","_activatedRoute","_router","accountActivationPage","SUCCESS","FAILURE","activationToken","userEmail","activatedAccountResponse$","csrf","snapshot","paramMap","trim","activateAccount","activateAccountDto","api_base","email","ActivatedRoute","features","ɵɵInheritDefinitionFeature","AccountActivationPageComponent_Template","AccountActivationPageComponent_div_5_Template","AccountActivationPageComponent_ng_template_7_Template","FormGroup","Validators","passwordValidator","_fb","changePassword","changePasswordFG","urlToken","initFormGroup","group","changePasswordToken","required","password","confirmPassword","updatePassword","valid","markAllAsTouched","changePasswordDto","FormBuilder","ChangeAccountPasswordPageComponent_Template","ChangeAccountPasswordPageComponent_Template_form_submit_1_listener","ChangeAccountPasswordPageComponent_ng_template_10_Template","ChangeAccountPasswordPageComponent_div_12_Template","ChangeAccountPasswordPageComponent_li_19_Template","ChangeAccountPasswordPageComponent_li_20_Template","ChangeAccountPasswordPageComponent_li_27_Template","_r0","tmp_6_0","touched","errors","tmp_10_0","tmp_11_0","tmp_13_0","isLoadingSelector","ComponentBase","ctx_r1","loginPage","loginDataFormGroup","isLoading$","registerLink","register","resetPasswordLink","lostPasswordMailingPage","initializeLoginData","logindata","LoginPageComponent_Template","LoginPageComponent_Template_form_submit_2_listener","LoginPageComponent_div_10_Template","LoginPageComponent_div_15_Template","tmp_3_0","tmp_7_0","ɵɵtextInterpolate1","messageData","lostPasswordFG","initialiazeFormData","passwordLinkReinitializer","lostPasswordMailingDto","lostPasswordMailing","LostPasswordMailingPageComponent_Template","LostPasswordMailingPageComponent_Template_form_submit_2_listener","LostPasswordMailingPageComponent_div_12_Template","tmp_4_0","captchaSelector","ctx_r7","RegisterPageComponent_div_34_div_6_Template","captcha_r11","ɵɵsanitizeUrl","tmp_2_0","ctx_r8","registerDataFormGroup","_authService","registerPage","captcha$","initializeRegisterData","initializeForm","ngOnDestroy","leaveRegisterPage","removeItem","name","captchaClientResponse","validators","captcha","registerData","getRegisterDto","RegisterPageComponent_Template","RegisterPageComponent_Template_form_submit_1_listener","RegisterPageComponent_li_11_Template","RegisterPageComponent_li_12_Template","RegisterPageComponent_div_17_Template","RegisterPageComponent_ng_template_23_Template","RegisterPageComponent_div_25_Template","RegisterPageComponent_li_32_Template","RegisterPageComponent_li_33_Template","RegisterPageComponent_div_34_Template","RegisterPageComponent_ng_template_36_Template","_r3","tmp_15_0","tmp_16_0","loginPageTitle","registerPageTitle","accountActivation","activateAccountTitle","changeAccountPassword","changeAccountPasswordTitle","lostPasswordMailingTitle","map","_http","_apiEndPoint","loginDto","post","loginResponse","stringify","userId","id","roles","registerDto","responseType","dto","toCaptchaModel","userString","lostPasswordDto","toActivateAccountModel","imageBase64","imageMimeType","activateStatus","getAcctivateAccountStatus","accountActivateStatus","captchaData","captchaResponse","captchaDataJson","captchaClientResponseDto","clientResponse","toLowerCase","ALREADY_ACTIVATED","HttpClient","providedIn","createAction","props","captchaSuccess","logoutSuccess","logoutFailed","activateAccountSuccess","activateAccountFailure","changePasswordSuccess","changePasswordFailure","createEffect","ofType","UserIdentAction","FlashMessageAction","catchError","from","mergeMap","of","switchMap","_action$","login$","data","createUserIden","createMessage","isError","clearUserIden","register$","registerResponse","logout$","resMessage","csrf$","captchaString","activateAccount$","activateAccountResponse","lostPasswordMailing$","changePassword$","ChangePasswordDto","Actions","createReducer","on","initialState","isErrorVisible","isLoading","state","createSelector","selector","authState","isErrorVisibleSelector","errorMessageSelector","captchaQuestionSelector","formGroup","passwordMismatch","ErrorPageComponent_Template","_homeService","getHomeMessage","subscribe","res","HomeService","HomePageComponent_Template","HomePageComponent_p_6_Template","HomePageComponent_ng_template_7_Template","NotFoundPageComponent_Template","_userService","getUsers","UserService","UserPageComponent_Template","forbidden","fr","en","accountActivationWaitingMessage","accountActivationSuccessMessage","accountActivationErrorMessage","accountActivationAlreadyDoneMessage","tokenMissing","passwordMissing","confirmPasswordMissing","confirmPasswordNotMatch","lostPassword","emailMissing","emailNotValid","addEntriesInMap","Object","entries","forEach","key","set","nameMissing","captchaResponseMissing","main_page_title","forbiddenPageTitle","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","AuthReducers","UserIdentReducers","MessageReducers","userIdentState","messageState","clearMessage","delay","clear$","MessageAction","initialMessageState","ROOT_EFFECTS_INIT","init$","userid","type","clearUser$","BigInt","initialUserState","getJwtSelector"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}