{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/flash-message/flash-message.component.ts","./src/app/components/flash-message/flash-message.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/http.interceptor.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/directives/show-on-focus.directive.ts","./src/app/modules/auth/models/captcha.model.ts","./src/app/modules/auth/models/login-dto.model.ts","./src/app/modules/auth/pages/login-page/login-page.component.ts","./src/app/modules/auth/pages/login-page/login-page.component.html","./src/app/modules/auth/pages/register-page/register-page.component.ts","./src/app/modules/auth/pages/register-page/register-page.component.html","./src/app/modules/auth/routes/auth.routing.ts","./src/app/modules/auth/services/auth.service.ts","./src/app/modules/auth/store/auth-store/action.ts","./src/app/modules/auth/store/auth-store/effect.ts","./src/app/modules/auth/store/auth-store/reducer.ts","./src/app/modules/auth/store/auth-store/selector.ts","./src/app/modules/auth/validators/password.validator.ts","./src/app/pages/error-page/error-page.component.ts","./src/app/pages/error-page/error-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/not-found-page/not-found-page.component.ts","./src/app/pages/not-found-page/not-found-page.component.html","./src/app/pages/user-page/user-page.component.ts","./src/app/pages/user-page/user-page.component.html","./src/app/services/home.service.ts","./src/app/services/user.service.ts","./src/app/utils/frontend-link-url.ts","./src/app/utils/messages/login-page-message.ts","./src/app/utils/messages/message-utils.ts","./src/app/utils/messages/register-page-message.ts","./src/app/utils/page-title.ts","./src/environments/environment.dev.ts","./src/main.ts","./src/store/app.state.ts","./src/store/flash-message-store/action.ts","./src/store/flash-message-store/effect.ts","./src/store/flash-message-store/reducer.ts","./src/store/flash-message-store/selector.ts","./src/store/user-ident-store/action.ts","./src/store/user-ident-store/effect.ts","./src/store/user-ident-store/reducer.ts","./src/store/user-ident-store/selector.ts"],"sourcesContent":["//@ts-nocheck\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { environment } from 'src/environments/environment';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\nimport pageTitle from './utils/page-title';\n\nconst routes: Routes = [\n  {\n    path: environment.webapp_path,\n    children: [\n      { path: \"\", component: HomePageComponent, title: pageTitle.homePageTitle[environment.language]},\n      { path: \"error\", component: ErrorPageComponent, title: pageTitle.errorPageTitle[environment.language]},\n      { path: \"users-page\", component: UserPageComponent, title: pageTitle.userHomePageTitle[environment.language]},\n      { path: \"not-found-page\", component: NotFoundPageComponent, title: pageTitle.notFoundPageTitle[environment.language]}\n    ]\n\n  },\n  { path: \"\", redirectTo: environment.webapp_path, pathMatch: \"full\"},\n  { path: \"**\", redirectTo:\"not-found-page\", title: pageTitle.notFoundPageTitle[environment.language]}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lalamiam';\n}\n","<app-flash-message></app-flash-message>\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { isDevMode, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from 'src/store/app.state';\nimport { UserEffect } from 'src/store/user-ident-store/effect';\nimport { FlashMessageEffect } from 'src/store/flash-message-store/effect';\nimport { HandlerHttpInterceptor } from './http.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { UserPageComponent } from './pages/user-page/user-page.component';\nimport { FlashMessageComponent } from './components/flash-message/flash-message.component';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\nimport { AuthModule } from './modules/auth/auth.module';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MessageModule } from 'primeng/message';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { CardModule } from 'primeng/card';\nimport { DividerModule } from 'primeng/divider';\nimport { SkeletonModule } from 'primeng/skeleton';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomePageComponent,\n    NotFoundPageComponent,\n    UserPageComponent,\n    FlashMessageComponent,\n    ErrorPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AuthModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([UserEffect, FlashMessageEffect]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode(), serialize: {\n      replacer: (_key, value) => (typeof value === \"bigint\" ? value.toString() : value)\n    }\n  }),\n  InputTextModule,\n  MessageModule,\n  TabMenuModule,\n  ButtonModule,\n  ConfirmDialogModule,\n  CardModule,\n  DividerModule,\n  SkeletonModule\n\n  ],\n  providers: [\n    ConfirmationService,\n    {provide: HTTP_INTERCEPTORS, useClass:HandlerHttpInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { messageSelector, isMessageErrorSelector } from 'src/store/flash-message-store/selector';\n\n@Component({\n  selector: 'app-flash-message',\n  templateUrl: './flash-message.component.html',\n  styleUrls: ['./flash-message.component.css']\n})\nexport class FlashMessageComponent {\n\n  message$: Observable<string>;\n  isErrorMessage$: Observable<boolean>\n\n  constructor(private _store: Store<AppState>) {\n    this.message$ = this._store.pipe(select(messageSelector));\n    this.isErrorMessage$ = this._store.pipe(select(isMessageErrorSelector));\n\n  }\n}\n","<div class=\"h-1rem absolute flex justify-content-center w-12\" *ngIf=\"(message$ | async) as message\">\n  <p-message class=\"p-message \" [severity]=\"(isErrorMessage$ | async) ? 'error' : 'success'\" [text]=\"message\" ></p-message>\n</div>\n\n","import { Component, HostListener } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\nimport { getEmailSelector } from 'src/store/user-ident-store/selector';\nimport * as Action from 'src/app/modules/auth/store/auth-store/action'\nimport { environment } from 'src/environments/environment';\nimport { ConfirmationService, MessageService, ConfirmEventType, MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n\n  userEmail$: Observable<string>;\n  isLogoutVisible: boolean = false;\n  isMenuVisible:boolean = false;\n  items: MenuItem[] = [\n    {\n      label: 'Home',\n      routerLink: `/`,\n      icon: 'pi pi-user'\n    },\n    {\n      label: 'User',\n      routerLink: `/`,\n      icon: 'pi pi-cog'\n    }\n  ]\n  activeItem: MenuItem | undefined = undefined;\n\n   /**\n   * Path pour afficher la web_app\n   */\n  webappPath: string = environment.webapp_path;\n\n  homeLink!: string;\n  userLink!: string;\n  registerLink!: string;\n  loginLink!: string\n\n\n  constructor(private _store: Store<AppState>) {\n    this.userEmail$ = this._store.pipe(select(getEmailSelector));\n\n  }\n\n  ngOnInit() {\n    this.homeLink = `/${this.webappPath}`;\n    this.userLink = `/${this.webappPath}/users-page`;\n    this.loginLink = `/${this.webappPath}/connexion`;\n  }\n\n  /**\n   * Toggle LogoutOverlay\n   */\n  displayLogoutOverlay() {\n    this.isLogoutVisible = !this.isLogoutVisible;\n  }\n\n  /**\n   * Toggle MenuOverlay\n   */\n  displayMenuOverlay() {\n    this.isMenuVisible = !this.isMenuVisible;\n  }\n\n  logout() {\n    this._store.dispatch(Action.logout());\n    this.displayLogoutOverlay();\n  }\n\n  /**\n   *\n   * @param event\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.checkWidth();\n  }\n\n  /**\n   *\n   */\n  checkWidth() {\n    if (window.innerWidth > 768 && this.isMenuVisible) {\n      this.isMenuVisible = false;\n    }\n  }\n\n}\n","<nav class=\"p-4\">\n    <div class=\"flex align-items-center justify-content-between w-12\">\n      <!--LOGO - APP-->\n      <div class=\"p-4 navbar-logo cursor-pointer min-w-min\">\n        <h2 (click)=\"displayMenuOverlay()\" class=\"text-3xl font-bold\">MY APP</h2>\n        <!--\n          <img class=\"small\" src=\"assets/hamburger.jpg\" alt=\"My App Logo\" />\n        -->\n      </div>\n      <!--Links menu-->\n      <div class=\"hidden sm:flex w-8\">\n        <ul class=\"p-4 flex justify-content-center w-12\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"mr-4\">\n            <a class=\"link\" [routerLink]=homeLink>Home</a>\n          </li>\n          <li routerLinkActive=\"active\" class=\"mr-4\"><a class=\"link\" [routerLink]=userLink>users</a></li>\n          <ng-container *ngIf=\"(userEmail$ | async) as user; else elseBlock\">\n            <li class=\"right\">\n              <p-button label=\"Déconnexion\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n            </li>\n          </ng-container>\n\n          <ng-template #elseBlock>\n            <li class=\"right\" routerLinkActive=\"active\">\n              <a class=\"link\" [routerLink]=loginLink>\n                <i class=\"pi pi-user\"></i>\n                connexion\n              </a>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n</nav>\n<p-divider></p-divider>\n\n<!--Menu vertical-->\n<ng-container *ngIf=\"isMenuVisible\">\n  <nav class=\"inline sm:hidden\">\n    <div class=\"z-1 bg-black-alpha-10 absolute top-0 left-0 bottom-0 w-full flex justify-content-start align-items-start\">\n      <div class=\"shadow-2 sm:w-6 w-12 max-w-full sm:max-w-30rem min-h-full bg-white flex flex-column justify-content-start align-items-start\">\n        <div class=\"flex w-12 p-2 justify-content-end\">\n          <p-button (onClick)=\"displayMenuOverlay()\"  icon=\"pi pi-times\" [rounded]=\"true\" [text]=\"true\" severity=\"danger \"></p-button>\n        </div>\n        <ul class=\"p-4 flex flex-column justify-content-center w-12\">\n          <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"mr-4\">\n            <a (click)=\"displayMenuOverlay()\" class=\"link\" [routerLink]=homeLink>Home</a>\n          </li>\n          <li (onClick)=\"displayMenuOverlay()\" routerLinkActive=\"active\" class=\"mr-4\">\n            <a (click)=\"displayMenuOverlay()\" class=\"link\" [routerLink]=userLink>users</a>\n          </li>\n          <ng-container *ngIf=\"(userEmail$ | async) as user; else elseBlock\">\n            <li>\n              <p-button label=\"Déconnexion\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n            </li>\n          </ng-container>\n\n          <ng-template #elseBlock>\n            <li (onClick)=\"displayMenuOverlay()\" routerLinkActive=\"active\">\n              <a [routerLink]=loginLink\n              (click)=\"displayMenuOverlay()\">\n                <i class=\"pi pi-user\"></i>\n                connexion\n              </a>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</ng-container>\n\n<!--Confirmation logout-->\n<ng-container *ngIf=\"isLogoutVisible\">\n  <div class=\"z-1 bg-black-alpha-10 absolute top-0 left-0 bottom-0 w-full flex align-items-center justify-content-center\">\n    <div class=\"shadow-2 sm:w-6 max-w-full sm:max-w-30rem bg-white flex flex-column justify-content-center align-items-center\">\n      <p class=\"p-5\">Souhaitez-vous quitter l'application?</p>\n      <div class=\"p-5 w-12  flex flex-column sm:flex-row align-items-center justify-content-center\">\n        <p-button class=\"w-12 m-1\" [style]=\"{ 'width': '100%' }\" label=\" Me deconnecter\" [outlined]=\"true\"  styleClass=\"p-button-secondary\" (onClick)=\"logout()\" icon=\"pi pi-check\"></p-button>\n        <p-button class=\"w-12 m-1\" label=\"Non\"  [style]=\"{ 'width': '100%' }\" (onClick)=\"displayLogoutOverlay()\"></p-button>\n      </div>\n  </div>\n  </div>\n\n</ng-container>\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable()\nexport class HandlerHttpInterceptor implements HttpInterceptor {\n\n  constructor(private _injector: Injector) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(request.urlWithParams.includes('/api/')){\n      let token: string | undefined = undefined;\n\n      const user: any | null = localStorage.getItem('user');\n      console.log(`Données utilisateur : ${user}`)\n\n      if(user !== null) {\n        const userJSON = JSON.parse(user);\n        console.log(`token bearer: : ${userJSON.jwt}`);\n        token = userJSON.jwt;\n      }\n\n      const formToken: string|null = localStorage.getItem('form-csrf-token');\n      request = request.clone({\n        withCredentials: true,\n        setHeaders: {\n          authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Form-Csrf-Token': formToken === null ? '-' : formToken\n        }\n      });\n    }\n    return next.handle(request).pipe(\n      tap(event=>{\n        if(event instanceof HttpResponse) {\n          const csrfToken = event.headers.get('form-csrf-token');\n          if (csrfToken) {\n            localStorage.setItem('form-csrf-token', csrfToken);\n          }\n        }\n      }),\n      tap({\n        error: (error: HttpErrorResponse)=>{\n          const errorStatus: number = error.status;\n          const router = this._injector.get(Router);\n          const webapp_path: string = environment.webapp_path !== '' ?\n          environment.webapp_path+'/' : '';\n          switch(errorStatus) {\n            case 0: {\n              console.log('erreur: 0: ', error.status);\n              router.navigate([`${webapp_path}error`]);\n              break;\n            }\n            case 401: {\n              console.log('erreur: 401: ', error.message);\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 403: {\n\n              console.log('error 403: ', 'error 403');\n              router.navigate([`${webapp_path}connexion`]);\n              break;\n            }\n            case 404: {\n              console.log('error 404: ', error.status);\n              router.navigate([\"not-found-page\"]);\n             break;\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { authRouting } from './routes/auth.routing';\nimport { reducers as authReducer } from './store/auth-store/reducer';\nimport { AuthEffect } from './store/auth-store/effect';\nimport { AuthService } from './services/auth.service';\n\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport { ShowOnFocusDirective } from './directives/show-on-focus.directive';\nimport { SkeletonModule } from 'primeng/skeleton';\n\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    RegisterPageComponent,\n    ShowOnFocusDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRouting),\n    StoreModule.forFeature('authState', authReducer),\n    EffectsModule.forFeature([\n      AuthEffect\n    ]),\n    InputTextModule,\n    PasswordModule,\n    MessagesModule,\n    ButtonModule,\n    MessageModule,\n    DividerModule,\n    SkeletonModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { Directive, ElementRef, HostListener, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Password } from 'primeng/password';\n\n@Directive({\n  selector: '[appShowOnFocus]'\n})\nexport class ShowOnFocusDirective {\n\n  constructor(private _el: ElementRef, private _viewContainer: ViewContainerRef) { }\n\n  @Input('appShowOnFocus') templateRef!: TemplateRef<any>;\n\n  @HostListener('focusin', ['$event']) onFocus(event: FocusEvent) {\n    this._viewContainer.createEmbeddedView(this.templateRef);\n  }\n  @HostListener('focusout', ['$event']) onFocusOut(event: FocusEvent) {\n    this._viewContainer.clear();\n  }\n\n  private isPrimeNgPasswordInput(target: EventTarget | null): boolean {\n    return target instanceof HTMLInputElement && this._el.nativeElement.querySelector('input') === target;\n  }\n}\n","export class Captcha {\r\n  constructor(\r\n    public readonly image: string,\r\n    public readonly mimeType: string,\r\n    public readonly question: string,\r\n    public readonly response: string,\r\n  ) {}\r\n}\r\n","export class LoginDto {\r\n  constructor(public email: string, public password: string) {}\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/store/app.state';\n\nimport { LoginDto } from './../../models/login-dto.model';\nimport { isLoadingSelector } from '../../store/auth-store/selector';\nimport { MessageUtil } from 'src/app/utils/messages/message-utils';\nimport { environment } from 'src/environments/environment';\nimport loginPageMessage from 'src/app/utils/messages/login-page-message';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  loginDataFormGroup: FormGroup = new FormGroup({});\n  isLoading$: Observable<boolean>;\n\n  /**\n   * Path pour afficher la web_app\n   */\n  webappPath: string = environment.webapp_path;\n\n  /**\n   * Link page inscription\n   */\n  registerLink!: string;\n  /**\n   * Erreurs formulaire\n   */\n  errorMessages: Map<string, string> = new Map();\n\n  /**\n   * Info sur champs du formulaire   *\n   */\n  formInput: Map<string, string> = new Map();\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>) {\n    this.isLoading$ = this._store.pipe(select(isLoadingSelector));\n\n  }\n\n  ngOnInit() {\n    this.registerLink =  `/${this.webappPath}/register`\n\n    this._store.dispatch(AuthAction.csrf());\n    this.initializeLoginData();\n    this.initializeFormMessages();\n  }\n\n  /**\n   * Initialisation FormBuilder\n   */\n  initializeLoginData() {\n    this.loginDataFormGroup = this._fb.group({\n      // Email\n      email: ['', Validators.required],\n\n      // Password\n      password: ['', Validators.required]\n    })\n  }\n\n  /**\n   * Chargement des données du Formulaire\n   */\n  initializeFormMessages() {\n    /**\n     * chargement des infos du formulaire\n     */\n    this.formInput = MessageUtil.loadMessageInMap(loginPageMessage.loginPage.information, environment.language)\n\n    /**\n     * Chargement des messages d'erreur\n     */\n    this.errorMessages = MessageUtil.loadMessageInMap(loginPageMessage.loginPage.error, environment.language);\n\n    }\n\n  /**\n   * Login\n   * @returns\n   */\n  login() {\n\n    if (!this.loginDataFormGroup.valid) {\n      return this.loginDataFormGroup.markAllAsTouched();\n    }\n\n    const logindata = new LoginDto(\n      this.loginDataFormGroup.get('email')?.value,\n      this.loginDataFormGroup.get('password')?.value\n    );\n\n    this._store.dispatch(AuthAction.login(logindata));\n\n  }\n\n}\n","<div class=\"container--center\">\n  <div class=\"flex flex-column align-items-center w-full\">\n    <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"loginDataFormGroup\" (submit)=\"login()\" >\n      <p class=\"text-base pt-6 pb-4 font-semibold\">{{formInput.get('title')}}</p>\n      <p-divider class=\"p-2 w-full\"></p-divider>\n\n      <!--Email-->\n      <div class=\"flex flex-column w-full pt-4\">\n        <label class=\"pb-1\" for=\"email\">{{formInput.get('email')}}</label>\n        <input style=\"border-color: var(--first_color)\" type=\"email\" pInputText id=\"email\" formControlName=\"email\" placeholder=\"votre email.\">\n\n         <!--Message erreur-->\n         <div *ngIf=\"loginDataFormGroup.get('email')?.touched && loginDataFormGroup.get('email')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailMissing')\" ></p-message>\n        </div>\n      </div>\n\n      <!-- Mote de passe-->\n      <div class=\"flex flex-column w-full pt-4\">\n        <label class=\"pb-1\" for=\"password\">{{formInput.get('password')}}</label>\n        <p-password\n          id=\"password\"\n          [feedback]=\"false\"\n          [toggleMask]=\"true\"\n          formControlName=\"password\"\n          placeholder=\"mot de passe...\">\n        </p-password>\n\n        <!--Message erreur-->\n        <div *ngIf=\"loginDataFormGroup.get('password')?.touched && loginDataFormGroup.get('password')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('passwordMissing')\" ></p-message>\n        </div>\n      </div>\n\n      <p-button class=\"pt-4\" type=\"submit\" label=\"connexion\"></p-button>\n      <div class=\"flex flex-column w-full pt-4\">\n        <p> {{formInput.get('register')}} </p> <a [routerLink]=registerLink>inscription</a>\n\n      </div>\n    </form>\n  </div>\n</div>\n","//@ts-nocheck\nimport { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as AuthAction from '../../store/auth-store/action'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppState } from 'src/store/app.state';\nimport { Observable } from 'rxjs';\nimport { Message } from 'primeng/api';\n\nimport { RegisterDto } from '../../models/register.dto';\nimport { Captcha } from '../../models/captcha.model';\nimport {  captchaSelector } from '../../store/auth-store/selector';\nimport { passwordValidator } from '../../validators/password.validator';\nimport { environment } from 'src/environments/environment';\nimport appMessage from 'src/app/utils/messages/register-page-message';\nimport { MessageUtil } from 'src/app/utils/messages/message-utils';\nimport { CaptchaClientResponseDto } from '../../models/captcha-client-response.dto';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent {\n\n  registerDataFormGroup: FormGroup = new FormGroup({});\n\n  /**\n   * Erreurs formulaire\n   */\n  errorMessages: Map<string, string> = new Map();\n\n  /**\n   * Info sur champs du formulaire   *\n   */\n  formInput: Map<string, string> = new Map();\n\n  /**\n   * Données pour le captcha\n   */\n  captcha$: Observable<Captcha|null>;\n\n  constructor(private _fb: FormBuilder, private _store: Store<AppState>, private _authService: AuthService){\n    this.captcha$ = _store.pipe(select(captchaSelector));\n  }\n\n  ngOnInit() {\n    this.initializeFormMessages();\n    this.initializeRegisterData();\n    this.initializeForm();\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(AuthAction.leaveRegisterPage());\n    localStorage.removeItem('captcha');\n  }\n\n  /**\n   * Formgroup Init\n   */\n  initializeRegisterData() {\n    this.registerDataFormGroup = this._fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      name : ['', Validators.required],\n      captchaClientResponse: ['', Validators.required]\n    }, {\n      validators: passwordValidator()\n    })\n  }\n\n  /**\n   * CSRF + Captcha\n   */\n  initializeForm() {\n    this._store.dispatch(AuthAction.captcha());\n    this._store.dispatch(AuthAction.csrf());\n  }\n\n  initializeFormMessages() {\n\n    /**\n     * chargement des infos du formulaire\n     */\n    this.formInput = MessageUtil.loadMessageInMap(appMessage.registerPage.information, environment.language)\n\n    /**\n     * Chargement des messages d'erreur\n     */\n    this.errorMessages = MessageUtil.loadMessageInMap(appMessage.registerPage.error, environment.language);\n  }\n\n  register() {\n    if (!this.registerDataFormGroup.valid) {\n      return this.registerDataFormGroup.markAllAsTouched();\n    }\n\n    const email: string = this.registerDataFormGroup.get('email')?.value;\n    const password : string = this.registerDataFormGroup.get('password')?.value;\n    const name: string = this.registerDataFormGroup.get('name')?.value;\n    const captchaClientResponse: string = this.registerDataFormGroup.get('captchaClientResponse')?.value\n\n    const registerData: RegisterDto = this._authService.getRegisterDto(email, password, name, captchaClientResponse);\n\n    this._store.dispatch(AuthAction.register(registerData));\n\n  }\n\n}\n","<div class=\"flex flex-column align-items-center\">\n\n  <form class=\"form--border flex flex-column align-items-center p-4 w-full m-w-500\" [formGroup]=\"registerDataFormGroup\" (submit)=\"register()\">\n    <p class=\"text-base pt-6 pb-4 font-semibold\">{{formInput.get('title')}}</p>\n    <p-divider class=\"p-2 w-full\"></p-divider>\n\n    <!--Email-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"email\">{{formInput.get('email')}}</label>\n      <input style=\"border-color: var(--first_color)\" type=\"email\" pInputText id=\"email\" formControlName=\"email\" aria-describedby=\"email-help\" placeholder=\"votre email...\">\n      <div>\n        <ul>\n          <li *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailMissing')\" ></p-message>\n          </li>\n          <li *ngIf=\"registerDataFormGroup.get('email')?.touched && registerDataFormGroup.get('email')?.errors?.['email']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('emailNotValid')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!--Nom-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"name\">{{formInput.get('name')}}</label>\n      <input\n        style=\"border-color: var(--first_color)\"\n        type=\"text\"\n        pInputText\n        aria-describedby=\"name\"\n        id=\"name\"\n        formControlName=\"name\"\n        placeholder=\"nom\">\n\n        <!--Message erreur-->\n        <div *ngIf=\"registerDataFormGroup.get('name')?.touched && registerDataFormGroup.get('name')?.errors?.['required']\">\n          <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('nameMissing')\" ></p-message>\n        </div>\n    </div>\n\n    <!--mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <div class=\"relative flex flex-column w-full\">\n        <label class=\"pb-1\" for=\"password\">{{formInput.get('password')}}</label>\n        <p-password\n        [appShowOnFocus]=\"passwordTemplate\"\n        id=\"password\"\n        aria-describedby=\"password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"password\"\n        placeholder=\"mot de passe...\">\n        <!--Template indicator-->\n        <ng-template #passwordTemplate>\n          <div class=\"absolute top-100 left-0 shadow-1 p-2 z-1 bg-white\">\n            <p class=\"mt-2 text-sm font-bold\">Contraintes</p>\n            <p-divider class=\"p-2\"></p-divider>\n            <ul class=\"pl-2 ml-2 mt-0\" style=\"line-height: 1.5\">\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en miniscule</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 caractère en majiscule </li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Au moins 1 chiffre</li>\n                <li class=\"text-sm\"><i class=\"pi pi-caret-right\" style=\"font-size: 1rem; color: var(--first_color)\"></i>Minimum 8 caractères</li>\n            </ul>\n          </div>\n        </ng-template>\n      </p-password>\n      </div>\n\n      <!--Message erreur-->\n      <div  *ngIf=\"registerDataFormGroup.get('password')?.touched && registerDataFormGroup.get('password')?.errors?.['required']\">\n        <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('passwordMissing')\" ></p-message>\n      </div>\n    </div>\n\n     <!-- confirmation mot de pase-->\n    <div class=\"flex flex-column w-full pt-4\">\n      <label class=\"pb-1\" for=\"password\">{{formInput.get('confirmPassword')}}</label>\n      <p-password\n        id=\"confirmPassword\"\n        aria-describedby=\"confirm-password-help\"\n        [feedback]=\"false\"\n        [toggleMask]=\"true\"\n        formControlName=\"confirmPassword\"\n        placeholder=\"mot de passe\">\n      </p-password>\n      <div>\n        <ul>\n          <li *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.get('confirmPassword')?.errors?.['required']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordMissing')\" ></p-message>\n          </li>\n          <li *ngIf=\"registerDataFormGroup.get('confirmPassword')?.touched && registerDataFormGroup.errors?.['passwordMismatch']\">\n            <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('confirmPasswordNotMatch')\" ></p-message>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!--captcha-->\n    <div class=\"flex flex-column w-full m-4 p-4 shadow-1\" *ngIf=\"(captcha$ | async) as captcha; else waitingBlock\">\n      <p class=\"mb-2\">{{captcha.question}}</p>\n      <div class=\"flex flex-column align-items-center mb-2\">\n        <img [src]=\"'data:' + captcha.mimeType + ';base64,' + captcha.image\">\n      </div>\n      <input pInputText style=\"border-color: var(--first_color)\" id=\"captchaClientResponse\" type=\"text\" formControlName=\"captchaClientResponse\">\n       <!--Message erreur-->\n       <div   *ngIf=\"registerDataFormGroup.get('captchaClientResponse')?.touched && registerDataFormGroup.get('captchaClientResponse')?.errors?.['required']\">\n        <p-message class=\"p-message\" severity=\"error\" [text]=\"errorMessages.get('captchaResponseMissing')\" ></p-message>\n      </div>\n    </div>\n    <ng-template #waitingBlock>\n      <div class=\"shadow-2 p-4 m-4 w-12\">\n        <p-skeleton class=\"p-2\" width=\"10rem\" height=\"2rem\"></p-skeleton>\n        <p-skeleton class=\"ml-4\" width=\"80%\" height=\"70px\" borderRadius=\"16px\"></p-skeleton>\n        <p-skeleton class=\"p-2\" width=\"10rem\" height=\"35px\"></p-skeleton>\n      </div>\n    </ng-template>\n\n\n    <p-button class=\"pt-4\" type=\"submit\" label=\"creation\"></p-button>\n  </form>\n\n</div>\n","//@ts-nocheck\r\nimport { Route } from \"@angular/router\";\r\nimport { LoginPageComponent } from \"../pages/login-page/login-page.component\";\r\nimport { RegisterPageComponent } from \"../pages/register-page/register-page.component\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport pageTitle from \"src/app/utils/page-title\";\r\n\r\nexport const authRouting: Route[] = [\r\n  {\r\n    path: environment.webapp_path,\r\n    children: [\r\n      { path: \"connexion\", component: LoginPageComponent, title: pageTitle.loginPageTitle[environment.language]},\r\n      { path: \"register\", component: RegisterPageComponent, title: pageTitle.registerPageTitle[environment.language]},\r\n    ]\r\n\r\n  }\r\n]\r\n","import { Injectable } from \"@angular/core\";\r\nimport { LoginDto } from \"../models/login-dto.model\";\r\nimport { map, Observable, of, tap } from \"rxjs\";\r\nimport { LoginResponseDto } from \"../models/login-response.dto\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { RegisterDto } from \"../models/register.dto\";\r\nimport { RegisterResponseDto } from \"../models/register-response.dto\";\r\nimport { Captcha } from \"../models/captcha.model\";\r\nimport { CaptchaDto } from \"../models/captcha.dto\";\r\nimport { CaptchaClientResponseDto } from \"../models/captcha-client-response.dto\";\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class AuthService {\r\n\r\n  private _apiEndPoint: string =  environment.api_base + \"/auth\";\r\n\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public login(loginDto: LoginDto): Observable<LoginResponseDto> {\r\n    return this._http.post<LoginResponseDto>(this._apiEndPoint + \"/login\", loginDto).pipe(\r\n      tap(loginResponse=>{\r\n        localStorage.setItem('user', JSON.stringify({\r\n          userId: loginResponse.id,\r\n          email: loginResponse.email,\r\n          jwt: loginResponse.jwt,\r\n          roles: loginResponse.roles\r\n        }))\r\n      })\r\n    )\r\n  }\r\n\r\n  public register(registerDto: RegisterDto): Observable<RegisterResponseDto> {\r\n    return this._http.post<RegisterResponseDto>(this._apiEndPoint + \"/register\",  registerDto)\r\n  }\r\n\r\n  public csrf(): Observable<string> {\r\n    const path = this._apiEndPoint + \"/csrf\";\r\n      return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  public captcha(): Observable<Captcha> {\r\n    const path = this._apiEndPoint+ \"/captcha\";\r\n    return this._http.get<CaptchaDto>(path).pipe(\r\n      map(dto=>this.toCaptchaModel(dto))\r\n    )\r\n  }\r\n\r\n  public logout(): Observable<string> {\r\n    //const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const user = localStorage.getItem('user');\r\n    let path:string= \"\";\r\n\r\n    if(user!=null)  {\r\n      const userString = JSON.parse(user);\r\n      const userId = userString.userId;\r\n      path = this._apiEndPoint + \"/logout/\" + userId;\r\n    }\r\n    console.log(path);\r\n    return this._http.get(path,{\r\n      responseType: 'text' as const\r\n    });\r\n  }\r\n\r\n  private toCaptchaModel(dto: CaptchaDto): Captcha {\r\n    return new Captcha(dto.imageBase64, dto.imageMimeType, dto.question, dto.response);\r\n  }\r\n\r\n  /**\r\n   * Renvoi un RegisterDto\r\n   * @param email\r\n   * @param password\r\n   * @param name\r\n   * @param captchaClientResponse\r\n   * @returns RegisterDto\r\n   */\r\n  public getRegisterDto(email: string, password: string, name: string, captchaClientResponse: string): RegisterDto {\r\n    const captchaData: string | null = localStorage.getItem('captcha');\r\n    let captchaResponse: string = '';\r\n\r\n\r\n    if(captchaData != null) {\r\n      const captchaDataJson = JSON.parse(captchaData);\r\n      captchaResponse = captchaDataJson.response\r\n    }\r\n\r\n    // Récupération des données du captcha et réponse client\r\n    const captchaClientResponseDto: CaptchaClientResponseDto = {\r\n      captchaResponse,\r\n      clientResponse: captchaClientResponse\r\n    };\r\n\r\n    return  {\r\n      email,\r\n      password,\r\n      name,\r\n      captchaClientResponseDto\r\n    }\r\n  }\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { Captcha } from \"../../models/captcha.model\";\r\nimport { CaptchaClientResponseDto } from \"../../models/captcha-client-response.dto\";\r\n\r\nexport const login = createAction('[Auth] Login client', props<{email: string, password: string}>());\r\nexport const csrf = createAction('[Auth] csrf');\r\nexport const captcha = createAction('[Auth] get captcha')\r\nexport const captchaSuccess = createAction('[Auth] captcha success', props<{captcha: Captcha}>());\r\n\r\nexport const logout = createAction('[Auth] Logout');\r\nexport const logoutSuccess = createAction('[Auth] Logout success', props<{message: string}>());\r\nexport const logoutFailed = createAction('[Auth] Logout failed', props<{error: string, isErrorVisible: boolean}>());\r\n\r\nexport const register = createAction('[Auth] Register client', props<{email: string, password: string, name: string, captchaClientResponseDto: CaptchaClientResponseDto}>());\r\nexport const leaveRegisterPage = createAction('[Auth] leave register page');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport * as AuthAction from \"./action\";\r\nimport * as UserIdentAction from \"src/store/user-ident-store/action\";\r\nimport * as FlashMessageAction from 'src/store/flash-message-store/action';\r\n\r\nimport { catchError, from, map, mergeMap, of, switchMap, tap } from \"rxjs\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport frontendLinkUrl from \"src/app/utils/frontend-link-url\";\r\n\r\n@Injectable()\r\nexport class AuthEffect {\r\n\r\n  constructor(private _action$: Actions, private _authService: AuthService, private _router: Router){}\r\n\r\n  login$ = createEffect(()=>\r\n  this._action$.pipe(\r\n    ofType(AuthAction.login),\r\n    switchMap((data)=>\r\n      this._authService.login(data).pipe(\r\n        switchMap((loginResponse)=> [\r\n          // Creation du UserIdent\r\n          UserIdentAction.createUserIden({\r\n            userId: loginResponse.id,\r\n            email: loginResponse.email,\r\n            jwt: loginResponse.jwt,\r\n            roles: loginResponse.roles\r\n          }),\r\n\r\n          // Generation Message login\r\n          FlashMessageAction.createMessage({message: loginResponse.message, isError: false}),\r\n\r\n\r\n        ]),\r\n        catchError((error)=>from([\r\n          UserIdentAction.clearUserIden(),\r\n          // Generation Message d'erreur\r\n          FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n        ])\r\n        )\r\n      )\r\n    )\r\n  )\r\n  )\r\n\r\n  register$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.register),\r\n      mergeMap((data)=>\r\n        this._authService.register(data).pipe(\r\n          map((registerResponse)=>FlashMessageAction.createMessage({message: registerResponse.message, isError: false})),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  logout$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.logout),\r\n      mergeMap(()=>\r\n        this._authService.logout().pipe(\r\n          tap(()=>{\r\n            // Redirect HomeApp\r\n            console.log('redirection:  ' + frontendLinkUrl.home);\r\n            this._router.navigate([frontendLinkUrl.home])}\r\n          ),\r\n          switchMap((resMessage)=> {\r\n            localStorage.removeItem('user');\r\n            return [\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message logout\r\n              FlashMessageAction.createMessage({message: resMessage, isError: false}),\r\n\r\n\r\n            ]\r\n          }),\r\n          catchError((error)=>{\r\n            localStorage.removeItem('user');\r\n            return from([\r\n              // Suppression du UserIdent\r\n              UserIdentAction.clearUserIden(),\r\n\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            ])\r\n          }\r\n        )\r\n      )\r\n    )\r\n  ))\r\n\r\n  csrf$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.csrf),\r\n      mergeMap(()=>\r\n        this._authService.csrf().pipe(\r\n          switchMap((csrf)=>[\r\n            // Generation Message Register\r\n            FlashMessageAction.createMessage({message: csrf, isError: false})\r\n          ]),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          }\r\n        )\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n  captcha$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(AuthAction.captcha),\r\n      mergeMap(()=>\r\n        this._authService.captcha().pipe(\r\n          map((captcha)=>{\r\n            const captchaString = JSON.stringify(captcha);\r\n            localStorage.setItem('captcha', captchaString)\r\n            return AuthAction.captchaSuccess({captcha})\r\n          }),\r\n          catchError(error=> {\r\n            return of(\r\n              // Generation Message d'erreur\r\n              FlashMessageAction.createMessage({message: error.error.error, isError: true})\r\n            )\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  )\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as AuthAction from \"./action\";\r\nimport { AuthModel } from \"./auth.model\";\r\n\r\nexport const initialState: AuthModel = {\r\n  error: '',\r\n  isErrorVisible: false,\r\n  isLoading: false,\r\n  captcha: null\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialState,\r\n  on(AuthAction.login, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.register, (state)=>({...state, isLoading: true})),\r\n  on(AuthAction.captchaSuccess,(state, {captcha})=>({\r\n    ...state,\r\n    ...state.captcha, captcha\r\n    })\r\n  ),\r\n  on(AuthAction.leaveRegisterPage, (state)=>({...state, captcha: null}))\r\n);\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"src/store/app.state\";\r\n\r\nexport const selector = (state:AppState) => state.authState;\r\n\r\nexport const isErrorVisibleSelector = createSelector(selector, (state) => state.isErrorVisible);\r\nexport const isLoadingSelector = createSelector(selector, (state)=>state.isLoading)\r\nexport const errorMessageSelector = createSelector(selector, (state) => state.error);\r\nexport const captchaSelector = createSelector(selector, (state) => state.captcha);\r\nexport const captchaQuestionSelector = createSelector(selector, (state) => state.captcha?.question)\r\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function passwordValidator(): ValidatorFn {\r\n  return (formGroup: AbstractControl):{[key: string]: boolean} | null => {\r\n    const password = formGroup.get('password')?.value;\r\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\r\n\r\n    if (password !== confirmPassword) {\r\n\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent {\r\n\r\n}\r\n","<p>Erreur page</p>\r\n","import { Component } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n\n  message: string = '';\n\n  constructor(private _homeService: HomeService) { }\n\n  ngOnInit() {\n    this._homeService.getHomeMessage().subscribe(\n      res=> this.message = res,\n      error => console.error('Erreur!', error)\n    );\n  }\n\n}\n","<div class=\"container--center\">\n  <div class=\"p-4 shadow-5\">\n    <h2 class=\"pb-2 font-bold text-xl\">Message du backend</h2>\n    <p *ngIf=\"message; else waitingBlock\">{{message}}</p>\n    <ng-template #waitingBlock>\n      <p-skeleton class=\"p-2\" width=\"10rem\" height=\"1rem\"></p-skeleton>\n    </ng-template>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent {\n\n}\n","<p>not-found-page works!</p>\n","import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent {\n\n  message: string = '';\n\n  constructor(private _userService: UserService) {}\n\n  ngOnInit() {\n    this._userService.getUsers().subscribe(res=>this.message=res);\n  }\n\n}\n","<h2>PAge sur les utilisateurs</h2>\n\n<p>{{message}}</p>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/version\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getHomeMessage(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private _apiEndPoint: string =  environment.api_base + \"/users\";\n\n  constructor(private _http: HttpClient) { }\n\n\n  public getUsers(): Observable<string> {\n    return this._http.get(this._apiEndPoint, {\n      responseType: 'text' as const\n    })\n  }\n}\n","export default {\r\n  home: {\r\n    url: 'home'\r\n  },\r\n  notFound: {\r\n    url: 'not-found'\r\n  },\r\n  forbidden: {\r\n    url: \"forbidden\"\r\n  },\r\n  error: {\r\n    url: 'error'\r\n  },\r\n  login: {\r\n    url: 'auth/login'\r\n  },\r\n  register: {\r\n    url: 'auth/create-account/user/:user/confirmation/:confirmation'\r\n  },\r\n  userHome: {\r\n    url: 'user/home'\r\n  }\r\n}\r\n","export default {\r\n  loginPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Page de connexion',\r\n        en: 'Login page'\r\n      },\r\n      email: {\r\n        fr: 'Votre email',\r\n        en: 'Email'\r\n      },\r\n      password: {\r\n        fr: 'Votre mot de passe',\r\n        en: 'Your password'\r\n      },\r\n      register: {\r\n        fr: 'Pas encore de compte chez nous?',\r\n        en: 'Not yet register?'\r\n      }\r\n    },\r\n    error: {\r\n      emailMissing: {\r\n        fr: 'Email manquant',\r\n        en: 'Email missing'\r\n      },\r\n      emailNotValid: {\r\n        fr: 'Email non valide',\r\n        en: 'Email unvalid'\r\n      },\r\n      passwordMissing: {\r\n        fr: 'Mot de passe manquant',\r\n        en: 'Password missing'\r\n      }\r\n  },\r\n  }\r\n}\r\n","export class MessageUtil {\r\n\r\n  /**\r\n   * Remplie une map de string\r\n   * @returns Map<string, string>\r\n   */\r\n  public static loadMessageInMap(data: object, language: string): Map<string, string> {\r\n\r\n    const map: Map<string, string> = new Map();\r\n\r\n    function addEntriesInMap(data: object) {\r\n      Object.entries(data).forEach(([key, value])=>{\r\n        map.set(key,value[language]);\r\n      })\r\n    }\r\n\r\n    addEntriesInMap(data);\r\n\r\n    return map;\r\n  }\r\n}\r\n","export default {\r\n  registerPage: {\r\n    information: {\r\n      title: {\r\n        fr: 'Création compte',\r\n        en: 'Create account'\r\n      },\r\n      email: {\r\n        fr: 'Votre email',\r\n        en: 'Email'\r\n      },\r\n      name: {\r\n        fr: 'Votre pseudo',\r\n        en: 'Your nickname '\r\n      },\r\n      password: {\r\n        fr: 'Votre mot de passe',\r\n        en: 'Your password'\r\n      },\r\n      confirmPassword: {\r\n        fr: 'Confirmer votre mot de passe',\r\n        en: 'Confirm your password'\r\n      }\r\n    },\r\n    error: {\r\n      emailMissing: {\r\n        fr: 'Email manquant',\r\n        en: 'Email missing'\r\n      },\r\n      emailNotValid: {\r\n        fr: 'Email non valide',\r\n        en: 'Email unvalid'\r\n      },\r\n      nameMissing: {\r\n        fr: 'Nom manquant',\r\n        en: 'Name missing'\r\n      },\r\n      passwordMissing: {\r\n        fr: 'Mot de passe manquant',\r\n        en: 'Password missing'\r\n      },\r\n    confirmPasswordMissing: {\r\n      fr: 'Confirmation mot de passe manquant',\r\n      en: 'Confirm password missing'\r\n    },\r\n    confirmPasswordNotMatch: {\r\n      fr: 'Erreur confirmation mot de passe',\r\n      en: 'Confirm password unvalid'\r\n    },\r\n    captchaResponseMissing: {\r\n      fr: 'Réponse manquante',\r\n      en: 'Answer missing'\r\n    }\r\n  },\r\n  }\r\n}\r\n","import { environment } from \"src/environments/environment\";\r\n\r\nexport default {\r\n  loginPageTitle:  {\r\n    fr: `${environment.main_page_title} | Page de connexion`,\r\n    en: `${environment.main_page_title} | Login page`\r\n  },\r\n  registerPageTitle:  {\r\n   fr: `${environment.main_page_title} | Inscription`,\r\n    en: `${environment.main_page_title} | Register`\r\n  },\r\n  notFoundPageTitle: {\r\n    fr: `${environment.main_page_title} | Pas de résultat`,\r\n    en: `${environment.main_page_title} | No found`\r\n  },\r\n  forbiddenPageTitle: {\r\n    fr: `${environment.main_page_title} | Interdit`,\r\n    en: `${environment.main_page_title} | Forbidden page`\r\n  },\r\n  errorPageTitle: {\r\n    fr: `${environment.main_page_title} | Erreur`,\r\n    en: `${environment.main_page_title} | Error`\r\n  },\r\n  userHomePageTitle: {\r\n    fr: `${environment.main_page_title} | Votre compte`,\r\n    en: `${environment.main_page_title} | Your account`\r\n  },\r\n  homePageTitle: {\r\n    fr: `${environment.main_page_title}`,\r\n    en: `${environment.main_page_title}`\r\n  }\r\n\r\n}\r\n","import { EnvironmentRef } from \"./environment.ref\";\r\n\r\n/**\r\n * Dev - LocalServer\r\n */\r\nexport const environment: EnvironmentRef = {\r\n  production: false,\r\n  name: 'dev',\r\n  language: 'fr',\r\n  api_base: 'http://localhost:8080/api',\r\n  webapp_path: 'webapp',\r\n  main_page_title: 'My APP'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport { reducers as AuthReducers } from './../app/modules/auth/store/auth-store/reducer';\r\nimport { reducers as UserIdentReducers } from './user-ident-store/reducer';\r\nimport { reducers as MessageReducers } from './flash-message-store/reducer';\r\nimport { AuthModel } from \"src/app/modules/auth/store/auth-store/auth.model\";\r\nimport { UserIdentModel } from \"./user-ident-store/user.ident.model\";\r\nimport { MessageModel } from \"./flash-message-store/message.model\";\r\n\r\nexport interface AppState {\r\n  userIdentState: UserIdentModel;\r\n  authState: AuthModel;\r\n  messageState: MessageModel\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  userIdentState: UserIdentReducers,\r\n  authState: AuthReducers,\r\n  messageState: MessageReducers\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createMessage = createAction('[message] create message', props<{ message: string, isError: boolean }>());\r\n\r\nexport const clearMessage = createAction('[message] clear message');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\n\r\nimport * as FlashMessageAction from './action';\r\nimport { delay, map } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class FlashMessageEffect {\r\n\r\n  constructor(private _action$: Actions){}\r\n\r\n  clear$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(FlashMessageAction.createMessage),\r\n      delay(5000),\r\n      map(()=>FlashMessageAction.clearMessage())\r\n    )\r\n  )\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as MessageAction from \"./action\";\r\nimport { MessageModel } from \"./message.model\";\r\n\r\nexport const initialMessageState: MessageModel = {\r\n  message: '',\r\n  isError: false\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialMessageState,\r\n  on(MessageAction.createMessage, (state, {message, isError})=>({...state, message, isError })),\r\n  on(MessageAction.clearMessage,(state)=>({...state, message: '', isError: false}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.messageState;\r\n\r\nexport const messageSelector = createSelector(selector, (state) => state.message);\r\nexport const isMessageErrorSelector = createSelector(selector, (state) => state.isError);\r\n\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const createUserIden = createAction('[user] create user ident', props<{\r\n    userId: BigInt\r\n    email: string,\r\n    jwt:string,\r\n    roles:string[]\r\n  }>()\r\n);\r\n\r\nexport const clearUserIden = createAction('[user] clear user ident');\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from \"@ngrx/effects\";\r\nimport * as UserIdentAction from \"./action\";\r\n\r\nimport { map, tap } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n\r\n  constructor(private _action$: Actions){\r\n\r\n  }\r\n\r\n  init$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(ROOT_EFFECTS_INIT),\r\n      tap(value=>{\r\n        console.log(value);\r\n      }),\r\n      map(()=>{\r\n\r\n        const userString = localStorage.getItem('user');\r\n        if(userString) {\r\n          console.log(\"ici, userinfo: \" + userString);\r\n          const user = JSON.parse(userString);\r\n\r\n          return UserIdentAction.createUserIden({\r\n            userId: user.userid,\r\n            email: user.email,\r\n            jwt: user.jwt,\r\n            roles: user.roles\r\n          })\r\n        }\r\n        return { type: '[user] clear user ident'}\r\n      })\r\n    )\r\n  );\r\n\r\n  clearUser$ = createEffect(()=>\r\n    this._action$.pipe(\r\n      ofType(UserIdentAction.clearUserIden),\r\n      map(()=>{\r\n        return UserIdentAction.createUserIden({\r\n          userId: BigInt(0),\r\n          jwt: '',\r\n          email: '',\r\n          roles: []\r\n        })\r\n      })\r\n    )\r\n  )\r\n\r\n\r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\n\r\nimport * as UserIdentAction from \"./action\";\r\nimport { UserIdentModel } from \"./user.ident.model\";\r\n\r\nexport const initialUserState: UserIdentModel = {\r\n  userId: BigInt(0),\r\n  token: '',\r\n  jwt: '',\r\n  email: '',\r\n  roles: []\r\n}\r\n\r\nexport const reducers = createReducer(\r\n  initialUserState,\r\n  on(UserIdentAction.createUserIden, (state, {email, jwt, userId, roles})=>({...state, email, jwt, userId, roles, token: ''})),\r\n  on(UserIdentAction.clearUserIden,(state)=>({...state, email: '', roles: [], userId: BigInt(0), jwt: '', token: ''}))\r\n)\r\n\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selector = (state: AppState) => state.userIdentState;\r\n\r\nexport const getEmailSelector = createSelector(selector, (state) => state.email);\r\nexport const getJwtSelector = createSelector(selector, (state)=>state.jwt);\r\n"],"names":["RouterModule","HomePageComponent","NotFoundPageComponent","UserPageComponent","environment","ErrorPageComponent","pageTitle","routes","path","webapp_path","children","component","title","homePageTitle","language","errorPageTitle","userHomePageTitle","notFoundPageTitle","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","isDevMode","BrowserModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","FormsModule","ReactiveFormsModule","StoreDevtoolsModule","StoreModule","EffectsModule","reducers","UserEffect","FlashMessageEffect","HandlerHttpInterceptor","NavbarComponent","FlashMessageComponent","AuthModule","InputTextModule","MessageModule","TabMenuModule","ButtonModule","ConfirmDialogModule","ConfirmationService","CardModule","DividerModule","SkeletonModule","AppModule","bootstrap","provide","useClass","multi","instrument","maxAge","logOnly","serialize","replacer","_key","value","toString","declarations","StoreRootModule","i2","EffectsRootModule","i3","select","messageSelector","isMessageErrorSelector","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ctx_r0","isErrorMessage$","message_r1","_store","message$","pipe","ɵɵdirectiveInject","Store","consts","FlashMessageComponent_Template","ɵɵtemplate","FlashMessageComponent_div_0_Template","getEmailSelector","Action","ɵɵelementContainerStart","ɵɵlistener","NavbarComponent_ng_container_13_Template_p_button_onClick_2_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","displayLogoutOverlay","ɵɵelementContainerEnd","ɵɵtext","ctx_r2","loginLink","NavbarComponent_ng_container_18_ng_container_13_Template_p_button_onClick_2_listener","_r13","ctx_r12","NavbarComponent_ng_container_18_ng_template_15_Template_li_onClick_0_listener","_r15","ctx_r14","displayMenuOverlay","NavbarComponent_ng_container_18_ng_template_15_Template_a_click_1_listener","ctx_r16","ctx_r10","NavbarComponent_ng_container_18_Template_p_button_onClick_5_listener","_r18","ctx_r17","NavbarComponent_ng_container_18_Template_a_click_8_listener","ctx_r19","NavbarComponent_ng_container_18_Template_li_onClick_10_listener","ctx_r20","NavbarComponent_ng_container_18_Template_a_click_11_listener","ctx_r21","NavbarComponent_ng_container_18_ng_container_13_Template","NavbarComponent_ng_container_18_ng_template_15_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction0","_c0","ctx_r3","homeLink","userLink","userEmail$","_r9","NavbarComponent_ng_container_19_Template_p_button_onClick_6_listener","_r23","ctx_r22","logout","NavbarComponent_ng_container_19_Template_p_button_onClick_7_listener","ctx_r24","ɵɵstyleMap","_c1","isLogoutVisible","isMenuVisible","items","label","routerLink","icon","activeItem","undefined","webappPath","ngOnInit","dispatch","onResize","event","checkWidth","window","innerWidth","hostBindings","NavbarComponent_HostBindings","$event","ɵɵresolveWindow","NavbarComponent_Template_h2_click_3_listener","NavbarComponent_ng_container_13_Template","NavbarComponent_ng_template_15_Template","NavbarComponent_ng_container_18_Template","NavbarComponent_ng_container_19_Template","_r1","HttpResponse","tap","Router","_injector","intercept","request","next","urlWithParams","includes","token","user","localStorage","getItem","console","log","userJSON","JSON","parse","jwt","formToken","clone","withCredentials","setHeaders","authorization","handle","csrfToken","headers","get","setItem","error","errorStatus","status","router","navigate","message","ɵɵinject","Injector","factory","ɵfac","CommonModule","LoginPageComponent","RegisterPageComponent","authRouting","authReducer","AuthEffect","AuthService","PasswordModule","MessagesModule","ShowOnFocusDirective","forChild","forFeature","StoreFeatureModule","EffectsFeatureModule","_el","_viewContainer","onFocus","createEmbeddedView","templateRef","onFocusOut","clear","isPrimeNgPasswordInput","target","HTMLInputElement","nativeElement","querySelector","ElementRef","ViewContainerRef","ShowOnFocusDirective_HostBindings","ShowOnFocusDirective_focusout_HostBindingHandler","Captcha","image","mimeType","question","response","LoginDto","email","password","FormGroup","Validators","AuthAction","isLoadingSelector","MessageUtil","loginPageMessage","errorMessages","ctx_r1","_fb","loginDataFormGroup","Map","formInput","isLoading$","registerLink","csrf","initializeLoginData","initializeFormMessages","group","required","loadMessageInMap","loginPage","information","login","valid","markAllAsTouched","logindata","FormBuilder","LoginPageComponent_Template","LoginPageComponent_Template_form_submit_2_listener","LoginPageComponent_div_10_Template","LoginPageComponent_div_15_Template","ɵɵtextInterpolate","tmp_3_0","touched","errors","tmp_7_0","ɵɵtextInterpolate1","captchaSelector","passwordValidator","appMessage","ctx_r5","ctx_r7","RegisterPageComponent_div_34_div_6_Template","captcha_r11","ɵɵsanitizeUrl","tmp_2_0","ctx_r8","registerDataFormGroup","_authService","captcha$","initializeRegisterData","initializeForm","ngOnDestroy","leaveRegisterPage","removeItem","confirmPassword","name","captchaClientResponse","validators","captcha","registerPage","register","registerData","getRegisterDto","RegisterPageComponent_Template","RegisterPageComponent_Template_form_submit_1_listener","RegisterPageComponent_li_11_Template","RegisterPageComponent_li_12_Template","RegisterPageComponent_div_17_Template","RegisterPageComponent_ng_template_23_Template","RegisterPageComponent_div_25_Template","RegisterPageComponent_li_32_Template","RegisterPageComponent_li_33_Template","RegisterPageComponent_div_34_Template","RegisterPageComponent_ng_template_36_Template","tmp_4_0","tmp_6_0","_r3","tmp_11_0","tmp_15_0","tmp_16_0","loginPageTitle","registerPageTitle","map","_http","_apiEndPoint","api_base","loginDto","post","loginResponse","stringify","userId","id","roles","registerDto","responseType","dto","toCaptchaModel","userString","imageBase64","imageMimeType","captchaData","captchaResponse","captchaDataJson","captchaClientResponseDto","clientResponse","HttpClient","providedIn","createAction","props","captchaSuccess","logoutSuccess","logoutFailed","createEffect","ofType","UserIdentAction","FlashMessageAction","catchError","from","mergeMap","of","switchMap","frontendLinkUrl","_action$","_router","login$","data","createUserIden","createMessage","isError","clearUserIden","register$","registerResponse","logout$","home","resMessage","csrf$","captchaString","Actions","createReducer","on","initialState","isErrorVisible","isLoading","state","createSelector","selector","authState","isErrorVisibleSelector","errorMessageSelector","captchaQuestionSelector","formGroup","passwordMismatch","ErrorPageComponent_Template","_homeService","getHomeMessage","subscribe","res","HomeService","HomePageComponent_Template","HomePageComponent_p_4_Template","HomePageComponent_ng_template_5_Template","NotFoundPageComponent_Template","_userService","getUsers","UserService","UserPageComponent_Template","url","notFound","forbidden","userHome","fr","en","emailMissing","emailNotValid","passwordMissing","addEntriesInMap","Object","entries","forEach","key","set","nameMissing","confirmPasswordMissing","confirmPasswordNotMatch","captchaResponseMissing","main_page_title","forbiddenPageTitle","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","AuthReducers","UserIdentReducers","MessageReducers","userIdentState","messageState","clearMessage","delay","clear$","MessageAction","initialMessageState","ROOT_EFFECTS_INIT","init$","userid","type","clearUser$","BigInt","initialUserState","getJwtSelector"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}